# serializer version: 1
# name: test_check_saved_audiobooks
  dict({
    '18yVqkdbdRvS24c0Ilj2ci': False,
    '1HGw3J3NxZO1TP1BTtVhpZ': False,
    '7iHfbu1YPACw6oZPAFJtqe': False,
  })
# ---
# name: test_check_saved_episodes
  dict({
    '3o0RYoo5iOMKSmEbunsbvW': True,
    '3o0RYoo5iOMKSmEbunsbvX': False,
  })
# ---
# name: test_check_saved_shows
  dict({
    '18yVqkdbdRvS24c0Ilj2ci': True,
    '1HGw3J3NxZO1TP1BTtVhpZ': False,
  })
# ---
# name: test_check_saved_tracks
  dict({
    '18yVqkdbdRvS24c0Ilj2ci': True,
    '1HGw3J3NxZO1TP1BTtVhpZ': False,
  })
# ---
# name: test_checking_saved_albums
  dict({
    '1A2GTWGtFfWp7KSQTwWOyo': False,
    '2noRn2Aes5aoNVsU6iWTh': True,
    '3IqzqH6ShrRtie9Yd2ODyG': True,
  })
# ---
# name: test_create_playlist[kwargs0]
  dict({
    'collaborative': False,
    'description': 'New playlist description',
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/playlist/2dGgoMPWpapXYA6rX7ZbbB',
    }),
    'images': list([
    ]),
    'name': 'New Playlist',
    'object_type': 'playlist',
    'owner': dict({
      'display_name': 'None',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/user/1112264649',
      }),
      'href': 'https://api.spotify.com/v1/users/1112264649',
      'object_type': 'user',
      'owner_id': '1112264649',
      'uri': 'spotify:user:1112264649',
    }),
    'playlist_id': '2dGgoMPWpapXYA6rX7ZbbB',
    'public': False,
    'tracks': dict({
      'items': list([
      ]),
    }),
    'uri': 'spotify:playlist:2dGgoMPWpapXYA6rX7ZbbB',
  })
# ---
# name: test_create_playlist[kwargs1]
  dict({
    'collaborative': False,
    'description': 'New playlist description',
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/playlist/2dGgoMPWpapXYA6rX7ZbbB',
    }),
    'images': list([
    ]),
    'name': 'New Playlist',
    'object_type': 'playlist',
    'owner': dict({
      'display_name': 'None',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/user/1112264649',
      }),
      'href': 'https://api.spotify.com/v1/users/1112264649',
      'object_type': 'user',
      'owner_id': '1112264649',
      'uri': 'spotify:user:1112264649',
    }),
    'playlist_id': '2dGgoMPWpapXYA6rX7ZbbB',
    'public': False,
    'tracks': dict({
      'items': list([
      ]),
    }),
    'uri': 'spotify:playlist:2dGgoMPWpapXYA6rX7ZbbB',
  })
# ---
# name: test_create_playlist[kwargs2]
  dict({
    'collaborative': False,
    'description': 'New playlist description',
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/playlist/2dGgoMPWpapXYA6rX7ZbbB',
    }),
    'images': list([
    ]),
    'name': 'New Playlist',
    'object_type': 'playlist',
    'owner': dict({
      'display_name': 'None',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/user/1112264649',
      }),
      'href': 'https://api.spotify.com/v1/users/1112264649',
      'object_type': 'user',
      'owner_id': '1112264649',
      'uri': 'spotify:user:1112264649',
    }),
    'playlist_id': '2dGgoMPWpapXYA6rX7ZbbB',
    'public': False,
    'tracks': dict({
      'items': list([
      ]),
    }),
    'uri': 'spotify:playlist:2dGgoMPWpapXYA6rX7ZbbB',
  })
# ---
# name: test_create_playlist[kwargs3]
  dict({
    'collaborative': False,
    'description': 'New playlist description',
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/playlist/2dGgoMPWpapXYA6rX7ZbbB',
    }),
    'images': list([
    ]),
    'name': 'New Playlist',
    'object_type': 'playlist',
    'owner': dict({
      'display_name': 'None',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/user/1112264649',
      }),
      'href': 'https://api.spotify.com/v1/users/1112264649',
      'object_type': 'user',
      'owner_id': '1112264649',
      'uri': 'spotify:user:1112264649',
    }),
    'playlist_id': '2dGgoMPWpapXYA6rX7ZbbB',
    'public': False,
    'tracks': dict({
      'items': list([
      ]),
    }),
    'uri': 'spotify:playlist:2dGgoMPWpapXYA6rX7ZbbB',
  })
# ---
# name: test_get_album
  dict({
    'album_id': '3IqzqH6ShrRtie9Yd2ODyG',
    'album_type': <AlbumType.ALBUM: 'album'>,
    'artists': list([
      dict({
        'artist_id': '3jULn43a6xfzqleyeFjPIq',
        'name': 'Area 11',
        'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
      }),
    ]),
    'images': list([
      dict({
        'height': 640,
        'url': 'https://i.scdn.co/image/ab67616d0000b273a61a28c2f084761f8833bce6',
        'width': 640,
      }),
      dict({
        'height': 300,
        'url': 'https://i.scdn.co/image/ab67616d00001e02a61a28c2f084761f8833bce6',
        'width': 300,
      }),
      dict({
        'height': 64,
        'url': 'https://i.scdn.co/image/ab67616d00004851a61a28c2f084761f8833bce6',
        'width': 64,
      }),
    ]),
    'name': 'SINGLARITY',
    'release_date': '2020-12-18',
    'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
    'total_tracks': 11,
    'tracks': list([
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 260372,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6akJGriy4njdP8fZTPGjwz',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6akJGriy4njdP8fZTPGjwz',
        'is_local': False,
        'name': 'All Your Friends',
        'track_id': '6akJGriy4njdP8fZTPGjwz',
        'track_number': 1,
        'uri': 'spotify:track:6akJGriy4njdP8fZTPGjwz',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 206613,
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/7N02bJK1amhplZ8yAapRS5',
        }),
        'href': 'https://api.spotify.com/v1/tracks/7N02bJK1amhplZ8yAapRS5',
        'is_local': False,
        'name': 'New Magiks',
        'track_id': '7N02bJK1amhplZ8yAapRS5',
        'track_number': 2,
        'uri': 'spotify:track:7N02bJK1amhplZ8yAapRS5',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 237266,
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6wcBBzmaXHTfg6xNWtjhal',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6wcBBzmaXHTfg6xNWtjhal',
        'is_local': False,
        'name': 'Everybody Gets a Piece',
        'track_id': '6wcBBzmaXHTfg6xNWtjhal',
        'track_number': 3,
        'uri': 'spotify:track:6wcBBzmaXHTfg6xNWtjhal',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 244813,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6S1fviwvPfMGD7kk6oAZQN',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6S1fviwvPfMGD7kk6oAZQN',
        'is_local': False,
        'name': 'Curtain Fall',
        'track_id': '6S1fviwvPfMGD7kk6oAZQN',
        'track_number': 4,
        'uri': 'spotify:track:6S1fviwvPfMGD7kk6oAZQN',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 227517,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/0HeSCiPSm1d6V7b4CMHPo3',
        }),
        'href': 'https://api.spotify.com/v1/tracks/0HeSCiPSm1d6V7b4CMHPo3',
        'is_local': False,
        'name': 'Tear Up',
        'track_id': '0HeSCiPSm1d6V7b4CMHPo3',
        'track_number': 5,
        'uri': 'spotify:track:0HeSCiPSm1d6V7b4CMHPo3',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 231891,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/72Q66d8akZekf6AQH414nc',
        }),
        'href': 'https://api.spotify.com/v1/tracks/72Q66d8akZekf6AQH414nc',
        'is_local': False,
        'name': 'ØCULIST',
        'track_id': '72Q66d8akZekf6AQH414nc',
        'track_number': 6,
        'uri': 'spotify:track:72Q66d8akZekf6AQH414nc',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 235540,
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/2X34r3wmh9KhM1LrohGotI',
        }),
        'href': 'https://api.spotify.com/v1/tracks/2X34r3wmh9KhM1LrohGotI',
        'is_local': False,
        'name': 'Kaleidoscope',
        'track_id': '2X34r3wmh9KhM1LrohGotI',
        'track_number': 7,
        'uri': 'spotify:track:2X34r3wmh9KhM1LrohGotI',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 264000,
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/4QGWwmBFhq38PpGj0jRBZg',
        }),
        'href': 'https://api.spotify.com/v1/tracks/4QGWwmBFhq38PpGj0jRBZg',
        'is_local': False,
        'name': 'Desaturate',
        'track_id': '4QGWwmBFhq38PpGj0jRBZg',
        'track_number': 8,
        'uri': 'spotify:track:4QGWwmBFhq38PpGj0jRBZg',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 234493,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/1DPGkXCZA2j9Eu98rrNcoj',
        }),
        'href': 'https://api.spotify.com/v1/tracks/1DPGkXCZA2j9Eu98rrNcoj',
        'is_local': False,
        'name': '(Break) In Case Of...',
        'track_id': '1DPGkXCZA2j9Eu98rrNcoj',
        'track_number': 9,
        'uri': 'spotify:track:1DPGkXCZA2j9Eu98rrNcoj',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 267080,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6FcIiMd7sJSCNweLf6ZRsk',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6FcIiMd7sJSCNweLf6ZRsk',
        'is_local': False,
        'name': 'Dancing on the Head of a Pin',
        'track_id': '6FcIiMd7sJSCNweLf6ZRsk',
        'track_number': 10,
        'uri': 'spotify:track:6FcIiMd7sJSCNweLf6ZRsk',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3jULn43a6xfzqleyeFjPIq',
            'name': 'Area 11',
            'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 288493,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/49i0yyGEPxP19NpGhNhsTv',
        }),
        'href': 'https://api.spotify.com/v1/tracks/49i0yyGEPxP19NpGhNhsTv',
        'is_local': False,
        'name': 'Singularity',
        'track_id': '49i0yyGEPxP19NpGhNhsTv',
        'track_number': 11,
        'uri': 'spotify:track:49i0yyGEPxP19NpGhNhsTv',
      }),
    ]),
    'uri': 'spotify:album:3IqzqH6ShrRtie9Yd2ODyG',
  })
# ---
# name: test_get_album_tracks
  list([
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '7iJrDbKM5fEkGdm5kpjFzS',
          'name': 'Sensato',
          'uri': 'spotify:artist:7iJrDbKM5fEkGdm5kpjFzS',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 85400,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/6OmhkSOpvYBokMKQxpIGx2',
      }),
      'href': 'https://api.spotify.com/v1/tracks/6OmhkSOpvYBokMKQxpIGx2',
      'is_local': False,
      'name': 'Global Warming (feat. Sensato)',
      'track_id': '6OmhkSOpvYBokMKQxpIGx2',
      'track_number': 1,
      'uri': 'spotify:track:6OmhkSOpvYBokMKQxpIGx2',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '2L8yW8GIoirHEdeW4bWQXq',
          'name': 'TJR',
          'uri': 'spotify:artist:2L8yW8GIoirHEdeW4bWQXq',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 206120,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/2iblMMIgSznA464mNov7A8',
      }),
      'href': 'https://api.spotify.com/v1/tracks/2iblMMIgSznA464mNov7A8',
      'is_local': False,
      'name': "Don't Stop the Party (feat. TJR)",
      'track_id': '2iblMMIgSznA464mNov7A8',
      'track_number': 2,
      'uri': 'spotify:track:2iblMMIgSznA464mNov7A8',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '1l7ZsJRRS8wlW3WfJfPfNS',
          'name': 'Christina Aguilera',
          'uri': 'spotify:artist:1l7ZsJRRS8wlW3WfJfPfNS',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 229506,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/4yOn1TEcfsKHUJCL2h1r8I',
      }),
      'href': 'https://api.spotify.com/v1/tracks/4yOn1TEcfsKHUJCL2h1r8I',
      'is_local': False,
      'name': 'Feel This Moment (feat. Christina Aguilera)',
      'track_id': '4yOn1TEcfsKHUJCL2h1r8I',
      'track_number': 3,
      'uri': 'spotify:track:4yOn1TEcfsKHUJCL2h1r8I',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 207440,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/7fmpKF0rLGPnP7kcQ5ZMm7',
      }),
      'href': 'https://api.spotify.com/v1/tracks/7fmpKF0rLGPnP7kcQ5ZMm7',
      'is_local': False,
      'name': 'Back in Time - featured in "Men In Black 3"',
      'track_id': '7fmpKF0rLGPnP7kcQ5ZMm7',
      'track_number': 4,
      'uri': 'spotify:track:7fmpKF0rLGPnP7kcQ5ZMm7',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '7bXgB6jMjp9ATFy66eO08Z',
          'name': 'Chris Brown',
          'uri': 'spotify:artist:7bXgB6jMjp9ATFy66eO08Z',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 221133,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/3jStb2imKd6oUoBT1zq5lp',
      }),
      'href': 'https://api.spotify.com/v1/tracks/3jStb2imKd6oUoBT1zq5lp',
      'is_local': False,
      'name': 'Hope We Meet Again (feat. Chris Brown)',
      'track_id': '3jStb2imKd6oUoBT1zq5lp',
      'track_number': 5,
      'uri': 'spotify:track:3jStb2imKd6oUoBT1zq5lp',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '23zg3TcAtWQy7J6upgbUnj',
          'name': 'USHER',
          'uri': 'spotify:artist:23zg3TcAtWQy7J6upgbUnj',
        }),
        dict({
          'artist_id': '4D75GcNG95ebPtNvoNVXhz',
          'name': 'AFROJACK',
          'uri': 'spotify:artist:4D75GcNG95ebPtNvoNVXhz',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 243160,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/6Q4PYJtrq8CBx7YCY5IyRN',
      }),
      'href': 'https://api.spotify.com/v1/tracks/6Q4PYJtrq8CBx7YCY5IyRN',
      'is_local': False,
      'name': "Party Ain't Over (feat. Usher & Afrojack)",
      'track_id': '6Q4PYJtrq8CBx7YCY5IyRN',
      'track_number': 6,
      'uri': 'spotify:track:6Q4PYJtrq8CBx7YCY5IyRN',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '2DlGxzQSjYe5N6G9nkYghR',
          'name': 'Jennifer Lopez',
          'uri': 'spotify:artist:2DlGxzQSjYe5N6G9nkYghR',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 196920,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/0QTVwqcOsYd73AOkYkk0Hg',
      }),
      'href': 'https://api.spotify.com/v1/tracks/0QTVwqcOsYd73AOkYkk0Hg',
      'is_local': False,
      'name': 'Drinks for You (Ladies Anthem) (feat. J. Lo)',
      'track_id': '0QTVwqcOsYd73AOkYkk0Hg',
      'track_number': 7,
      'uri': 'spotify:track:0QTVwqcOsYd73AOkYkk0Hg',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '2NhdGz9EDv2FeUw6udu2g1',
          'name': 'The Wanted',
          'uri': 'spotify:artist:2NhdGz9EDv2FeUw6udu2g1',
        }),
        dict({
          'artist_id': '4D75GcNG95ebPtNvoNVXhz',
          'name': 'AFROJACK',
          'uri': 'spotify:artist:4D75GcNG95ebPtNvoNVXhz',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 244920,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/10Sydb6AAFPdgCzCKOSZuI',
      }),
      'href': 'https://api.spotify.com/v1/tracks/10Sydb6AAFPdgCzCKOSZuI',
      'is_local': False,
      'name': 'Have Some Fun (feat. The Wanted & Afrojack)',
      'track_id': '10Sydb6AAFPdgCzCKOSZuI',
      'track_number': 8,
      'uri': 'spotify:track:10Sydb6AAFPdgCzCKOSZuI',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '0e9P96siQmxphVXAwTy2pa',
          'name': 'Danny Mercer',
          'uri': 'spotify:artist:0e9P96siQmxphVXAwTy2pa',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 206800,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/4k61iDqmtX9nI7RfLmp9aq',
      }),
      'href': 'https://api.spotify.com/v1/tracks/4k61iDqmtX9nI7RfLmp9aq',
      'is_local': False,
      'name': 'Outta Nowhere (feat. Danny Mercer)',
      'track_id': '4k61iDqmtX9nI7RfLmp9aq',
      'track_number': 9,
      'uri': 'spotify:track:4k61iDqmtX9nI7RfLmp9aq',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '7qG3b048QCHVRO5Pv1T5lw',
          'name': 'Enrique Iglesias',
          'uri': 'spotify:artist:7qG3b048QCHVRO5Pv1T5lw',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 205800,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/7oGRkL31ElVMcevQDceT99',
      }),
      'href': 'https://api.spotify.com/v1/tracks/7oGRkL31ElVMcevQDceT99',
      'is_local': False,
      'name': 'Tchu Tchu Tcha (feat. Enrique Iglesias)',
      'track_id': '7oGRkL31ElVMcevQDceT99',
      'track_number': 10,
      'uri': 'spotify:track:7oGRkL31ElVMcevQDceT99',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '4D75GcNG95ebPtNvoNVXhz',
          'name': 'AFROJACK',
          'uri': 'spotify:artist:4D75GcNG95ebPtNvoNVXhz',
        }),
        dict({
          'artist_id': '1EVWYRr2obCRDoSoD6KSuM',
          'name': 'Havana Brown',
          'uri': 'spotify:artist:1EVWYRr2obCRDoSoD6KSuM',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 219600,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/60xPqMqnHZl7Jfiu6E9q8X',
      }),
      'href': 'https://api.spotify.com/v1/tracks/60xPqMqnHZl7Jfiu6E9q8X',
      'is_local': False,
      'name': 'Last Night (feat. Afrojack & Havana Brown)',
      'track_id': '60xPqMqnHZl7Jfiu6E9q8X',
      'track_number': 11,
      'uri': 'spotify:track:60xPqMqnHZl7Jfiu6E9q8X',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 197520,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/1jAdXqOSICyXYLaW9ioSur',
      }),
      'href': 'https://api.spotify.com/v1/tracks/1jAdXqOSICyXYLaW9ioSur',
      'is_local': False,
      'name': "I'm Off That",
      'track_id': '1jAdXqOSICyXYLaW9ioSur',
      'track_number': 12,
      'uri': 'spotify:track:1jAdXqOSICyXYLaW9ioSur',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '5F2Bwl7Is7KVwTbNbMclIS',
          'name': 'Papayo',
          'uri': 'spotify:artist:5F2Bwl7Is7KVwTbNbMclIS',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 196440,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/0fjRYHFz9ealui1lfnN8it',
      }),
      'href': 'https://api.spotify.com/v1/tracks/0fjRYHFz9ealui1lfnN8it',
      'is_local': False,
      'name': "Echa Pa'lla (Manos Pa'rriba) (feat. Papayo)",
      'track_id': '0fjRYHFz9ealui1lfnN8it',
      'track_number': 13,
      'uri': 'spotify:track:0fjRYHFz9ealui1lfnN8it',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '0z4gvV4rjIZ9wHck67ucSV',
          'name': 'Akon',
          'uri': 'spotify:artist:0z4gvV4rjIZ9wHck67ucSV',
        }),
        dict({
          'artist_id': '5IqWDVLGThjmkm22e3oBU3',
          'name': 'David Rush',
          'uri': 'spotify:artist:5IqWDVLGThjmkm22e3oBU3',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 257613,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/7of35ktwTbL906Z1i3mT4K',
      }),
      'href': 'https://api.spotify.com/v1/tracks/7of35ktwTbL906Z1i3mT4K',
      'is_local': False,
      'name': 'Everybody Fucks (feat. Akon & David Rush)',
      'track_id': '7of35ktwTbL906Z1i3mT4K',
      'track_number': 14,
      'uri': 'spotify:track:7of35ktwTbL906Z1i3mT4K',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '0EmeFodog0BfCgMzAIvKQp',
          'name': 'Shakira',
          'uri': 'spotify:artist:0EmeFodog0BfCgMzAIvKQp',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 245920,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/2JA6A6Y5f4m7PawM58U2Op',
      }),
      'href': 'https://api.spotify.com/v1/tracks/2JA6A6Y5f4m7PawM58U2Op',
      'is_local': False,
      'name': 'Get It Started (feat. Shakira)',
      'track_id': '2JA6A6Y5f4m7PawM58U2Op',
      'track_number': 15,
      'uri': 'spotify:track:2JA6A6Y5f4m7PawM58U2Op',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '3BnF35ARlp8mMeyXTjUZsr',
          'name': 'Vein',
          'uri': 'spotify:artist:3BnF35ARlp8mMeyXTjUZsr',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 217680,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/726qZxwhP0jVyIA0ujnnhb',
      }),
      'href': 'https://api.spotify.com/v1/tracks/726qZxwhP0jVyIA0ujnnhb',
      'is_local': False,
      'name': '11:59 (feat. Vein)',
      'track_id': '726qZxwhP0jVyIA0ujnnhb',
      'track_number': 16,
      'uri': 'spotify:track:726qZxwhP0jVyIA0ujnnhb',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '4wLXwxDeWQ8mtUIRPxGiD6',
          'name': 'Marc Anthony',
          'uri': 'spotify:artist:4wLXwxDeWQ8mtUIRPxGiD6',
        }),
        dict({
          'artist_id': '4MHssKddnziCghmwBHRiEY',
          'name': 'Alle',
          'uri': 'spotify:artist:4MHssKddnziCghmwBHRiEY',
        }),
        dict({
          'artist_id': '4Ws2otunReOa6BbwxxpCt6',
          'name': 'Benny Benassi',
          'uri': 'spotify:artist:4Ws2otunReOa6BbwxxpCt6',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 316480,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/6GPER1Sx8MrBiwWxdulg5Q',
      }),
      'href': 'https://api.spotify.com/v1/tracks/6GPER1Sx8MrBiwWxdulg5Q',
      'is_local': False,
      'name': 'Rain Over Me (feat. Marc Anthony) - Benny Benassi Remix',
      'track_id': '6GPER1Sx8MrBiwWxdulg5Q',
      'track_number': 17,
      'uri': 'spotify:track:6GPER1Sx8MrBiwWxdulg5Q',
    }),
    dict({
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '7bXgB6jMjp9ATFy66eO08Z',
          'name': 'Chris Brown',
          'uri': 'spotify:artist:7bXgB6jMjp9ATFy66eO08Z',
        }),
        dict({
          'artist_id': '5I7l0lSOyusetwCv1aQPMf',
          'name': 'Jump Smokers',
          'uri': 'spotify:artist:5I7l0lSOyusetwCv1aQPMf',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 309626,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/4TWgcICXXfGty8MHGWJ4Ne',
      }),
      'href': 'https://api.spotify.com/v1/tracks/4TWgcICXXfGty8MHGWJ4Ne',
      'is_local': False,
      'name': 'International Love (feat. Chris Brown) - Jump Smokers Extended Mix',
      'track_id': '4TWgcICXXfGty8MHGWJ4Ne',
      'track_number': 18,
      'uri': 'spotify:track:4TWgcICXXfGty8MHGWJ4Ne',
    }),
  ])
# ---
# name: test_get_albums
  list([
    dict({
      'album_id': '382ObEPsp2rxGrnsizN5TX',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
          'name': 'Daft Punk',
          'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b27326597c053b38c9cf93f8f3a9',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e0226597c053b38c9cf93f8f3a9',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d0000485126597c053b38c9cf93f8f3a9',
          'width': 64,
        }),
      ]),
      'name': 'TRON: Legacy Reconfigured',
      'release_date': '2011-01-01',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 15,
      'tracks': list([
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '3a9qv6NLHnsVxJUtKOMHvD',
              'name': 'The Glitch Mob',
              'uri': 'spotify:artist:3a9qv6NLHnsVxJUtKOMHvD',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 262240,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/4lteJuSjb9Jt9W1W7PIU2U',
          }),
          'href': 'https://api.spotify.com/v1/tracks/4lteJuSjb9Jt9W1W7PIU2U',
          'is_local': False,
          'name': 'Derezzed - Remixed by The Glitch Mob',
          'track_id': '4lteJuSjb9Jt9W1W7PIU2U',
          'track_number': 1,
          'uri': 'spotify:track:4lteJuSjb9Jt9W1W7PIU2U',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '4CecgT3PfTiMzdO3pFCDNP',
              'name': 'M83 VS Big Black Delta',
              'uri': 'spotify:artist:4CecgT3PfTiMzdO3pFCDNP',
            }),
            dict({
              'artist_id': '63MQldklfxkjYDoUE4Tppz',
              'name': 'M83',
              'uri': 'spotify:artist:63MQldklfxkjYDoUE4Tppz',
            }),
            dict({
              'artist_id': '2TXpVEw5FbzDh93tLoDm0i',
              'name': 'Big Black Delta',
              'uri': 'spotify:artist:2TXpVEw5FbzDh93tLoDm0i',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 234986,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/66uVqkmHAc0MBUzoPhIypN',
          }),
          'href': 'https://api.spotify.com/v1/tracks/66uVqkmHAc0MBUzoPhIypN',
          'is_local': False,
          'name': 'Fall - Remixed by M83 VS Big Black Delta',
          'track_id': '66uVqkmHAc0MBUzoPhIypN',
          'track_number': 2,
          'uri': 'spotify:track:66uVqkmHAc0MBUzoPhIypN',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '5eKLa1xyHLq8ERWmT1CRHj',
              'name': 'The Crystal Method',
              'uri': 'spotify:artist:5eKLa1xyHLq8ERWmT1CRHj',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 267786,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/4OEnpg5ubhg6OQ4M2ZjtsL',
          }),
          'href': 'https://api.spotify.com/v1/tracks/4OEnpg5ubhg6OQ4M2ZjtsL',
          'is_local': False,
          'name': 'The Grid - Remixed by The Crystal Method',
          'track_id': '4OEnpg5ubhg6OQ4M2ZjtsL',
          'track_number': 3,
          'uri': 'spotify:track:4OEnpg5ubhg6OQ4M2ZjtsL',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '3gqv1kgivAc92KnUm4elKv',
              'name': 'Teddybears',
              'uri': 'spotify:artist:3gqv1kgivAc92KnUm4elKv',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 334346,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/2EyK6JBWqftJlxAuqd0Dsq',
          }),
          'href': 'https://api.spotify.com/v1/tracks/2EyK6JBWqftJlxAuqd0Dsq',
          'is_local': False,
          'name': 'Adagio for TRON - Remixed by Teddybears',
          'track_id': '2EyK6JBWqftJlxAuqd0Dsq',
          'track_number': 4,
          'uri': 'spotify:track:2EyK6JBWqftJlxAuqd0Dsq',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '1mB4aweE1XGdjbFVFC8i5m',
              'name': 'Ki:Theory',
              'uri': 'spotify:artist:1mB4aweE1XGdjbFVFC8i5m',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 291506,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/1TT6gRprLQ5vSWgoWpyKfR',
          }),
          'href': 'https://api.spotify.com/v1/tracks/1TT6gRprLQ5vSWgoWpyKfR',
          'is_local': False,
          'name': 'The Son of Flynn - Remixed by Ki:Theory',
          'track_id': '1TT6gRprLQ5vSWgoWpyKfR',
          'track_number': 5,
          'uri': 'spotify:track:1TT6gRprLQ5vSWgoWpyKfR',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '5MO2kbaGGA2a8kL4c9qqHq',
              'name': 'Paul Oakenfold',
              'uri': 'spotify:artist:5MO2kbaGGA2a8kL4c9qqHq',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 275266,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/6hEvTmmvby9ZTkSdfmPW3m',
          }),
          'href': 'https://api.spotify.com/v1/tracks/6hEvTmmvby9ZTkSdfmPW3m',
          'is_local': False,
          'name': 'C.L.U. - Remixed by Paul Oakenfold',
          'track_id': '6hEvTmmvby9ZTkSdfmPW3m',
          'track_number': 6,
          'uri': 'spotify:track:6hEvTmmvby9ZTkSdfmPW3m',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '3OsRAKCvk37zwYcnzRf5XF',
              'name': 'Moby',
              'uri': 'spotify:artist:3OsRAKCvk37zwYcnzRf5XF',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 392293,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/03uOJUuuTgaFFI1Efal1no',
          }),
          'href': 'https://api.spotify.com/v1/tracks/03uOJUuuTgaFFI1Efal1no',
          'is_local': False,
          'name': 'The Son of Flynn - Remixed by Moby',
          'track_id': '03uOJUuuTgaFFI1Efal1no',
          'track_number': 7,
          'uri': 'spotify:track:03uOJUuuTgaFFI1Efal1no',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '62k5LKMhymqlDNo2DWOvvv',
              'name': 'Boys Noize',
              'uri': 'spotify:artist:62k5LKMhymqlDNo2DWOvvv',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 340186,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/3YYnfKM02WkygOwg6ozfrL',
          }),
          'href': 'https://api.spotify.com/v1/tracks/3YYnfKM02WkygOwg6ozfrL',
          'is_local': False,
          'name': 'End of Line - Remixed by Boys Noize',
          'track_id': '3YYnfKM02WkygOwg6ozfrL',
          'track_number': 8,
          'uri': 'spotify:track:3YYnfKM02WkygOwg6ozfrL',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '6TQj5BFPooTa08A7pk8AQ1',
              'name': 'Kaskade',
              'uri': 'spotify:artist:6TQj5BFPooTa08A7pk8AQ1',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 412440,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/2jFLd9OdNcLsblpv4fDTRn',
          }),
          'href': 'https://api.spotify.com/v1/tracks/2jFLd9OdNcLsblpv4fDTRn',
          'is_local': False,
          'name': 'Rinzler - Remixed by Kaskade',
          'track_id': '2jFLd9OdNcLsblpv4fDTRn',
          'track_number': 9,
          'uri': 'spotify:track:2jFLd9OdNcLsblpv4fDTRn',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '2wouN3QXejYa5tKetYdcVX',
              'name': 'Com Truise',
              'uri': 'spotify:artist:2wouN3QXejYa5tKetYdcVX',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 292093,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/3SL3UavpjRKNMM9UVlE9Bx',
          }),
          'href': 'https://api.spotify.com/v1/tracks/3SL3UavpjRKNMM9UVlE9Bx',
          'is_local': False,
          'name': 'Encom Part 2 - Remixed by Com Truise',
          'track_id': '3SL3UavpjRKNMM9UVlE9Bx',
          'track_number': 10,
          'uri': 'spotify:track:3SL3UavpjRKNMM9UVlE9Bx',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '3hXDMlrPegHRO0zUvBsRSI',
              'name': 'Photek',
              'uri': 'spotify:artist:3hXDMlrPegHRO0zUvBsRSI',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 318720,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/2UBYw2qf9PkvoKQ610ocft',
          }),
          'href': 'https://api.spotify.com/v1/tracks/2UBYw2qf9PkvoKQ610ocft',
          'is_local': False,
          'name': 'End of Line - Remixed by Photek',
          'track_id': '2UBYw2qf9PkvoKQ610ocft',
          'track_number': 11,
          'uri': 'spotify:track:2UBYw2qf9PkvoKQ610ocft',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '5F8v5xSIGtfukNxq0Jqgwh',
              'name': 'The Japanese Popstars',
              'uri': 'spotify:artist:5F8v5xSIGtfukNxq0Jqgwh',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 367720,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/7irNlzUSPNgCDtEyQuS3lm',
          }),
          'href': 'https://api.spotify.com/v1/tracks/7irNlzUSPNgCDtEyQuS3lm',
          'is_local': False,
          'name': 'Arena - Remixed by The Japanese Popstars',
          'track_id': '7irNlzUSPNgCDtEyQuS3lm',
          'track_number': 12,
          'uri': 'spotify:track:7irNlzUSPNgCDtEyQuS3lm',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '1vCWHaC5f2uS3yhpwWbIA6',
              'name': 'Avicii',
              'uri': 'spotify:artist:1vCWHaC5f2uS3yhpwWbIA6',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 303946,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/1rn6JIHBuBZiwvA57jeoOB',
          }),
          'href': 'https://api.spotify.com/v1/tracks/1rn6JIHBuBZiwvA57jeoOB',
          'is_local': False,
          'name': 'Derezzed - Remixed by Avicii',
          'track_id': '1rn6JIHBuBZiwvA57jeoOB',
          'track_number': 13,
          'uri': 'spotify:track:1rn6JIHBuBZiwvA57jeoOB',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '4iVhFmG8YCCEHANGeUUS9q',
              'name': 'Pretty Lights',
              'uri': 'spotify:artist:4iVhFmG8YCCEHANGeUUS9q',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 272853,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/4OgB6TRmIGBRT4NoFxxIQd',
          }),
          'href': 'https://api.spotify.com/v1/tracks/4OgB6TRmIGBRT4NoFxxIQd',
          'is_local': False,
          'name': 'Solar Sailer - Remixed by Pretty Lights',
          'track_id': '4OgB6TRmIGBRT4NoFxxIQd',
          'track_number': 14,
          'uri': 'spotify:track:4OgB6TRmIGBRT4NoFxxIQd',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
            dict({
              'artist_id': '3CfH3WZPzbk5mNDWXpGIy6',
              'name': 'Sander Kleinenberg',
              'uri': 'spotify:artist:3CfH3WZPzbk5mNDWXpGIy6',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 304466,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/1Nv1h7ANN9E4rAjLP4OfgA',
          }),
          'href': 'https://api.spotify.com/v1/tracks/1Nv1h7ANN9E4rAjLP4OfgA',
          'is_local': False,
          'name': 'TRON Legacy (End Titles) - Remixed by Sander Kleinenberg',
          'track_id': '1Nv1h7ANN9E4rAjLP4OfgA',
          'track_number': 15,
          'uri': 'spotify:track:1Nv1h7ANN9E4rAjLP4OfgA',
        }),
      ]),
      'uri': 'spotify:album:382ObEPsp2rxGrnsizN5TX',
    }),
    dict({
      'album_id': '1A2GTWGtFfWp7KSQTwWOyo',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
          'name': 'Daft Punk',
          'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273d8601e15fa1b4351fe1fc6ae',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02d8601e15fa1b4351fe1fc6ae',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851d8601e15fa1b4351fe1fc6ae',
          'width': 64,
        }),
      ]),
      'name': 'Human After All',
      'release_date': '2005-03-14',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 10,
      'tracks': list([
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 319879,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/3aByRUC2BVL6Fs1zI723sd',
          }),
          'href': 'https://api.spotify.com/v1/tracks/3aCKAkMx3yfaj3AO5Gz47e',
          'is_local': False,
          'name': 'Human After All',
          'track_id': '3aCKAkMx3yfaj3AO5Gz47e',
          'track_number': 1,
          'uri': 'spotify:track:3aCKAkMx3yfaj3AO5Gz47e',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 263240,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/2ABpuao3ZbTjP2cSiX9KZc',
          }),
          'href': 'https://api.spotify.com/v1/tracks/0UZRFYMoz9xmeE2AQUhTDl',
          'is_local': False,
          'name': 'The Prime Time of Your Life',
          'track_id': '0UZRFYMoz9xmeE2AQUhTDl',
          'track_number': 2,
          'uri': 'spotify:track:0UZRFYMoz9xmeE2AQUhTDl',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 287720,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/4zu9wo2FXoBSsKjO6tRB3R',
          }),
          'href': 'https://api.spotify.com/v1/tracks/7LL40F6YdZgeiQ6en1c7Lk',
          'is_local': False,
          'name': 'Robot Rock',
          'track_id': '7LL40F6YdZgeiQ6en1c7Lk',
          'track_number': 3,
          'uri': 'spotify:track:7LL40F6YdZgeiQ6en1c7Lk',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 321186,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/07KtTNn0wZndtN5NOYdBWR',
          }),
          'href': 'https://api.spotify.com/v1/tracks/60HSQkYSlJVtdRdHgzRsXz',
          'is_local': False,
          'name': 'Steam Machine',
          'track_id': '60HSQkYSlJVtdRdHgzRsXz',
          'track_number': 4,
          'uri': 'spotify:track:60HSQkYSlJVtdRdHgzRsXz',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 289680,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/1WnXCfO6oIxG0TbJj29MqR',
          }),
          'href': 'https://api.spotify.com/v1/tracks/4ABWPP59ItFKykdaDF09K5',
          'is_local': False,
          'name': 'Make Love',
          'track_id': '4ABWPP59ItFKykdaDF09K5',
          'track_number': 5,
          'uri': 'spotify:track:4ABWPP59ItFKykdaDF09K5',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 248400,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/61qwHnU8dyMqPemGzopDcp',
          }),
          'href': 'https://api.spotify.com/v1/tracks/73MAeHX5sqLYfuYclsrvHc',
          'is_local': False,
          'name': 'The Brainwasher',
          'track_id': '73MAeHX5sqLYfuYclsrvHc',
          'track_number': 6,
          'uri': 'spotify:track:73MAeHX5sqLYfuYclsrvHc',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 19200,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/0cV1dl2k19YoGbxTKDb0rH',
          }),
          'href': 'https://api.spotify.com/v1/tracks/3dWxT7lAv6lmXEW2AEZyPQ',
          'is_local': False,
          'name': 'On / Off',
          'track_id': '3dWxT7lAv6lmXEW2AEZyPQ',
          'track_number': 7,
          'uri': 'spotify:track:3dWxT7lAv6lmXEW2AEZyPQ',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 287840,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/73mTIDCNKGfUF4MiFfR3b5',
          }),
          'href': 'https://api.spotify.com/v1/tracks/37M8nuFfSrlKfTR0AAp7gK',
          'is_local': False,
          'name': 'Television Rules the Nation',
          'track_id': '37M8nuFfSrlKfTR0AAp7gK',
          'track_number': 8,
          'uri': 'spotify:track:37M8nuFfSrlKfTR0AAp7gK',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 284280,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/0LSLM0zuWRkEYemF7JcfEE',
          }),
          'href': 'https://api.spotify.com/v1/tracks/1iNeZGJsoC0D7ZyJTdIbDS',
          'is_local': False,
          'name': 'Technologic',
          'track_id': '1iNeZGJsoC0D7ZyJTdIbDS',
          'track_number': 9,
          'uri': 'spotify:track:1iNeZGJsoC0D7ZyJTdIbDS',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 417320,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/3PsJ6zisndTa3F9eOjBfCc',
          }),
          'href': 'https://api.spotify.com/v1/tracks/0Dezmoeb373GNcYBjLVAMH',
          'is_local': False,
          'name': 'Emotion',
          'track_id': '0Dezmoeb373GNcYBjLVAMH',
          'track_number': 10,
          'uri': 'spotify:track:0Dezmoeb373GNcYBjLVAMH',
        }),
      ]),
      'uri': 'spotify:album:1A2GTWGtFfWp7KSQTwWOyo',
    }),
    dict({
      'album_id': '2noRn2Aes5aoNVsU6iWThc',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
          'name': 'Daft Punk',
          'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2736610c21366e613bfd9f5d197',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e026610c21366e613bfd9f5d197',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048516610c21366e613bfd9f5d197',
          'width': 64,
        }),
      ]),
      'name': 'Discovery',
      'release_date': '2001-03-12',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 14,
      'tracks': list([
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 320357,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/0DiWol3AO6WpXZgp0goxAV',
          }),
          'href': 'https://api.spotify.com/v1/tracks/0DiWol3AO6WpXZgp0goxAV',
          'is_local': False,
          'name': 'One More Time',
          'track_id': '0DiWol3AO6WpXZgp0goxAV',
          'track_number': 1,
          'uri': 'spotify:track:0DiWol3AO6WpXZgp0goxAV',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 212546,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/3H3cOQ6LBLSvmcaV7QkZEu',
          }),
          'href': 'https://api.spotify.com/v1/tracks/3H3cOQ6LBLSvmcaV7QkZEu',
          'is_local': False,
          'name': 'Aerodynamic',
          'track_id': '3H3cOQ6LBLSvmcaV7QkZEu',
          'track_number': 2,
          'uri': 'spotify:track:3H3cOQ6LBLSvmcaV7QkZEu',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 301373,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/2VEZx7NWsZ1D0eJ4uv5Fym',
          }),
          'href': 'https://api.spotify.com/v1/tracks/2VEZx7NWsZ1D0eJ4uv5Fym',
          'is_local': False,
          'name': 'Digital Love',
          'track_id': '2VEZx7NWsZ1D0eJ4uv5Fym',
          'track_number': 3,
          'uri': 'spotify:track:2VEZx7NWsZ1D0eJ4uv5Fym',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 226413,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/5W3cjX2J3tjhG8zb6u0qHn',
          }),
          'href': 'https://api.spotify.com/v1/tracks/5W3cjX2J3tjhG8zb6u0qHn',
          'is_local': False,
          'name': 'Harder, Better, Faster, Stronger',
          'track_id': '5W3cjX2J3tjhG8zb6u0qHn',
          'track_number': 4,
          'uri': 'spotify:track:5W3cjX2J3tjhG8zb6u0qHn',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 211640,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/6vuPZX9fWESg5js2JFTQRJ',
          }),
          'href': 'https://api.spotify.com/v1/tracks/6vuPZX9fWESg5js2JFTQRJ',
          'is_local': False,
          'name': 'Crescendolls',
          'track_id': '6vuPZX9fWESg5js2JFTQRJ',
          'track_number': 5,
          'uri': 'spotify:track:6vuPZX9fWESg5js2JFTQRJ',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 104466,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/63JXZZRbmzooashakb0zbu',
          }),
          'href': 'https://api.spotify.com/v1/tracks/63JXZZRbmzooashakb0zbu',
          'is_local': False,
          'name': 'Nightvision',
          'track_id': '63JXZZRbmzooashakb0zbu',
          'track_number': 6,
          'uri': 'spotify:track:63JXZZRbmzooashakb0zbu',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 237800,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/186hvCTyrni4KT9nwIQ7zS',
          }),
          'href': 'https://api.spotify.com/v1/tracks/186hvCTyrni4KT9nwIQ7zS',
          'is_local': False,
          'name': 'Superheroes',
          'track_id': '186hvCTyrni4KT9nwIQ7zS',
          'track_number': 7,
          'uri': 'spotify:track:186hvCTyrni4KT9nwIQ7zS',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 201800,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/098ttCNmncrO4YvqWUNMvn',
          }),
          'href': 'https://api.spotify.com/v1/tracks/098ttCNmncrO4YvqWUNMvn',
          'is_local': False,
          'name': 'High Life',
          'track_id': '098ttCNmncrO4YvqWUNMvn',
          'track_number': 8,
          'uri': 'spotify:track:098ttCNmncrO4YvqWUNMvn',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 232666,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/1NeLwFETswx8Fzxl2AFl91',
          }),
          'href': 'https://api.spotify.com/v1/tracks/1NeLwFETswx8Fzxl2AFl91',
          'is_local': False,
          'name': 'Something About Us',
          'track_id': '1NeLwFETswx8Fzxl2AFl91',
          'track_number': 9,
          'uri': 'spotify:track:1NeLwFETswx8Fzxl2AFl91',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 227866,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/7cMFjxhbXBpOlais7KMF3j',
          }),
          'href': 'https://api.spotify.com/v1/tracks/7cMFjxhbXBpOlais7KMF3j',
          'is_local': False,
          'name': 'Voyager',
          'track_id': '7cMFjxhbXBpOlais7KMF3j',
          'track_number': 10,
          'uri': 'spotify:track:7cMFjxhbXBpOlais7KMF3j',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 345186,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/2LD2gT7gwAurzdQDQtILds',
          }),
          'href': 'https://api.spotify.com/v1/tracks/2LD2gT7gwAurzdQDQtILds',
          'is_local': False,
          'name': 'Veridis Quo',
          'track_id': '2LD2gT7gwAurzdQDQtILds',
          'track_number': 11,
          'uri': 'spotify:track:2LD2gT7gwAurzdQDQtILds',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 206866,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/4npMbTuxrUA3Wd7edACZ2L',
          }),
          'href': 'https://api.spotify.com/v1/tracks/4npMbTuxrUA3Wd7edACZ2L',
          'is_local': False,
          'name': 'Short Circuit',
          'track_id': '4npMbTuxrUA3Wd7edACZ2L',
          'track_number': 12,
          'uri': 'spotify:track:4npMbTuxrUA3Wd7edACZ2L',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 240173,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/7v9Q0dAb9t7h8gJOkcJHay',
          }),
          'href': 'https://api.spotify.com/v1/tracks/7v9Q0dAb9t7h8gJOkcJHay',
          'is_local': False,
          'name': 'Face to Face',
          'track_id': '7v9Q0dAb9t7h8gJOkcJHay',
          'track_number': 13,
          'uri': 'spotify:track:7v9Q0dAb9t7h8gJOkcJHay',
        }),
        dict({
          'artists': list([
            dict({
              'artist_id': '4tZwfgrHOc3mvqYlEYSvVi',
              'name': 'Daft Punk',
              'uri': 'spotify:artist:4tZwfgrHOc3mvqYlEYSvVi',
            }),
          ]),
          'disc_number': 1,
          'duration_ms': 600293,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/track/3zMvotMEQK3xvH01vA9wAP',
          }),
          'href': 'https://api.spotify.com/v1/tracks/3zMvotMEQK3xvH01vA9wAP',
          'is_local': False,
          'name': 'Too Long',
          'track_id': '3zMvotMEQK3xvH01vA9wAP',
          'track_number': 14,
          'uri': 'spotify:track:3zMvotMEQK3xvH01vA9wAP',
        }),
      ]),
      'uri': 'spotify:album:2noRn2Aes5aoNVsU6iWThc',
    }),
  ])
# ---
# name: test_get_artist
  dict({
    'artist_id': '0TnOYISbd1XYRBk9myaseg',
    'images': list([
      dict({
        'height': 640,
        'url': 'https://i.scdn.co/image/ab6761610000e5ebee07b5820dd91d15d397e29c',
        'width': 640,
      }),
      dict({
        'height': 320,
        'url': 'https://i.scdn.co/image/ab67616100005174ee07b5820dd91d15d397e29c',
        'width': 320,
      }),
      dict({
        'height': 160,
        'url': 'https://i.scdn.co/image/ab6761610000f178ee07b5820dd91d15d397e29c',
        'width': 160,
      }),
    ]),
    'name': 'Pitbull',
    'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
  })
# ---
# name: test_get_artist_albums
  list([
    dict({
      'album_id': '56jg3KJcYmfL7RzYmG2O1Q',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273a0bac1996f26274685db1520',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02a0bac1996f26274685db1520',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851a0bac1996f26274685db1520',
          'width': 64,
        }),
      ]),
      'name': 'Trackhouse (Daytona 500 Edition)',
      'release_date': '2024-02-16',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 7,
      'uri': 'spotify:album:56jg3KJcYmfL7RzYmG2O1Q',
    }),
    dict({
      'album_id': '1l86t4bTNT2j1X0ZBCIv6R',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b27333a4ba8f73271a749c5d953d',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e0233a4ba8f73271a749c5d953d',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d0000485133a4ba8f73271a749c5d953d',
          'width': 64,
        }),
      ]),
      'name': 'Trackhouse',
      'release_date': '2023-10-06',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 14,
      'uri': 'spotify:album:1l86t4bTNT2j1X0ZBCIv6R',
    }),
    dict({
      'album_id': '6nCJAxRvXmPkPiZo8Vh5ZG',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273f0dd8e557b66318ea8e6978d',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02f0dd8e557b66318ea8e6978d',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851f0dd8e557b66318ea8e6978d',
          'width': 64,
        }),
      ]),
      'name': 'Libertad 548',
      'release_date': '2019-09-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 15,
      'uri': 'spotify:album:6nCJAxRvXmPkPiZo8Vh5ZG',
    }),
    dict({
      'album_id': '6ZSNnOY2ESMNoVQ5DdvHrj',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '6RFjbxELOWFXv54t6ccuRZ',
          'name': 'Jorge Gomez',
          'uri': 'spotify:artist:6RFjbxELOWFXv54t6ccuRZ',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273bfb673e097b39939d6f91874',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02bfb673e097b39939d6f91874',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851bfb673e097b39939d6f91874',
          'width': 64,
        }),
      ]),
      'name': 'Gotti (Original Motion Picture Soundtrack)',
      'release_date': '2018-06-14',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 19,
      'uri': 'spotify:album:6ZSNnOY2ESMNoVQ5DdvHrj',
    }),
    dict({
      'album_id': '4jtKPpBQ5eneMwEI94f5Y0',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273847d47b2d33517f0e8b2b958',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02847d47b2d33517f0e8b2b958',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851847d47b2d33517f0e8b2b958',
          'width': 64,
        }),
      ]),
      'name': 'Climate Change',
      'release_date': '2017-03-17',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 12,
      'uri': 'spotify:album:4jtKPpBQ5eneMwEI94f5Y0',
    }),
    dict({
      'album_id': '0tKKoGCz9CaZ3x1hDD6Ss2',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b27361fd3efe3692e389a9dd09bf',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e0261fd3efe3692e389a9dd09bf',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d0000485161fd3efe3692e389a9dd09bf',
          'width': 64,
        }),
      ]),
      'name': 'Dale',
      'release_date': '2015-06-30',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 12,
      'uri': 'spotify:album:0tKKoGCz9CaZ3x1hDD6Ss2',
    }),
    dict({
      'album_id': '4EUf4YyNjuXypWY6W5wEDm',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2731e340d1480e7bb29a45e3bd7',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e021e340d1480e7bb29a45e3bd7',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048511e340d1480e7bb29a45e3bd7',
          'width': 64,
        }),
      ]),
      'name': 'Globalization',
      'release_date': '2014-11-21',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 11,
      'uri': 'spotify:album:4EUf4YyNjuXypWY6W5wEDm',
    }),
    dict({
      'album_id': '4aawyAB9vmqN3uQ7FjRGTy',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2732c5b24ecfa39523a75c993c4',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e022c5b24ecfa39523a75c993c4',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048512c5b24ecfa39523a75c993c4',
          'width': 64,
        }),
      ]),
      'name': 'Global Warming',
      'release_date': '2012-11-16',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 18,
      'uri': 'spotify:album:4aawyAB9vmqN3uQ7FjRGTy',
    }),
    dict({
      'album_id': '2F7tejLHzTqFq2XLol9ZGy',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273f2486b438645e97b523e4f90',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02f2486b438645e97b523e4f90',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851f2486b438645e97b523e4f90',
          'width': 64,
        }),
      ]),
      'name': 'Global Warming: Meltdown (Deluxe Version)',
      'release_date': '2012',
      'release_date_precision': <ReleaseDatePrecision.YEAR: 'year'>,
      'total_tracks': 17,
      'uri': 'spotify:album:2F7tejLHzTqFq2XLol9ZGy',
    }),
    dict({
      'album_id': '4rG0MhkU6UojACJxkMHIXB',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2731dc7483a9fcfce54822a2f19',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e021dc7483a9fcfce54822a2f19',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048511dc7483a9fcfce54822a2f19',
          'width': 64,
        }),
      ]),
      'name': 'Planet Pit (Deluxe Version)',
      'release_date': '2011-06-17',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 16,
      'uri': 'spotify:album:4rG0MhkU6UojACJxkMHIXB',
    }),
    dict({
      'album_id': '1q23hvi1qvoADt2fh7FO7P',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2733eb0fc423b496236f33cb033',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e023eb0fc423b496236f33cb033',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048513eb0fc423b496236f33cb033',
          'width': 64,
        }),
      ]),
      'name': 'Armando (Deluxe)',
      'release_date': '2010-11-02',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 14,
      'uri': 'spotify:album:1q23hvi1qvoADt2fh7FO7P',
    }),
    dict({
      'album_id': '0kv3Rm7PODqJBQaVJiezuB',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2731091bce0b9d981cac5e4091c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e021091bce0b9d981cac5e4091c',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048511091bce0b9d981cac5e4091c',
          'width': 64,
        }),
      ]),
      'name': 'I Am Armando - Armando Reloaded',
      'release_date': '2010',
      'release_date_precision': <ReleaseDatePrecision.YEAR: 'year'>,
      'total_tracks': 14,
      'uri': 'spotify:album:0kv3Rm7PODqJBQaVJiezuB',
    }),
    dict({
      'album_id': '5xLAcbvbSAlRtPXnKkggXA',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b27326d73ab8423a350faa5d395a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e0226d73ab8423a350faa5d395a',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d0000485126d73ab8423a350faa5d395a',
          'width': 64,
        }),
      ]),
      'name': 'Pitbull Starring In Rebelution',
      'release_date': '2009-10-23',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 15,
      'uri': 'spotify:album:5xLAcbvbSAlRtPXnKkggXA',
    }),
    dict({
      'album_id': '6ODOJvYpaQ3p0O6Agrlt4B',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273e5de6d02e83f63e381f0932b',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02e5de6d02e83f63e381f0932b',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851e5de6d02e83f63e381f0932b',
          'width': 64,
        }),
      ]),
      'name': 'The Boatlift - Clean',
      'release_date': '2007-11-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 18,
      'uri': 'spotify:album:6ODOJvYpaQ3p0O6Agrlt4B',
    }),
    dict({
      'album_id': '7m9AYxqeFPagkaqlg6WE0J',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2734b6e3bb6e298b4477bf2f6f0',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e024b6e3bb6e298b4477bf2f6f0',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048514b6e3bb6e298b4477bf2f6f0',
          'width': 64,
        }),
      ]),
      'name': 'The Boatlift',
      'release_date': '2007-11-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 18,
      'uri': 'spotify:album:7m9AYxqeFPagkaqlg6WE0J',
    }),
    dict({
      'album_id': '69bXbGpsjbLtygqiiaXIqf',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b27363f27725465f14449c8258cb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e0263f27725465f14449c8258cb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d0000485163f27725465f14449c8258cb',
          'width': 64,
        }),
      ]),
      'name': 'El Mariel - Clean',
      'release_date': '2006-10-31',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 21,
      'uri': 'spotify:album:69bXbGpsjbLtygqiiaXIqf',
    }),
    dict({
      'album_id': '7rOcmdW8dWxlScy6AUgjI8',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2731b05e8f15f93dd1247e90c49',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e021b05e8f15f93dd1247e90c49',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048511b05e8f15f93dd1247e90c49',
          'width': 64,
        }),
      ]),
      'name': 'El Mariel',
      'release_date': '2006-10-31',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 21,
      'uri': 'spotify:album:7rOcmdW8dWxlScy6AUgjI8',
    }),
    dict({
      'album_id': '0gayfOCt1DJX4j8MOhv7we',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2731357b1be0bd99e8c01e8acb7',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e021357b1be0bd99e8c01e8acb7',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048511357b1be0bd99e8c01e8acb7',
          'width': 64,
        }),
      ]),
      'name': 'Money Is Still A Major Issue',
      'release_date': '2005',
      'release_date_precision': <ReleaseDatePrecision.YEAR: 'year'>,
      'total_tracks': 13,
      'uri': 'spotify:album:0gayfOCt1DJX4j8MOhv7we',
    }),
    dict({
      'album_id': '76N6imyjQ9h5p2NzakHT32',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b27300650b5e6be3af579ae18e7c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e0200650b5e6be3af579ae18e7c',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d0000485100650b5e6be3af579ae18e7c',
          'width': 64,
        }),
      ]),
      'name': 'M.I.A.M.I.',
      'release_date': '2004-08-24',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 16,
      'uri': 'spotify:album:76N6imyjQ9h5p2NzakHT32',
    }),
    dict({
      'album_id': '3ZzkxHr39xEJvbl7UWKcPZ',
      'album_type': <AlbumType.SINGLE: 'single'>,
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '21E3waRsmPlU7jZsS13rcj',
          'name': 'Ne-Yo',
          'uri': 'spotify:artist:21E3waRsmPlU7jZsS13rcj',
        }),
        dict({
          'artist_id': '4D75GcNG95ebPtNvoNVXhz',
          'name': 'AFROJACK',
          'uri': 'spotify:artist:4D75GcNG95ebPtNvoNVXhz',
        }),
      ]),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273dd5004cdbb35c0903e1fcf0a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02dd5004cdbb35c0903e1fcf0a',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851dd5004cdbb35c0903e1fcf0a',
          'width': 64,
        }),
      ]),
      'name': '2 The Moon (The Remixes)',
      'release_date': '2024-09-20',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 5,
      'uri': 'spotify:album:3ZzkxHr39xEJvbl7UWKcPZ',
    }),
  ])
# ---
# name: test_get_artist_top_tracks
  list([
    dict({
      'album': dict({
        'album_id': '4rG0MhkU6UojACJxkMHIXB',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0TnOYISbd1XYRBk9myaseg',
            'name': 'Pitbull',
            'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2731dc7483a9fcfce54822a2f19',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e021dc7483a9fcfce54822a2f19',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048511dc7483a9fcfce54822a2f19',
            'width': 64,
          }),
        ]),
        'name': 'Planet Pit (Deluxe Version)',
        'release_date': '2011-06-17',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 16,
        'uri': 'spotify:album:4rG0MhkU6UojACJxkMHIXB',
      }),
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '4D75GcNG95ebPtNvoNVXhz',
          'name': 'AFROJACK',
          'uri': 'spotify:artist:4D75GcNG95ebPtNvoNVXhz',
        }),
        dict({
          'artist_id': '21E3waRsmPlU7jZsS13rcj',
          'name': 'Ne-Yo',
          'uri': 'spotify:artist:21E3waRsmPlU7jZsS13rcj',
        }),
        dict({
          'artist_id': '1ruutHJcECI7cos2n5TqpO',
          'name': 'Nayer',
          'uri': 'spotify:artist:1ruutHJcECI7cos2n5TqpO',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 252306,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/4QNpBfC0zvjKqPJcyqBy9W',
      }),
      'href': 'https://api.spotify.com/v1/tracks/4QNpBfC0zvjKqPJcyqBy9W',
      'is_local': False,
      'name': 'Give Me Everything (feat. Nayer)',
      'track_id': '4QNpBfC0zvjKqPJcyqBy9W',
      'track_number': 2,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:4QNpBfC0zvjKqPJcyqBy9W',
    }),
    dict({
      'album': dict({
        'album_id': '2F7tejLHzTqFq2XLol9ZGy',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0TnOYISbd1XYRBk9myaseg',
            'name': 'Pitbull',
            'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273f2486b438645e97b523e4f90',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02f2486b438645e97b523e4f90',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851f2486b438645e97b523e4f90',
            'width': 64,
          }),
        ]),
        'name': 'Global Warming: Meltdown (Deluxe Version)',
        'release_date': '2012',
        'release_date_precision': <ReleaseDatePrecision.YEAR: 'year'>,
        'total_tracks': 17,
        'uri': 'spotify:album:2F7tejLHzTqFq2XLol9ZGy',
      }),
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '6LqNN22kT3074XbTVUrhzX',
          'name': 'Kesha',
          'uri': 'spotify:artist:6LqNN22kT3074XbTVUrhzX',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 204160,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/3cHyrEgdyYRjgJKSOiOtcS',
      }),
      'href': 'https://api.spotify.com/v1/tracks/3cHyrEgdyYRjgJKSOiOtcS',
      'is_local': False,
      'name': 'Timber',
      'track_id': '3cHyrEgdyYRjgJKSOiOtcS',
      'track_number': 13,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:3cHyrEgdyYRjgJKSOiOtcS',
    }),
    dict({
      'album': dict({
        'album_id': '6A1F3Fkq5dYeYYNkXflcTX',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '23zg3TcAtWQy7J6upgbUnj',
            'name': 'USHER',
            'uri': 'spotify:artist:23zg3TcAtWQy7J6upgbUnj',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27386b0c9728ad3ed338eaeea79',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0286b0c9728ad3ed338eaeea79',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485186b0c9728ad3ed338eaeea79',
            'width': 64,
          }),
        ]),
        'name': 'Raymond v Raymond (Expanded Edition)',
        'release_date': '2010-03-30',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 22,
        'uri': 'spotify:album:6A1F3Fkq5dYeYYNkXflcTX',
      }),
      'artists': list([
        dict({
          'artist_id': '23zg3TcAtWQy7J6upgbUnj',
          'name': 'USHER',
          'uri': 'spotify:artist:23zg3TcAtWQy7J6upgbUnj',
        }),
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 220800,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/4356Typ82hUiFAynbLYbPn',
      }),
      'href': 'https://api.spotify.com/v1/tracks/4356Typ82hUiFAynbLYbPn',
      'is_local': False,
      'name': "DJ Got Us Fallin' In Love (feat. Pitbull)",
      'track_id': '4356Typ82hUiFAynbLYbPn',
      'track_number': 16,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:4356Typ82hUiFAynbLYbPn',
    }),
    dict({
      'album': dict({
        'album_id': '4EUf4YyNjuXypWY6W5wEDm',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0TnOYISbd1XYRBk9myaseg',
            'name': 'Pitbull',
            'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2731e340d1480e7bb29a45e3bd7',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e021e340d1480e7bb29a45e3bd7',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048511e340d1480e7bb29a45e3bd7',
            'width': 64,
          }),
        ]),
        'name': 'Globalization',
        'release_date': '2014-11-21',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 11,
        'uri': 'spotify:album:4EUf4YyNjuXypWY6W5wEDm',
      }),
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '21E3waRsmPlU7jZsS13rcj',
          'name': 'Ne-Yo',
          'uri': 'spotify:artist:21E3waRsmPlU7jZsS13rcj',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 229360,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/2bJvI42r8EF3wxjOuDav4r',
      }),
      'href': 'https://api.spotify.com/v1/tracks/2bJvI42r8EF3wxjOuDav4r',
      'is_local': False,
      'name': 'Time of Our Lives',
      'track_id': '2bJvI42r8EF3wxjOuDav4r',
      'track_number': 4,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:2bJvI42r8EF3wxjOuDav4r',
    }),
    dict({
      'album': dict({
        'album_id': '4rG0MhkU6UojACJxkMHIXB',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0TnOYISbd1XYRBk9myaseg',
            'name': 'Pitbull',
            'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2731dc7483a9fcfce54822a2f19',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e021dc7483a9fcfce54822a2f19',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048511dc7483a9fcfce54822a2f19',
            'width': 64,
          }),
        ]),
        'name': 'Planet Pit (Deluxe Version)',
        'release_date': '2011-06-17',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 16,
        'uri': 'spotify:album:4rG0MhkU6UojACJxkMHIXB',
      }),
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '7bXgB6jMjp9ATFy66eO08Z',
          'name': 'Chris Brown',
          'uri': 'spotify:artist:7bXgB6jMjp9ATFy66eO08Z',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 227280,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/62zFEHfAYl5kdHYOivj4BC',
      }),
      'href': 'https://api.spotify.com/v1/tracks/62zFEHfAYl5kdHYOivj4BC',
      'is_local': False,
      'name': 'International Love (feat. Chris Brown)',
      'track_id': '62zFEHfAYl5kdHYOivj4BC',
      'track_number': 8,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:62zFEHfAYl5kdHYOivj4BC',
    }),
    dict({
      'album': dict({
        'album_id': '2F7tejLHzTqFq2XLol9ZGy',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0TnOYISbd1XYRBk9myaseg',
            'name': 'Pitbull',
            'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273f2486b438645e97b523e4f90',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02f2486b438645e97b523e4f90',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851f2486b438645e97b523e4f90',
            'width': 64,
          }),
        ]),
        'name': 'Global Warming: Meltdown (Deluxe Version)',
        'release_date': '2012',
        'release_date_precision': <ReleaseDatePrecision.YEAR: 'year'>,
        'total_tracks': 17,
        'uri': 'spotify:album:2F7tejLHzTqFq2XLol9ZGy',
      }),
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '1l7ZsJRRS8wlW3WfJfPfNS',
          'name': 'Christina Aguilera',
          'uri': 'spotify:artist:1l7ZsJRRS8wlW3WfJfPfNS',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 229506,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/0Hf4aIJpsN4Os2f0y0VqWl',
      }),
      'href': 'https://api.spotify.com/v1/tracks/0Hf4aIJpsN4Os2f0y0VqWl',
      'is_local': False,
      'name': 'Feel This Moment (feat. Christina Aguilera)',
      'track_id': '0Hf4aIJpsN4Os2f0y0VqWl',
      'track_number': 3,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:0Hf4aIJpsN4Os2f0y0VqWl',
    }),
    dict({
      'album': dict({
        'album_id': '4RaAjieYFIZRF8uh6GY43r',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0TnOYISbd1XYRBk9myaseg',
            'name': 'Pitbull',
            'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273a511f69870fa68e7ba78c099',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02a511f69870fa68e7ba78c099',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851a511f69870fa68e7ba78c099',
            'width': 64,
          }),
        ]),
        'name': 'Pitbull Starring In Rebelution',
        'release_date': '2009-08-27',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 14,
        'uri': 'spotify:album:4RaAjieYFIZRF8uh6GY43r',
      }),
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 237600,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/0OPyDgTRuIdCJ9B4bYSths',
      }),
      'href': 'https://api.spotify.com/v1/tracks/0OPyDgTRuIdCJ9B4bYSths',
      'is_local': False,
      'name': 'Hotel Room Service',
      'track_id': '0OPyDgTRuIdCJ9B4bYSths',
      'track_number': 8,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:0OPyDgTRuIdCJ9B4bYSths',
    }),
    dict({
      'album': dict({
        'album_id': '4EUf4YyNjuXypWY6W5wEDm',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0TnOYISbd1XYRBk9myaseg',
            'name': 'Pitbull',
            'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2731e340d1480e7bb29a45e3bd7',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e021e340d1480e7bb29a45e3bd7',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048511e340d1480e7bb29a45e3bd7',
            'width': 64,
          }),
        ]),
        'name': 'Globalization',
        'release_date': '2014-11-21',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 11,
        'uri': 'spotify:album:4EUf4YyNjuXypWY6W5wEDm',
      }),
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '3s73tswJycj6HTBNNN393z',
          'name': 'John Ryan',
          'uri': 'spotify:artist:3s73tswJycj6HTBNNN393z',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 236200,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/4Y7XAxTANhu3lmnLAzhWJW',
      }),
      'href': 'https://api.spotify.com/v1/tracks/4Y7XAxTANhu3lmnLAzhWJW',
      'is_local': False,
      'name': 'Fireball (feat. John Ryan)',
      'track_id': '4Y7XAxTANhu3lmnLAzhWJW',
      'track_number': 3,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:4Y7XAxTANhu3lmnLAzhWJW',
    }),
    dict({
      'album': dict({
        'album_id': '4rG0MhkU6UojACJxkMHIXB',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0TnOYISbd1XYRBk9myaseg',
            'name': 'Pitbull',
            'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2731dc7483a9fcfce54822a2f19',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e021dc7483a9fcfce54822a2f19',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048511dc7483a9fcfce54822a2f19',
            'width': 64,
          }),
        ]),
        'name': 'Planet Pit (Deluxe Version)',
        'release_date': '2011-06-17',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 16,
        'uri': 'spotify:album:4rG0MhkU6UojACJxkMHIXB',
      }),
      'artists': list([
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
        dict({
          'artist_id': '3aQeKQSyrW4qWr35idm0cy',
          'name': 'T-Pain',
          'uri': 'spotify:artist:3aQeKQSyrW4qWr35idm0cy',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 234453,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/3rfhI32Il2hVRKDkuGeeen',
      }),
      'href': 'https://api.spotify.com/v1/tracks/3rfhI32Il2hVRKDkuGeeen',
      'is_local': False,
      'name': 'Hey Baby (Drop It to the Floor) (feat. T-Pain)',
      'track_id': '3rfhI32Il2hVRKDkuGeeen',
      'track_number': 4,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:3rfhI32Il2hVRKDkuGeeen',
    }),
    dict({
      'album': dict({
        'album_id': '3V2ApPxUSquOkjLQU3wmjh',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '52iwsT98xCoGgiGntTiR7K',
            'name': 'Quevedo',
            'uri': 'spotify:artist:52iwsT98xCoGgiGntTiR7K',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2734b690afba75a356fcdad526e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e024b690afba75a356fcdad526e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048514b690afba75a356fcdad526e',
            'width': 64,
          }),
        ]),
        'name': 'BUENAS NOCHES',
        'release_date': '2024-11-22',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 18,
        'uri': 'spotify:album:3V2ApPxUSquOkjLQU3wmjh',
      }),
      'artists': list([
        dict({
          'artist_id': '52iwsT98xCoGgiGntTiR7K',
          'name': 'Quevedo',
          'uri': 'spotify:artist:52iwsT98xCoGgiGntTiR7K',
        }),
        dict({
          'artist_id': '0TnOYISbd1XYRBk9myaseg',
          'name': 'Pitbull',
          'uri': 'spotify:artist:0TnOYISbd1XYRBk9myaseg',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 165762,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/67LKV40NfSSGIJnm0xz6fi',
      }),
      'href': 'https://api.spotify.com/v1/tracks/67LKV40NfSSGIJnm0xz6fi',
      'is_local': False,
      'name': 'MR. MOONDIAL',
      'track_id': '67LKV40NfSSGIJnm0xz6fi',
      'track_number': 10,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:67LKV40NfSSGIJnm0xz6fi',
    }),
  ])
# ---
# name: test_get_audio_features
  dict({
    'acousticness': 0.011,
    'danceability': 0.696,
    'energy': 0.905,
    'instrumentalness': 0.000905,
    'key': <Key.D: 2>,
    'liveness': 0.302,
    'loudness': -2.743,
    'mode': <Mode.MAJOR: 1>,
    'speechiness': 0.103,
    'tempo': 114.944,
    'time_signature': <TimeSignature.FOUR_FOUR: 4>,
    'valence': 0.625,
  })
# ---
# name: test_get_audiobook
  dict({
    'audiobook_id': '58cFIY8IT7yGqR3kHnKqzV',
    'authors': list([
      dict({
        'name': 'Anya Niewierra',
      }),
    ]),
    'chapters': list([
      dict({
        'chapter_id': '3NW4BmIOG0qzQZgtLgsydR',
        'chapter_number': 0,
        'duration_ms': 249652,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3NW4BmIOG0qzQZgtLgsydR',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 1',
        'type': 'chapter',
        'uri': 'spotify:episode:3NW4BmIOG0qzQZgtLgsydR',
      }),
      dict({
        'chapter_id': '49TZsjpPPA4jEuAJ8bJbGf',
        'chapter_number': 1,
        'duration_ms': 565942,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/49TZsjpPPA4jEuAJ8bJbGf',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 2',
        'type': 'chapter',
        'uri': 'spotify:episode:49TZsjpPPA4jEuAJ8bJbGf',
      }),
      dict({
        'chapter_id': '0rPuWNlTx3j4E2NJxat2rP',
        'chapter_number': 2,
        'duration_ms': 974132,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0rPuWNlTx3j4E2NJxat2rP',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 3',
        'type': 'chapter',
        'uri': 'spotify:episode:0rPuWNlTx3j4E2NJxat2rP',
      }),
      dict({
        'chapter_id': '2E1Wk1N4bigyTVSg1tI0No',
        'chapter_number': 3,
        'duration_ms': 485590,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2E1Wk1N4bigyTVSg1tI0No',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 4',
        'type': 'chapter',
        'uri': 'spotify:episode:2E1Wk1N4bigyTVSg1tI0No',
      }),
      dict({
        'chapter_id': '6tK38pBz4ZzcdeVlIRkRUM',
        'chapter_number': 4,
        'duration_ms': 523466,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6tK38pBz4ZzcdeVlIRkRUM',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 5',
        'type': 'chapter',
        'uri': 'spotify:episode:6tK38pBz4ZzcdeVlIRkRUM',
      }),
      dict({
        'chapter_id': '4qQ7jT2GhcIat2pQFFxQA9',
        'chapter_number': 5,
        'duration_ms': 1022066,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4qQ7jT2GhcIat2pQFFxQA9',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 6',
        'type': 'chapter',
        'uri': 'spotify:episode:4qQ7jT2GhcIat2pQFFxQA9',
      }),
      dict({
        'chapter_id': '0QNX88urT0YDlKxp9UWOWX',
        'chapter_number': 6,
        'duration_ms': 1602481,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0QNX88urT0YDlKxp9UWOWX',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 7',
        'type': 'chapter',
        'uri': 'spotify:episode:0QNX88urT0YDlKxp9UWOWX',
      }),
      dict({
        'chapter_id': '2KgZ8UnDbdKFUHflP9AotL',
        'chapter_number': 7,
        'duration_ms': 1412075,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2KgZ8UnDbdKFUHflP9AotL',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 8',
        'type': 'chapter',
        'uri': 'spotify:episode:2KgZ8UnDbdKFUHflP9AotL',
      }),
      dict({
        'chapter_id': '4L1Y0jWKgrGfMB0HptLkQB',
        'chapter_number': 8,
        'duration_ms': 782497,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4L1Y0jWKgrGfMB0HptLkQB',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 9',
        'type': 'chapter',
        'uri': 'spotify:episode:4L1Y0jWKgrGfMB0HptLkQB',
      }),
      dict({
        'chapter_id': '0b2UnulIuw17qtiyTb2AwM',
        'chapter_number': 9,
        'duration_ms': 670223,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0b2UnulIuw17qtiyTb2AwM',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 10',
        'type': 'chapter',
        'uri': 'spotify:episode:0b2UnulIuw17qtiyTb2AwM',
      }),
      dict({
        'chapter_id': '6LrdmEqBMm6Y3HG9DPkZGc',
        'chapter_number': 10,
        'duration_ms': 1212630,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6LrdmEqBMm6Y3HG9DPkZGc',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 11',
        'type': 'chapter',
        'uri': 'spotify:episode:6LrdmEqBMm6Y3HG9DPkZGc',
      }),
      dict({
        'chapter_id': '3XmAaccmDwQaCc63PlbSHu',
        'chapter_number': 11,
        'duration_ms': 952267,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3XmAaccmDwQaCc63PlbSHu',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 12',
        'type': 'chapter',
        'uri': 'spotify:episode:3XmAaccmDwQaCc63PlbSHu',
      }),
      dict({
        'chapter_id': '09SfB2ZdMpJ0Horyvgb7uz',
        'chapter_number': 12,
        'duration_ms': 685061,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/09SfB2ZdMpJ0Horyvgb7uz',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 13',
        'type': 'chapter',
        'uri': 'spotify:episode:09SfB2ZdMpJ0Horyvgb7uz',
      }),
      dict({
        'chapter_id': '2XA4dwf0ToQ9iVySpHTZ4D',
        'chapter_number': 13,
        'duration_ms': 986148,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2XA4dwf0ToQ9iVySpHTZ4D',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 14',
        'type': 'chapter',
        'uri': 'spotify:episode:2XA4dwf0ToQ9iVySpHTZ4D',
      }),
      dict({
        'chapter_id': '0HdNqeQP9PF97GlIUKT2e6',
        'chapter_number': 14,
        'duration_ms': 347689,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0HdNqeQP9PF97GlIUKT2e6',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 15',
        'type': 'chapter',
        'uri': 'spotify:episode:0HdNqeQP9PF97GlIUKT2e6',
      }),
      dict({
        'chapter_id': '4EgGjPK9EyWvuS4pb0JfVn',
        'chapter_number': 15,
        'duration_ms': 249678,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4EgGjPK9EyWvuS4pb0JfVn',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 16',
        'type': 'chapter',
        'uri': 'spotify:episode:4EgGjPK9EyWvuS4pb0JfVn',
      }),
      dict({
        'chapter_id': '0QW159PFdnfSo4jwofmh94',
        'chapter_number': 16,
        'duration_ms': 793338,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0QW159PFdnfSo4jwofmh94',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 17',
        'type': 'chapter',
        'uri': 'spotify:episode:0QW159PFdnfSo4jwofmh94',
      }),
      dict({
        'chapter_id': '6dhG5dwyxkMJ3o6c7VyMa9',
        'chapter_number': 17,
        'duration_ms': 774870,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6dhG5dwyxkMJ3o6c7VyMa9',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 18',
        'type': 'chapter',
        'uri': 'spotify:episode:6dhG5dwyxkMJ3o6c7VyMa9',
      }),
      dict({
        'chapter_id': '7LQHbg3sUq9hcWLXFjtor9',
        'chapter_number': 18,
        'duration_ms': 524800,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/7LQHbg3sUq9hcWLXFjtor9',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 19',
        'type': 'chapter',
        'uri': 'spotify:episode:7LQHbg3sUq9hcWLXFjtor9',
      }),
      dict({
        'chapter_id': '6M0DmXvWGbIktNcxruSPaC',
        'chapter_number': 19,
        'duration_ms': 777769,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6M0DmXvWGbIktNcxruSPaC',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 20',
        'type': 'chapter',
        'uri': 'spotify:episode:6M0DmXvWGbIktNcxruSPaC',
      }),
      dict({
        'chapter_id': '3Jffij0q1mpI9yBut0Qk9s',
        'chapter_number': 20,
        'duration_ms': 1149648,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3Jffij0q1mpI9yBut0Qk9s',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 21',
        'type': 'chapter',
        'uri': 'spotify:episode:3Jffij0q1mpI9yBut0Qk9s',
      }),
      dict({
        'chapter_id': '0oZjvmF7NJzNtNyyiciJqB',
        'chapter_number': 21,
        'duration_ms': 433815,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0oZjvmF7NJzNtNyyiciJqB',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 22',
        'type': 'chapter',
        'uri': 'spotify:episode:0oZjvmF7NJzNtNyyiciJqB',
      }),
      dict({
        'chapter_id': '1r9bh8GhVPKvzP0sH5y43y',
        'chapter_number': 22,
        'duration_ms': 1846883,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1r9bh8GhVPKvzP0sH5y43y',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 23',
        'type': 'chapter',
        'uri': 'spotify:episode:1r9bh8GhVPKvzP0sH5y43y',
      }),
      dict({
        'chapter_id': '1r4Am9RdfpXjOmNVhLe1RB',
        'chapter_number': 23,
        'duration_ms': 1928855,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1r4Am9RdfpXjOmNVhLe1RB',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 24',
        'type': 'chapter',
        'uri': 'spotify:episode:1r4Am9RdfpXjOmNVhLe1RB',
      }),
      dict({
        'chapter_id': '2MB3hYOuX94ualcaTo1IAQ',
        'chapter_number': 24,
        'duration_ms': 835552,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2MB3hYOuX94ualcaTo1IAQ',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 25',
        'type': 'chapter',
        'uri': 'spotify:episode:2MB3hYOuX94ualcaTo1IAQ',
      }),
      dict({
        'chapter_id': '28S5Yt9f1GMK0C371FxaQ0',
        'chapter_number': 25,
        'duration_ms': 1211637,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/28S5Yt9f1GMK0C371FxaQ0',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 26',
        'type': 'chapter',
        'uri': 'spotify:episode:28S5Yt9f1GMK0C371FxaQ0',
      }),
      dict({
        'chapter_id': '5EuXfpQW2dyfvNKGQmfafO',
        'chapter_number': 26,
        'duration_ms': 608548,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5EuXfpQW2dyfvNKGQmfafO',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 27',
        'type': 'chapter',
        'uri': 'spotify:episode:5EuXfpQW2dyfvNKGQmfafO',
      }),
      dict({
        'chapter_id': '3I74lzJe404dLgzS4JSSS1',
        'chapter_number': 27,
        'duration_ms': 1744848,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3I74lzJe404dLgzS4JSSS1',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 28',
        'type': 'chapter',
        'uri': 'spotify:episode:3I74lzJe404dLgzS4JSSS1',
      }),
      dict({
        'chapter_id': '5qol4EI2NnldwPQtAY5kFM',
        'chapter_number': 28,
        'duration_ms': 986253,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5qol4EI2NnldwPQtAY5kFM',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 29',
        'type': 'chapter',
        'uri': 'spotify:episode:5qol4EI2NnldwPQtAY5kFM',
      }),
      dict({
        'chapter_id': '5bsGB6123U4d27TZ4gRTxi',
        'chapter_number': 29,
        'duration_ms': 2147735,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5bsGB6123U4d27TZ4gRTxi',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 30',
        'type': 'chapter',
        'uri': 'spotify:episode:5bsGB6123U4d27TZ4gRTxi',
      }),
      dict({
        'chapter_id': '07qlaV2Igv88BtBaS4fEdM',
        'chapter_number': 30,
        'duration_ms': 814080,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/07qlaV2Igv88BtBaS4fEdM',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 31',
        'type': 'chapter',
        'uri': 'spotify:episode:07qlaV2Igv88BtBaS4fEdM',
      }),
      dict({
        'chapter_id': '3c4LRz6BbLuTaRGD9pEEDh',
        'chapter_number': 31,
        'duration_ms': 2349662,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3c4LRz6BbLuTaRGD9pEEDh',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 32',
        'type': 'chapter',
        'uri': 'spotify:episode:3c4LRz6BbLuTaRGD9pEEDh',
      }),
      dict({
        'chapter_id': '7Fl8XJc3ruNHa9GtJqL0Qn',
        'chapter_number': 32,
        'duration_ms': 509257,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/7Fl8XJc3ruNHa9GtJqL0Qn',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 33',
        'type': 'chapter',
        'uri': 'spotify:episode:7Fl8XJc3ruNHa9GtJqL0Qn',
      }),
      dict({
        'chapter_id': '1XatZyhYldaab2QcGQS9Pb',
        'chapter_number': 33,
        'duration_ms': 1821910,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1XatZyhYldaab2QcGQS9Pb',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 34',
        'type': 'chapter',
        'uri': 'spotify:episode:1XatZyhYldaab2QcGQS9Pb',
      }),
      dict({
        'chapter_id': '0JvhJpMBLt7AUVaG6uIbde',
        'chapter_number': 34,
        'duration_ms': 382955,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0JvhJpMBLt7AUVaG6uIbde',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 35',
        'type': 'chapter',
        'uri': 'spotify:episode:0JvhJpMBLt7AUVaG6uIbde',
      }),
      dict({
        'chapter_id': '5vCof4NdStWGCuV9mRQTWJ',
        'chapter_number': 35,
        'duration_ms': 647836,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5vCof4NdStWGCuV9mRQTWJ',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 36',
        'type': 'chapter',
        'uri': 'spotify:episode:5vCof4NdStWGCuV9mRQTWJ',
      }),
      dict({
        'chapter_id': '1pB66z22q8Hq1PuD6uqqBt',
        'chapter_number': 36,
        'duration_ms': 561005,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1pB66z22q8Hq1PuD6uqqBt',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 37',
        'type': 'chapter',
        'uri': 'spotify:episode:1pB66z22q8Hq1PuD6uqqBt',
      }),
      dict({
        'chapter_id': '6dI3NSMs9U2JUzliQGdgK7',
        'chapter_number': 37,
        'duration_ms': 1134158,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6dI3NSMs9U2JUzliQGdgK7',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 38',
        'type': 'chapter',
        'uri': 'spotify:episode:6dI3NSMs9U2JUzliQGdgK7',
      }),
      dict({
        'chapter_id': '6b1dF8WD0U6rA3ktJqfJp2',
        'chapter_number': 38,
        'duration_ms': 432195,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6b1dF8WD0U6rA3ktJqfJp2',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 39',
        'type': 'chapter',
        'uri': 'spotify:episode:6b1dF8WD0U6rA3ktJqfJp2',
      }),
      dict({
        'chapter_id': '73nqrNdGzTsgR9svw1SA1G',
        'chapter_number': 39,
        'duration_ms': 648724,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/73nqrNdGzTsgR9svw1SA1G',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 40',
        'type': 'chapter',
        'uri': 'spotify:episode:73nqrNdGzTsgR9svw1SA1G',
      }),
      dict({
        'chapter_id': '45jG2BMCnRZBVEOsw1BswM',
        'chapter_number': 40,
        'duration_ms': 901146,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/45jG2BMCnRZBVEOsw1BswM',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 41',
        'type': 'chapter',
        'uri': 'spotify:episode:45jG2BMCnRZBVEOsw1BswM',
      }),
      dict({
        'chapter_id': '7CMZE1TeMleiK3PwEVCHVR',
        'chapter_number': 41,
        'duration_ms': 581877,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/7CMZE1TeMleiK3PwEVCHVR',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 42',
        'type': 'chapter',
        'uri': 'spotify:episode:7CMZE1TeMleiK3PwEVCHVR',
      }),
      dict({
        'chapter_id': '4byBCvjAcXe7aNIxmtMcn3',
        'chapter_number': 42,
        'duration_ms': 2124068,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4byBCvjAcXe7aNIxmtMcn3',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 43',
        'type': 'chapter',
        'uri': 'spotify:episode:4byBCvjAcXe7aNIxmtMcn3',
      }),
      dict({
        'chapter_id': '62ORogw9Znrj8lG7emt33z',
        'chapter_number': 43,
        'duration_ms': 1246093,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/62ORogw9Znrj8lG7emt33z',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 44',
        'type': 'chapter',
        'uri': 'spotify:episode:62ORogw9Znrj8lG7emt33z',
      }),
      dict({
        'chapter_id': '2zVVcf09xv6zuQrVf4mnkx',
        'chapter_number': 44,
        'duration_ms': 808228,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2zVVcf09xv6zuQrVf4mnkx',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 45',
        'type': 'chapter',
        'uri': 'spotify:episode:2zVVcf09xv6zuQrVf4mnkx',
      }),
      dict({
        'chapter_id': '1AOg0Ft76RiOITF8hp4cEC',
        'chapter_number': 45,
        'duration_ms': 741276,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1AOg0Ft76RiOITF8hp4cEC',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 46',
        'type': 'chapter',
        'uri': 'spotify:episode:1AOg0Ft76RiOITF8hp4cEC',
      }),
      dict({
        'chapter_id': '3NCNzeZsuSioUkpAWDTGha',
        'chapter_number': 46,
        'duration_ms': 315062,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3NCNzeZsuSioUkpAWDTGha',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 47',
        'type': 'chapter',
        'uri': 'spotify:episode:3NCNzeZsuSioUkpAWDTGha',
      }),
      dict({
        'chapter_id': '0580L8XcDYwI8ihms7R81U',
        'chapter_number': 47,
        'duration_ms': 320783,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0580L8XcDYwI8ihms7R81U',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'Track 48',
        'type': 'chapter',
        'uri': 'spotify:episode:0580L8XcDYwI8ihms7R81U',
      }),
      dict({
        'chapter_id': '7u2OveukvhLXEcwX2mqhSP',
        'chapter_number': 48,
        'duration_ms': 227474,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/7u2OveukvhLXEcwX2mqhSP',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          '',
        ]),
        'name': 'De nomade',
        'type': 'chapter',
        'uri': 'spotify:episode:7u2OveukvhLXEcwX2mqhSP',
      }),
    ]),
    'description': '''
      Author(s): Anya Niewierra
      Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink<p>Na het succes van de bestsellers <i>Het bloemenmeisje</i> en <i>De Camino</i> komt Anya Niewierra met <i>De nomade</i>. Een aangrijpende thriller over vaderliefde en een verborgen verleden.</p><p>De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.</p><p>Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.</p><p>Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.</p>
      <br>
      <p>‘Anya Niewierra heeft met <i>De nomade</i> weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan <i>De Camino</i>.’<br>
      Heleen Spanjaard, <i>Margriet</i></p><p>‘Verrassend, meeslepend en bloedstollend. <i>De nomade</i> is een waardige opvolger van <i>De Camino</i>.’<br>
      Rob Cobben, cultuurverslaggever <i>Dagblad De Limburger</i></p>
    ''',
    'edition': 'Unabridged',
    'explicit': False,
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/show/58cFIY8IT7yGqR3kHnKqzV',
    }),
    'html_description': 'Author(s): Anya Niewierra<br/>Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink<br/>&lt;p&gt;Na het succes van de bestsellers &lt;i&gt;Het bloemenmeisje&lt;/i&gt; en &lt;i&gt;De Camino&lt;/i&gt; komt Anya Niewierra met &lt;i&gt;De nomade&lt;/i&gt;. Een aangrijpende thriller over vaderliefde en een verborgen verleden.&lt;/p&gt;<br/>&lt;p&gt;De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.&lt;/p&gt;<br/>&lt;p&gt;Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.&lt;/p&gt;<br/>&lt;p&gt;Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.&lt;/p&gt;<br/>&lt;br&gt;<br/>&lt;p&gt;‘Anya Niewierra heeft met &lt;i&gt;De nomade&lt;/i&gt; weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan &lt;i&gt;De Camino&lt;/i&gt;.’&lt;br&gt;<br/>Heleen Spanjaard, &lt;i&gt;Margriet&lt;/i&gt;&lt;/p&gt;<br/>&lt;p&gt;‘Verrassend, meeslepend en bloedstollend. &lt;i&gt;De nomade&lt;/i&gt; is een waardige opvolger van &lt;i&gt;De Camino&lt;/i&gt;.’&lt;br&gt;<br/>Rob Cobben, cultuurverslaggever &lt;i&gt;Dagblad De Limburger&lt;/i&gt;&lt;/p&gt;',
    'images': list([
      dict({
        'height': 640,
        'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
        'width': 640,
      }),
      dict({
        'height': 300,
        'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
        'width': 300,
      }),
      dict({
        'height': 64,
        'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
        'width': 64,
      }),
    ]),
    'languages': list([
      'nl',
    ]),
    'name': 'De nomade',
    'narrators': list([
      dict({
        'name': 'Nienke Brinkhuis',
      }),
      dict({
        'name': 'Cees van Ede',
      }),
      dict({
        'name': 'Mattijn Hartemink',
      }),
    ]),
    'publisher': 'Anya Niewierra',
    'total_chapters': 49,
    'type': 'audiobook',
    'uri': 'spotify:show:58cFIY8IT7yGqR3kHnKqzV',
  })
# ---
# name: test_get_audiobook_chapters
  list([
    dict({
      'chapter_id': '3NW4BmIOG0qzQZgtLgsydR',
      'chapter_number': 0,
      'duration_ms': 249652,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/3NW4BmIOG0qzQZgtLgsydR',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 1',
      'type': 'chapter',
      'uri': 'spotify:episode:3NW4BmIOG0qzQZgtLgsydR',
    }),
    dict({
      'chapter_id': '49TZsjpPPA4jEuAJ8bJbGf',
      'chapter_number': 1,
      'duration_ms': 565942,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/49TZsjpPPA4jEuAJ8bJbGf',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 2',
      'type': 'chapter',
      'uri': 'spotify:episode:49TZsjpPPA4jEuAJ8bJbGf',
    }),
    dict({
      'chapter_id': '0rPuWNlTx3j4E2NJxat2rP',
      'chapter_number': 2,
      'duration_ms': 974132,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/0rPuWNlTx3j4E2NJxat2rP',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 3',
      'type': 'chapter',
      'uri': 'spotify:episode:0rPuWNlTx3j4E2NJxat2rP',
    }),
    dict({
      'chapter_id': '2E1Wk1N4bigyTVSg1tI0No',
      'chapter_number': 3,
      'duration_ms': 485590,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/2E1Wk1N4bigyTVSg1tI0No',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 4',
      'type': 'chapter',
      'uri': 'spotify:episode:2E1Wk1N4bigyTVSg1tI0No',
    }),
    dict({
      'chapter_id': '6tK38pBz4ZzcdeVlIRkRUM',
      'chapter_number': 4,
      'duration_ms': 523466,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/6tK38pBz4ZzcdeVlIRkRUM',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 5',
      'type': 'chapter',
      'uri': 'spotify:episode:6tK38pBz4ZzcdeVlIRkRUM',
    }),
    dict({
      'chapter_id': '4qQ7jT2GhcIat2pQFFxQA9',
      'chapter_number': 5,
      'duration_ms': 1022066,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/4qQ7jT2GhcIat2pQFFxQA9',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 6',
      'type': 'chapter',
      'uri': 'spotify:episode:4qQ7jT2GhcIat2pQFFxQA9',
    }),
    dict({
      'chapter_id': '0QNX88urT0YDlKxp9UWOWX',
      'chapter_number': 6,
      'duration_ms': 1602481,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/0QNX88urT0YDlKxp9UWOWX',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 7',
      'type': 'chapter',
      'uri': 'spotify:episode:0QNX88urT0YDlKxp9UWOWX',
    }),
    dict({
      'chapter_id': '2KgZ8UnDbdKFUHflP9AotL',
      'chapter_number': 7,
      'duration_ms': 1412075,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/2KgZ8UnDbdKFUHflP9AotL',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 8',
      'type': 'chapter',
      'uri': 'spotify:episode:2KgZ8UnDbdKFUHflP9AotL',
    }),
    dict({
      'chapter_id': '4L1Y0jWKgrGfMB0HptLkQB',
      'chapter_number': 8,
      'duration_ms': 782497,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/4L1Y0jWKgrGfMB0HptLkQB',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 9',
      'type': 'chapter',
      'uri': 'spotify:episode:4L1Y0jWKgrGfMB0HptLkQB',
    }),
    dict({
      'chapter_id': '0b2UnulIuw17qtiyTb2AwM',
      'chapter_number': 9,
      'duration_ms': 670223,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/0b2UnulIuw17qtiyTb2AwM',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 10',
      'type': 'chapter',
      'uri': 'spotify:episode:0b2UnulIuw17qtiyTb2AwM',
    }),
    dict({
      'chapter_id': '6LrdmEqBMm6Y3HG9DPkZGc',
      'chapter_number': 10,
      'duration_ms': 1212630,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/6LrdmEqBMm6Y3HG9DPkZGc',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 11',
      'type': 'chapter',
      'uri': 'spotify:episode:6LrdmEqBMm6Y3HG9DPkZGc',
    }),
    dict({
      'chapter_id': '3XmAaccmDwQaCc63PlbSHu',
      'chapter_number': 11,
      'duration_ms': 952267,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/3XmAaccmDwQaCc63PlbSHu',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 12',
      'type': 'chapter',
      'uri': 'spotify:episode:3XmAaccmDwQaCc63PlbSHu',
    }),
    dict({
      'chapter_id': '09SfB2ZdMpJ0Horyvgb7uz',
      'chapter_number': 12,
      'duration_ms': 685061,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/09SfB2ZdMpJ0Horyvgb7uz',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 13',
      'type': 'chapter',
      'uri': 'spotify:episode:09SfB2ZdMpJ0Horyvgb7uz',
    }),
    dict({
      'chapter_id': '2XA4dwf0ToQ9iVySpHTZ4D',
      'chapter_number': 13,
      'duration_ms': 986148,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/2XA4dwf0ToQ9iVySpHTZ4D',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 14',
      'type': 'chapter',
      'uri': 'spotify:episode:2XA4dwf0ToQ9iVySpHTZ4D',
    }),
    dict({
      'chapter_id': '0HdNqeQP9PF97GlIUKT2e6',
      'chapter_number': 14,
      'duration_ms': 347689,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/0HdNqeQP9PF97GlIUKT2e6',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 15',
      'type': 'chapter',
      'uri': 'spotify:episode:0HdNqeQP9PF97GlIUKT2e6',
    }),
    dict({
      'chapter_id': '4EgGjPK9EyWvuS4pb0JfVn',
      'chapter_number': 15,
      'duration_ms': 249678,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/4EgGjPK9EyWvuS4pb0JfVn',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 16',
      'type': 'chapter',
      'uri': 'spotify:episode:4EgGjPK9EyWvuS4pb0JfVn',
    }),
    dict({
      'chapter_id': '0QW159PFdnfSo4jwofmh94',
      'chapter_number': 16,
      'duration_ms': 793338,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/0QW159PFdnfSo4jwofmh94',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 17',
      'type': 'chapter',
      'uri': 'spotify:episode:0QW159PFdnfSo4jwofmh94',
    }),
    dict({
      'chapter_id': '6dhG5dwyxkMJ3o6c7VyMa9',
      'chapter_number': 17,
      'duration_ms': 774870,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/6dhG5dwyxkMJ3o6c7VyMa9',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 18',
      'type': 'chapter',
      'uri': 'spotify:episode:6dhG5dwyxkMJ3o6c7VyMa9',
    }),
    dict({
      'chapter_id': '7LQHbg3sUq9hcWLXFjtor9',
      'chapter_number': 18,
      'duration_ms': 524800,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/7LQHbg3sUq9hcWLXFjtor9',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 19',
      'type': 'chapter',
      'uri': 'spotify:episode:7LQHbg3sUq9hcWLXFjtor9',
    }),
    dict({
      'chapter_id': '6M0DmXvWGbIktNcxruSPaC',
      'chapter_number': 19,
      'duration_ms': 777769,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/6M0DmXvWGbIktNcxruSPaC',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        '',
      ]),
      'name': 'Track 20',
      'type': 'chapter',
      'uri': 'spotify:episode:6M0DmXvWGbIktNcxruSPaC',
    }),
  ])
# ---
# name: test_get_audiobooks
  list([
    dict({
      'audiobook_id': '7iHfbu1YPACw6oZPAFJtqe',
      'authors': list([
        dict({
          'name': 'Frank Herbert',
        }),
      ]),
      'chapters': list([
        dict({
          'chapter_id': '73ThiUvDp7VbVX6tWTNjE4',
          'chapter_number': 0,
          'duration_ms': 60056,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/73ThiUvDp7VbVX6tWTNjE4',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Opening Credits',
          'type': 'chapter',
          'uri': 'spotify:episode:73ThiUvDp7VbVX6tWTNjE4',
        }),
        dict({
          'chapter_id': '7zdR7zJCuEzLEJkSWYlEWj',
          'chapter_number': 1,
          'duration_ms': 1737274,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/7zdR7zJCuEzLEJkSWYlEWj',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 1',
          'type': 'chapter',
          'uri': 'spotify:episode:7zdR7zJCuEzLEJkSWYlEWj',
        }),
        dict({
          'chapter_id': '6wbkoWAKtlVHC0pk46ORyd',
          'chapter_number': 2,
          'duration_ms': 1257875,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6wbkoWAKtlVHC0pk46ORyd',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 2',
          'type': 'chapter',
          'uri': 'spotify:episode:6wbkoWAKtlVHC0pk46ORyd',
        }),
        dict({
          'chapter_id': '6JVmsEPc2uOX551TCWVHUQ',
          'chapter_number': 3,
          'duration_ms': 998244,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6JVmsEPc2uOX551TCWVHUQ',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 3',
          'type': 'chapter',
          'uri': 'spotify:episode:6JVmsEPc2uOX551TCWVHUQ',
        }),
        dict({
          'chapter_id': '3Tfs2OyT4dBurDFBmxpA3Z',
          'chapter_number': 4,
          'duration_ms': 1387808,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/3Tfs2OyT4dBurDFBmxpA3Z',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 4',
          'type': 'chapter',
          'uri': 'spotify:episode:3Tfs2OyT4dBurDFBmxpA3Z',
        }),
        dict({
          'chapter_id': '0oduVqcMbgrXrhlhmtRaUl',
          'chapter_number': 5,
          'duration_ms': 606459,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/0oduVqcMbgrXrhlhmtRaUl',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 5',
          'type': 'chapter',
          'uri': 'spotify:episode:0oduVqcMbgrXrhlhmtRaUl',
        }),
        dict({
          'chapter_id': '2SUk86PXGjOptTcmuwQuzA',
          'chapter_number': 6,
          'duration_ms': 940696,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/2SUk86PXGjOptTcmuwQuzA',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 6',
          'type': 'chapter',
          'uri': 'spotify:episode:2SUk86PXGjOptTcmuwQuzA',
        }),
        dict({
          'chapter_id': '0aV28m0uV3KTKxxjtbfics',
          'chapter_number': 7,
          'duration_ms': 1620245,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/0aV28m0uV3KTKxxjtbfics',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 7',
          'type': 'chapter',
          'uri': 'spotify:episode:0aV28m0uV3KTKxxjtbfics',
        }),
        dict({
          'chapter_id': '32ajSFsIg0j1x7nfcIbORW',
          'chapter_number': 8,
          'duration_ms': 1309388,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/32ajSFsIg0j1x7nfcIbORW',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 8',
          'type': 'chapter',
          'uri': 'spotify:episode:32ajSFsIg0j1x7nfcIbORW',
        }),
        dict({
          'chapter_id': '5rfIxa6UYIkSFlP2mL2ovu',
          'chapter_number': 9,
          'duration_ms': 581983,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/5rfIxa6UYIkSFlP2mL2ovu',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 9',
          'type': 'chapter',
          'uri': 'spotify:episode:5rfIxa6UYIkSFlP2mL2ovu',
        }),
        dict({
          'chapter_id': '477FnG3smKF8cZTn4T3rnN',
          'chapter_number': 10,
          'duration_ms': 1236742,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/477FnG3smKF8cZTn4T3rnN',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 10',
          'type': 'chapter',
          'uri': 'spotify:episode:477FnG3smKF8cZTn4T3rnN',
        }),
        dict({
          'chapter_id': '5TRMZm6VkIiXR384u5ZQr3',
          'chapter_number': 11,
          'duration_ms': 768392,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/5TRMZm6VkIiXR384u5ZQr3',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 11',
          'type': 'chapter',
          'uri': 'spotify:episode:5TRMZm6VkIiXR384u5ZQr3',
        }),
        dict({
          'chapter_id': '1F1x57cJyvLxnbzGOqdeur',
          'chapter_number': 12,
          'duration_ms': 2322965,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/1F1x57cJyvLxnbzGOqdeur',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 12',
          'type': 'chapter',
          'uri': 'spotify:episode:1F1x57cJyvLxnbzGOqdeur',
        }),
        dict({
          'chapter_id': '4ETF6jtwY0Xpf8JilpLsRa',
          'chapter_number': 13,
          'duration_ms': 744516,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/4ETF6jtwY0Xpf8JilpLsRa',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 13',
          'type': 'chapter',
          'uri': 'spotify:episode:4ETF6jtwY0Xpf8JilpLsRa',
        }),
        dict({
          'chapter_id': '3Dfui4lmf6bi6YAen3EABM',
          'chapter_number': 14,
          'duration_ms': 498182,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/3Dfui4lmf6bi6YAen3EABM',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 14',
          'type': 'chapter',
          'uri': 'spotify:episode:3Dfui4lmf6bi6YAen3EABM',
        }),
        dict({
          'chapter_id': '6IPghpa2z4FeNwcVlqbcWC',
          'chapter_number': 15,
          'duration_ms': 3164396,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6IPghpa2z4FeNwcVlqbcWC',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 15',
          'type': 'chapter',
          'uri': 'spotify:episode:6IPghpa2z4FeNwcVlqbcWC',
        }),
        dict({
          'chapter_id': '33fos0bqN1TLYreVtVd32r',
          'chapter_number': 16,
          'duration_ms': 3244879,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/33fos0bqN1TLYreVtVd32r',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 16',
          'type': 'chapter',
          'uri': 'spotify:episode:33fos0bqN1TLYreVtVd32r',
        }),
        dict({
          'chapter_id': '29fjoyMwqwmKJtc6yNZuEJ',
          'chapter_number': 17,
          'duration_ms': 1851560,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/29fjoyMwqwmKJtc6yNZuEJ',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 17',
          'type': 'chapter',
          'uri': 'spotify:episode:29fjoyMwqwmKJtc6yNZuEJ',
        }),
        dict({
          'chapter_id': '4Mj1tl85Ue9MK0pgfgHarR',
          'chapter_number': 18,
          'duration_ms': 759981,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/4Mj1tl85Ue9MK0pgfgHarR',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 18',
          'type': 'chapter',
          'uri': 'spotify:episode:4Mj1tl85Ue9MK0pgfgHarR',
        }),
        dict({
          'chapter_id': '3yADXAbeustrCocpeHxUCp',
          'chapter_number': 19,
          'duration_ms': 1547442,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/3yADXAbeustrCocpeHxUCp',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 19',
          'type': 'chapter',
          'uri': 'spotify:episode:3yADXAbeustrCocpeHxUCp',
        }),
        dict({
          'chapter_id': '2DngPhNwMz9LejeFNFk571',
          'chapter_number': 20,
          'duration_ms': 398864,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/2DngPhNwMz9LejeFNFk571',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 20',
          'type': 'chapter',
          'uri': 'spotify:episode:2DngPhNwMz9LejeFNFk571',
        }),
        dict({
          'chapter_id': '24sEDN4P9plH5XC0cGhu3z',
          'chapter_number': 21,
          'duration_ms': 2013885,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/24sEDN4P9plH5XC0cGhu3z',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 21',
          'type': 'chapter',
          'uri': 'spotify:episode:24sEDN4P9plH5XC0cGhu3z',
        }),
        dict({
          'chapter_id': '2lctt39yGO8PVWOlm6MJZN',
          'chapter_number': 22,
          'duration_ms': 2204605,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/2lctt39yGO8PVWOlm6MJZN',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 22',
          'type': 'chapter',
          'uri': 'spotify:episode:2lctt39yGO8PVWOlm6MJZN',
        }),
        dict({
          'chapter_id': '7MKcghyeGn4ZdvopzubNN3',
          'chapter_number': 23,
          'duration_ms': 715756,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/7MKcghyeGn4ZdvopzubNN3',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 1',
          'type': 'chapter',
          'uri': 'spotify:episode:7MKcghyeGn4ZdvopzubNN3',
        }),
        dict({
          'chapter_id': '4zTOq40lKE3rBzwW4YSZij',
          'chapter_number': 24,
          'duration_ms': 1677010,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/4zTOq40lKE3rBzwW4YSZij',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 2',
          'type': 'chapter',
          'uri': 'spotify:episode:4zTOq40lKE3rBzwW4YSZij',
        }),
        dict({
          'chapter_id': '08MYfv81KfnankqZqLTb3T',
          'chapter_number': 25,
          'duration_ms': 1892154,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/08MYfv81KfnankqZqLTb3T',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 3',
          'type': 'chapter',
          'uri': 'spotify:episode:08MYfv81KfnankqZqLTb3T',
        }),
        dict({
          'chapter_id': '6NNR9oWRgY9pxEaB37mJ11',
          'chapter_number': 26,
          'duration_ms': 1503191,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6NNR9oWRgY9pxEaB37mJ11',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 4',
          'type': 'chapter',
          'uri': 'spotify:episode:6NNR9oWRgY9pxEaB37mJ11',
        }),
        dict({
          'chapter_id': '26kNqrRZOpLtYqDkD3zXIG',
          'chapter_number': 27,
          'duration_ms': 2232059,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/26kNqrRZOpLtYqDkD3zXIG',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 5',
          'type': 'chapter',
          'uri': 'spotify:episode:26kNqrRZOpLtYqDkD3zXIG',
        }),
        dict({
          'chapter_id': '5A5TCBfKyALXV9n7gMAlSk',
          'chapter_number': 28,
          'duration_ms': 918936,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/5A5TCBfKyALXV9n7gMAlSk',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 6',
          'type': 'chapter',
          'uri': 'spotify:episode:5A5TCBfKyALXV9n7gMAlSk',
        }),
        dict({
          'chapter_id': '7CAUsYnK6WH25ECbB2RoIk',
          'chapter_number': 29,
          'duration_ms': 1460899,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/7CAUsYnK6WH25ECbB2RoIk',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 7',
          'type': 'chapter',
          'uri': 'spotify:episode:7CAUsYnK6WH25ECbB2RoIk',
        }),
        dict({
          'chapter_id': '1k93wGYEEjYYVcAGLy0K7I',
          'chapter_number': 30,
          'duration_ms': 1212918,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/1k93wGYEEjYYVcAGLy0K7I',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 8',
          'type': 'chapter',
          'uri': 'spotify:episode:1k93wGYEEjYYVcAGLy0K7I',
        }),
        dict({
          'chapter_id': '7M885ouJ7cr0frNA5Pb0Y3',
          'chapter_number': 31,
          'duration_ms': 1736438,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/7M885ouJ7cr0frNA5Pb0Y3',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 9',
          'type': 'chapter',
          'uri': 'spotify:episode:7M885ouJ7cr0frNA5Pb0Y3',
        }),
        dict({
          'chapter_id': '01bThkNFrxa8IHkLjMrUkW',
          'chapter_number': 32,
          'duration_ms': 1343165,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/01bThkNFrxa8IHkLjMrUkW',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 10',
          'type': 'chapter',
          'uri': 'spotify:episode:01bThkNFrxa8IHkLjMrUkW',
        }),
        dict({
          'chapter_id': '3xZAVq4uRNe8UQLaL18dmB',
          'chapter_number': 33,
          'duration_ms': 2047426,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/3xZAVq4uRNe8UQLaL18dmB',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 11',
          'type': 'chapter',
          'uri': 'spotify:episode:3xZAVq4uRNe8UQLaL18dmB',
        }),
        dict({
          'chapter_id': '402Y8O19dElX8xuAY5VnJZ',
          'chapter_number': 34,
          'duration_ms': 1986273,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/402Y8O19dElX8xuAY5VnJZ',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 12',
          'type': 'chapter',
          'uri': 'spotify:episode:402Y8O19dElX8xuAY5VnJZ',
        }),
        dict({
          'chapter_id': '5zFiYihxmwnkQxeXl3Z3Vf',
          'chapter_number': 35,
          'duration_ms': 2839119,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/5zFiYihxmwnkQxeXl3Z3Vf',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 13',
          'type': 'chapter',
          'uri': 'spotify:episode:5zFiYihxmwnkQxeXl3Z3Vf',
        }),
        dict({
          'chapter_id': '13r6Hp8WFXyzWHMn6huHpx',
          'chapter_number': 36,
          'duration_ms': 1397264,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/13r6Hp8WFXyzWHMn6huHpx',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 14',
          'type': 'chapter',
          'uri': 'spotify:episode:13r6Hp8WFXyzWHMn6huHpx',
        }),
        dict({
          'chapter_id': '6qtqoAXjtnh2PLQ5t8KFFo',
          'chapter_number': 37,
          'duration_ms': 2321163,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6qtqoAXjtnh2PLQ5t8KFFo',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 15',
          'type': 'chapter',
          'uri': 'spotify:episode:6qtqoAXjtnh2PLQ5t8KFFo',
        }),
        dict({
          'chapter_id': '6aIH2AMngxR4j9Z8meDwQW',
          'chapter_number': 38,
          'duration_ms': 1232510,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6aIH2AMngxR4j9Z8meDwQW',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 1',
          'type': 'chapter',
          'uri': 'spotify:episode:6aIH2AMngxR4j9Z8meDwQW',
        }),
        dict({
          'chapter_id': '6ILiWXyPyQzRqI2HGWNZbY',
          'chapter_number': 39,
          'duration_ms': 1055112,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6ILiWXyPyQzRqI2HGWNZbY',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 2',
          'type': 'chapter',
          'uri': 'spotify:episode:6ILiWXyPyQzRqI2HGWNZbY',
        }),
        dict({
          'chapter_id': '19oUIVtDPSHDzC7OELsw6a',
          'chapter_number': 40,
          'duration_ms': 1898789,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/19oUIVtDPSHDzC7OELsw6a',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 3',
          'type': 'chapter',
          'uri': 'spotify:episode:19oUIVtDPSHDzC7OELsw6a',
        }),
        dict({
          'chapter_id': '3UPOWZj22wwik20wzxfz3M',
          'chapter_number': 41,
          'duration_ms': 1531690,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/3UPOWZj22wwik20wzxfz3M',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 4',
          'type': 'chapter',
          'uri': 'spotify:episode:3UPOWZj22wwik20wzxfz3M',
        }),
        dict({
          'chapter_id': '00PlgkfJtH1D2p5kKcsqRm',
          'chapter_number': 42,
          'duration_ms': 1074600,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/00PlgkfJtH1D2p5kKcsqRm',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 5',
          'type': 'chapter',
          'uri': 'spotify:episode:00PlgkfJtH1D2p5kKcsqRm',
        }),
        dict({
          'chapter_id': '7JM6CGIDx4huFNhWG91TtH',
          'chapter_number': 43,
          'duration_ms': 2439759,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/7JM6CGIDx4huFNhWG91TtH',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 6',
          'type': 'chapter',
          'uri': 'spotify:episode:7JM6CGIDx4huFNhWG91TtH',
        }),
        dict({
          'chapter_id': '66zZV7mG5q1sJkaJY75Xwk',
          'chapter_number': 44,
          'duration_ms': 2018926,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/66zZV7mG5q1sJkaJY75Xwk',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 7',
          'type': 'chapter',
          'uri': 'spotify:episode:66zZV7mG5q1sJkaJY75Xwk',
        }),
        dict({
          'chapter_id': '6KhPKC5MHl88WNm6ZkntUi',
          'chapter_number': 45,
          'duration_ms': 1608882,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6KhPKC5MHl88WNm6ZkntUi',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 8',
          'type': 'chapter',
          'uri': 'spotify:episode:6KhPKC5MHl88WNm6ZkntUi',
        }),
        dict({
          'chapter_id': '2nKo6lLWxinuQFUQ9cyqzv',
          'chapter_number': 46,
          'duration_ms': 1282587,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/2nKo6lLWxinuQFUQ9cyqzv',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 9',
          'type': 'chapter',
          'uri': 'spotify:episode:2nKo6lLWxinuQFUQ9cyqzv',
        }),
        dict({
          'chapter_id': '1NveSJGfS8ncJnsDYxHPDS',
          'chapter_number': 47,
          'duration_ms': 1581297,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/1NveSJGfS8ncJnsDYxHPDS',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 10',
          'type': 'chapter',
          'uri': 'spotify:episode:1NveSJGfS8ncJnsDYxHPDS',
        }),
        dict({
          'chapter_id': '6bmPSreTIOCbWhsRVdD8Gz',
          'chapter_number': 48,
          'duration_ms': 3556572,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/6bmPSreTIOCbWhsRVdD8Gz',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Chapter 11',
          'type': 'chapter',
          'uri': 'spotify:episode:6bmPSreTIOCbWhsRVdD8Gz',
        }),
        dict({
          'chapter_id': '0PMQAsGZ8f9tSTd9moghJs',
          'chapter_number': 49,
          'duration_ms': 53473,
          'explicit': False,
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/episode/0PMQAsGZ8f9tSTd9moghJs',
          }),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
              'width': 64,
            }),
          ]),
          'languages': list([
            '',
          ]),
          'name': 'Ending Credits',
          'type': 'chapter',
          'uri': 'spotify:episode:0PMQAsGZ8f9tSTd9moghJs',
        }),
      ]),
      'description': '''
        Author(s): Frank Herbert
        Narrator(s): Scott Brick, Orlagh Cassidy, Euan Morton, Ilyana Kadushin, Simon Vance
        <p><b>NOW A MAJOR MOTION PICTURE directed by Denis Villeneuve, starring Timothée Chalamet, Zendaya, Rebecca Ferguson, Javier Bardem, Josh Brolin, Austin Butler, Florence Pugh, Dave Bautista, Christopher Walken, Léa Seydoux, Stellan Skarsgård, and Charlotte Rampling<br></b><br>Set on the desert planet Arrakis, <i>Dune</i> is the story of the boy Paul Atreides, who would become the mysterious man known as Muad'dib. He would avenge the traitorous plot against his noble family—and would bring to fruition humankind's most ancient and unattainable dream.<br><br>A stunning blend of adventure and mysticism, environmentalism and politics, <i>Dune</i> won the first Nebula Award, shared the Hugo Award, and formed the basis of what is undoubtedly the grandest epic in science fiction. Frank Herbert's death in 1986 was a tragic loss, yet the astounding legacy of his visionary fiction will live forever.</p>
      ''',
      'edition': 'Unabridged',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/show/7iHfbu1YPACw6oZPAFJtqe',
      }),
      'html_description': 'Author(s): Frank Herbert<br/>Narrator(s): Scott Brick, Orlagh Cassidy, Euan Morton, Ilyana Kadushin, Simon Vance<br/>&lt;p&gt;&lt;b&gt;NOW A MAJOR MOTION PICTURE directed by Denis Villeneuve, starring Timothée Chalamet, Zendaya, Rebecca Ferguson, Javier Bardem, Josh Brolin, Austin Butler, Florence Pugh, Dave Bautista, Christopher Walken, Léa Seydoux, Stellan Skarsgård, and Charlotte Rampling&lt;br&gt;&lt;/b&gt;&lt;br&gt;Set on the desert planet Arrakis, &lt;i&gt;Dune&lt;/i&gt; is the story of the boy Paul Atreides, who would become the mysterious man known as Muad&#39;dib. He would avenge the traitorous plot against his noble family—and would bring to fruition humankind&#39;s most ancient and unattainable dream.&lt;br&gt;&lt;br&gt;A stunning blend of adventure and mysticism, environmentalism and politics, &lt;i&gt;Dune&lt;/i&gt; won the first Nebula Award, shared the Hugo Award, and formed the basis of what is undoubtedly the grandest epic in science fiction. Frank Herbert&#39;s death in 1986 was a tragic loss, yet the astounding legacy of his visionary fiction will live forever.&lt;/p&gt;',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8706d7d39148810e742cef314',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5b706d7d39148810e742cef314',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703b706d7d39148810e742cef314',
          'width': 64,
        }),
      ]),
      'languages': list([
        'en',
      ]),
      'name': 'Dune: Book One in the Dune Chronicles',
      'narrators': list([
        dict({
          'name': 'Scott Brick',
        }),
        dict({
          'name': 'Orlagh Cassidy',
        }),
        dict({
          'name': 'Euan Morton',
        }),
        dict({
          'name': 'Ilyana Kadushin',
        }),
        dict({
          'name': 'Simon Vance',
        }),
      ]),
      'publisher': 'Frank Herbert',
      'total_chapters': 51,
      'type': 'audiobook',
      'uri': 'spotify:show:7iHfbu1YPACw6oZPAFJtqe',
    }),
  ])
# ---
# name: test_get_categories
  list([
    dict({
      'category_id': '0JQ5DAt0tbjZptfcdMSKl3',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAt0tbjZptfcdMSKl3',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/728ed47fc1674feb95f7ac20236eb6d7.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'Made For You',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFz6FAsUtgAab',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFz6FAsUtgAab',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/728ed47fc1674feb95f7ac20236eb6d7.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'New Releases',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFEC4WFtoNRpw',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFEC4WFtoNRpw',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/media/derived/pop-274x274_447148649685019f5e2a03a39e78ba52_0_0_274_274.jpg',
          'width': 274,
        }),
      ]),
      'name': 'Pop',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFQ00XGBls6ym',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFQ00XGBls6ym',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/728ed47fc1674feb95f7ac20236eb6d7.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'Hip-Hop',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFHOzuVTgTizF',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFHOzuVTgTizF',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/media/derived/edm-274x274_0ef612604200a9c14995432994455a6d_0_0_274_274.jpg',
          'width': 274,
        }),
      ]),
      'name': 'Dance/Electronic',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFCLroFGPFVr5',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFCLroFGPFVr5',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/970c289306e64c8782ecc84de5dea795.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'Dutch music',
    }),
    dict({
      'category_id': '0JQ5DAudkNjCgYMM0TZXDw',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAudkNjCgYMM0TZXDw',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://charts-images.scdn.co/spotify-charts-logos/music_charts_search_arrow_274x274.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'Charts',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFzHmL4tf05da',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFzHmL4tf05da',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/media/original/mood-274x274_976986a31ac8c49794cbdc7246fd5ad7_274x274.jpg',
          'width': 274,
        }),
      ]),
      'name': 'Mood',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFCWjUTdzaG0e',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFCWjUTdzaG0e',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/fe06caf056474bc58862591cd60b57fc.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'Indie',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFIRybaNTYXXy',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFIRybaNTYXXy',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/728ed47fc1674feb95f7ac20236eb6d7.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'In the car',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFEZPnFQSFB1T',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFEZPnFQSFB1T',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/media/derived/r-b-274x274_fd56efa72f4f63764b011b68121581d8_0_0_274_274.jpg',
          'width': 274,
        }),
      ]),
      'name': 'R&B',
    }),
    dict({
      'category_id': '0JQ5DAtOnAEpjOgUKwXyxj',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAtOnAEpjOgUKwXyxj',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/728ed47fc1674feb95f7ac20236eb6d7.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'Discover',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFA6SOHvT3gck',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFA6SOHvT3gck',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/7ee6530d5b3c4acc9a0957046bf11d63',
          'width': 274,
        }),
      ]),
      'name': 'Party',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFAXlCG6QvYQ4',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFAXlCG6QvYQ4',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/media/links/workout-274x274.png',
          'width': 274,
        }),
      ]),
      'name': 'Workout',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFGnsSfvg90Wo',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFGnsSfvg90Wo',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/c5495b9f0f694ffcb39c9217d4ed4375',
          'width': 274,
        }),
      ]),
      'name': 'GLOW',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFNQ0fGp4byGU',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFNQ0fGp4byGU',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/b505b01bbe0e490cbe43b07f16212892.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'Afro',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFGvOw3O4nLAf',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFGvOw3O4nLAf',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/images/2078afd91e4d431eb19efc5bee5ab131.jpeg',
          'width': 274,
        }),
      ]),
      'name': 'K-pop',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFIpEuaCnimBj',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFIpEuaCnimBj',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/media/derived/soul-274x274_266bc900b35dda8956380cffc73a4d8c_0_0_274_274.jpg',
          'width': 274,
        }),
      ]),
      'name': 'Soul',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFFzDl7qN9Apr',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFFzDl7qN9Apr',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/media/derived/chill-274x274_4c46374f007813dd10b37e8d8fd35b4b_0_0_274_274.jpg',
          'width': 274,
        }),
      ]),
      'name': 'Chill',
    }),
    dict({
      'category_id': '0JQ5DAqbMKFDXXwE9BDJAr',
      'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFDXXwE9BDJAr',
      'icons': list([
        dict({
          'height': 274,
          'url': 'https://t.scdn.co/media/derived/rock_9ce79e0a4ef901bbd10494f5b855d3cc_0_0_274_274.jpg',
          'width': 274,
        }),
      ]),
      'name': 'Rock',
    }),
  ])
# ---
# name: test_get_category
  dict({
    'category_id': '0JQ5DAqbMKFRY5ok2pxXJ0',
    'href': 'https://api.spotify.com/v1/browse/categories/0JQ5DAqbMKFRY5ok2pxXJ0',
    'icons': list([
      dict({
        'height': 274,
        'url': 'https://t.scdn.co/media/original/dinner_1b6506abba0ba52c54e6d695c8571078_274x274.jpg',
        'width': 274,
      }),
    ]),
    'name': 'Cooking & Dining',
  })
# ---
# name: test_get_category_playlists
  list([
    dict({
      'collaborative': False,
      'description': 'Lekker  eten en lang natafelen? Daar hoort muziek bij.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX7yhuKT9G4qk',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f0000000343319faa9428405f3312b588',
          'width': None,
        }),
      ]),
      'name': 'eten met vrienden',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX7yhuKT9G4qk',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX7yhuKT9G4qk',
    }),
    dict({
      'collaborative': False,
      'description': 'From new retro to classic country blues, honky tonk, rockabilly, and more.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXbvE0SE0Cczh',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003b93c270883619dde61725fc8',
          'width': None,
        }),
      ]),
      'name': 'Jukebox Joint',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXbvE0SE0Cczh',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXbvE0SE0Cczh',
    }),
    dict({
      'collaborative': False,
      'description': 'Classic and new soul music for the perfect dinner.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWZheHO7xislj',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000034b69d5ba7d5a9940475c3ef2',
          'width': None,
        }),
      ]),
      'name': 'Soulful Dinner',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWZheHO7xislj',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWZheHO7xislj',
    }),
    dict({
      'collaborative': False,
      'description': 'Cold beer. Hot wings. Great rock. ',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXauOWFg72pbl',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000034b04e77913de1fc2a4b819df',
          'width': None,
        }),
      ]),
      'name': 'Beer & Wings',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXauOWFg72pbl',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXauOWFg72pbl',
    }),
    dict({
      'collaborative': False,
      'description': 'An uplifting yet tasteful dinner playlist with a guaranteed feel good vibe.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXbm6HfkbMtFZ',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000032ba865eb4204be02ce3e8e09',
          'width': None,
        }),
      ]),
      'name': 'Feel Good Dinner',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXbm6HfkbMtFZ',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXbm6HfkbMtFZ',
    }),
    dict({
      'collaborative': False,
      'description': 'Instrumental Jazz to set the mood for a relaxed evening.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWTALrdBtcXjw',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000034311976b3775ca3ab337366c',
          'width': None,
        }),
      ]),
      'name': 'Jazzy Dinner',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWTALrdBtcXjw',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWTALrdBtcXjw',
    }),
    dict({
      'collaborative': False,
      'description': 'Sultry house and mellow beats to accompany your cocktail drinks.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX6syac0fWYdV',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003a9daf47636eec9303a28bcfb',
          'width': None,
        }),
      ]),
      'name': 'Cocktail Lounge',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX6syac0fWYdV',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX6syac0fWYdV',
    }),
    dict({
      'collaborative': False,
      'description': 'Take yourself to Havana with some Cuban Salsa and Café favourites.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWZLN2cXno63R',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003d142d7feb73b11db237b11e8',
          'width': None,
        }),
      ]),
      'name': 'Café Cubano',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWZLN2cXno63R',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWZLN2cXno63R',
    }),
    dict({
      'collaborative': False,
      'description': 'La playlist à la cool pour accompagner votre dîner !',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX915ogFalrko',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000036ec804b14464d59cd9ddcd17',
          'width': None,
        }),
      ]),
      'name': 'Dîner entre amis',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX915ogFalrko',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX915ogFalrko',
    }),
    dict({
      'collaborative': False,
      'description': 'The perfect soundtrack to those long nights over dinner',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX4xuWVBs4FgJ',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000036e515187c071e45918e9f0de',
          'width': None,
        }),
      ]),
      'name': 'Dinner with Friends',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX4xuWVBs4FgJ',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX4xuWVBs4FgJ',
    }),
    dict({
      'collaborative': False,
      'description': 'Lekker  eten en lang natafelen? Daar hoort muziek bij.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX7yhuKT9G4qk',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f0000000343319faa9428405f3312b588',
          'width': None,
        }),
      ]),
      'name': 'eten met vrienden',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX7yhuKT9G4qk',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX7yhuKT9G4qk',
    }),
    dict({
      'collaborative': False,
      'description': "Gettin' figgy with it, bana-na-na-nanana",
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX2FsCLsHeMrM',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000038dc9fe0c14e5f34ad165e3c2',
          'width': None,
        }),
      ]),
      'name': 'Kitchen Swagger',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX2FsCLsHeMrM',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX2FsCLsHeMrM',
    }),
    dict({
      'collaborative': False,
      'description': 'An uplifting yet tasteful dinner playlist with a guaranteed feel good vibe.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXbm6HfkbMtFZ',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000032ba865eb4204be02ce3e8e09',
          'width': None,
        }),
      ]),
      'name': 'Feel Good Dinner',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXbm6HfkbMtFZ',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXbm6HfkbMtFZ',
    }),
    dict({
      'collaborative': False,
      'description': 'Classic and new soul music for the perfect dinner.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWZheHO7xislj',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000034b69d5ba7d5a9940475c3ef2',
          'width': None,
        }),
      ]),
      'name': 'Soulful Dinner',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWZheHO7xislj',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWZheHO7xislj',
    }),
    dict({
      'collaborative': False,
      'description': 'Buon Appetito!',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWT1R6bXL4dyW',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003c294a27b8c4fc98462b8b6a9',
          'width': None,
        }),
      ]),
      'name': 'The Perfect Italian Dinner',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWT1R6bXL4dyW',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWT1R6bXL4dyW',
    }),
    dict({
      'collaborative': False,
      'description': 'As you prepare and settle into your romantic dinner, let us provide the soundtrack with these RnB/Soul love songs.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWTJNOeepZTGy',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003196ba4b8d065a628edeac3b0',
          'width': None,
        }),
      ]),
      'name': 'Wine & Dine',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWTJNOeepZTGy',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWTJNOeepZTGy',
    }),
    dict({
      'collaborative': False,
      'description': 'Instrumental Jazz to set the mood for a relaxed evening.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWTALrdBtcXjw',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000034311976b3775ca3ab337366c',
          'width': None,
        }),
      ]),
      'name': 'Jazzy Dinner',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWTALrdBtcXjw',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWTALrdBtcXjw',
    }),
    dict({
      'collaborative': False,
      'description': 'Chill & Bumpy',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWVUxkQFrGCkK',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000030795c45ffc1c5b0b48689b79',
          'width': None,
        }),
      ]),
      'name': 'Umami',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWVUxkQFrGCkK',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWVUxkQFrGCkK',
    }),
    dict({
      'collaborative': False,
      'description': 'Take yourself to Havana with some Cuban Salsa and Café favourites.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWZLN2cXno63R',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003d142d7feb73b11db237b11e8',
          'width': None,
        }),
      ]),
      'name': 'Café Cubano',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWZLN2cXno63R',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWZLN2cXno63R',
    }),
    dict({
      'collaborative': False,
      'description': 'Great food, good company and some soft music. ',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXatMjChPKgBk',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003df69720bbead04d106b7182e',
          'width': None,
        }),
      ]),
      'name': 'Dinner Music',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXatMjChPKgBk',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXatMjChPKgBk',
    }),
  ])
# ---
# name: test_get_chapter
  dict({
    'audiobook': dict({
      'audiobook_id': '58cFIY8IT7yGqR3kHnKqzV',
      'authors': list([
        dict({
          'name': 'Anya Niewierra',
        }),
      ]),
      'description': '''
        Author(s): Anya Niewierra
        Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink<p>Na het succes van de bestsellers <i>Het bloemenmeisje</i> en <i>De Camino</i> komt Anya Niewierra met <i>De nomade</i>. Een aangrijpende thriller over vaderliefde en een verborgen verleden.</p><p>De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.</p><p>Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.</p><p>Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.</p>
        <br>
        <p>‘Anya Niewierra heeft met <i>De nomade</i> weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan <i>De Camino</i>.’<br>
        Heleen Spanjaard, <i>Margriet</i></p><p>‘Verrassend, meeslepend en bloedstollend. <i>De nomade</i> is een waardige opvolger van <i>De Camino</i>.’<br>
        Rob Cobben, cultuurverslaggever <i>Dagblad De Limburger</i></p>
      ''',
      'edition': 'Unabridged',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/show/58cFIY8IT7yGqR3kHnKqzV',
      }),
      'html_description': 'Author(s): Anya Niewierra<br/>Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink<br/>&lt;p&gt;Na het succes van de bestsellers &lt;i&gt;Het bloemenmeisje&lt;/i&gt; en &lt;i&gt;De Camino&lt;/i&gt; komt Anya Niewierra met &lt;i&gt;De nomade&lt;/i&gt;. Een aangrijpende thriller over vaderliefde en een verborgen verleden.&lt;/p&gt;<br/>&lt;p&gt;De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.&lt;/p&gt;<br/>&lt;p&gt;Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.&lt;/p&gt;<br/>&lt;p&gt;Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.&lt;/p&gt;<br/>&lt;br&gt;<br/>&lt;p&gt;‘Anya Niewierra heeft met &lt;i&gt;De nomade&lt;/i&gt; weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan &lt;i&gt;De Camino&lt;/i&gt;.’&lt;br&gt;<br/>Heleen Spanjaard, &lt;i&gt;Margriet&lt;/i&gt;&lt;/p&gt;<br/>&lt;p&gt;‘Verrassend, meeslepend en bloedstollend. &lt;i&gt;De nomade&lt;/i&gt; is een waardige opvolger van &lt;i&gt;De Camino&lt;/i&gt;.’&lt;br&gt;<br/>Rob Cobben, cultuurverslaggever &lt;i&gt;Dagblad De Limburger&lt;/i&gt;&lt;/p&gt;',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        'nl',
      ]),
      'name': 'De nomade',
      'narrators': list([
        dict({
          'name': 'Nienke Brinkhuis',
        }),
        dict({
          'name': 'Cees van Ede',
        }),
        dict({
          'name': 'Mattijn Hartemink',
        }),
      ]),
      'publisher': 'Anya Niewierra',
      'total_chapters': 49,
      'type': 'audiobook',
      'uri': 'spotify:show:58cFIY8IT7yGqR3kHnKqzV',
    }),
    'chapter_id': '3NW4BmIOG0qzQZgtLgsydR',
    'chapter_number': 0,
    'duration_ms': 249652,
    'explicit': False,
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/episode/3NW4BmIOG0qzQZgtLgsydR',
    }),
    'images': list([
      dict({
        'height': 640,
        'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
        'width': 640,
      }),
      dict({
        'height': 300,
        'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
        'width': 300,
      }),
      dict({
        'height': 64,
        'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
        'width': 64,
      }),
    ]),
    'languages': list([
      'nl',
    ]),
    'name': 'Track 1',
    'type': 'chapter',
    'uri': 'spotify:episode:3NW4BmIOG0qzQZgtLgsydR',
  })
# ---
# name: test_get_current_playing
  dict({
    'context': dict({
      'context_type': <ContextType.ARTIST: 'artist'>,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/artist/6mS5GeFyhea6w9OKo8PO3p',
      }),
      'href': 'https://api.spotify.com/v1/artists/6mS5GeFyhea6w9OKo8PO3p',
      'uri': 'spotify:artist:6mS5GeFyhea6w9OKo8PO3p',
    }),
    'currently_playing_type': 'track',
    'is_playing': True,
    'item': dict({
      'album': dict({
        'album_id': '1LorgdkFY2zgE6NbDdY19k',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '6mS5GeFyhea6w9OKo8PO3p',
            'name': 'Goldband',
            'uri': 'spotify:artist:6mS5GeFyhea6w9OKo8PO3p',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2731de89c5340be36804e01fdf2',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e021de89c5340be36804e01fdf2',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048511de89c5340be36804e01fdf2',
            'width': 64,
          }),
        ]),
        'name': 'Dun Smeren Geld Verdienen',
        'release_date': '2019-05-13',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 6,
        'uri': 'spotify:album:1LorgdkFY2zgE6NbDdY19k',
      }),
      'artists': list([
        dict({
          'artist_id': '6mS5GeFyhea6w9OKo8PO3p',
          'name': 'Goldband',
          'uri': 'spotify:artist:6mS5GeFyhea6w9OKo8PO3p',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 245581,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/4sIkwgf9bU7rQPvsA37rVQ',
      }),
      'href': 'https://api.spotify.com/v1/tracks/4sIkwgf9bU7rQPvsA37rVQ',
      'is_local': False,
      'name': 'Witte Was',
      'track_id': '4sIkwgf9bU7rQPvsA37rVQ',
      'track_number': 6,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:4sIkwgf9bU7rQPvsA37rVQ',
    }),
    'progress_ms': 134749,
  })
# ---
# name: test_get_current_user
  dict({
    'display_name': 'Joost Lekkerkerker',
    'email': 'joostlek@outlook.com',
    'images': list([
      dict({
        'height': 64,
        'url': 'https://i.scdn.co/image/ab67757000003b8246569a64d252247acb1491bc',
        'width': 64,
      }),
      dict({
        'height': 300,
        'url': 'https://i.scdn.co/image/ab6775700000ee8546569a64d252247acb1491bc',
        'width': 300,
      }),
    ]),
    'object_type': 'user',
    'product': <ProductType.PREMIUM: 'premium'>,
    'uri': 'spotify:user:1112264649',
    'user_id': '1112264649',
  })
# ---
# name: test_get_current_users_playlists[current_user_playlist_1.json]
  list([
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4WkWJ0EjHEFASDevhM8oPw',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273d061f5bfae8d38558f3698c1',
          'width': 640,
        }),
      ]),
      'name': 'Hyper',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4WkWJ0EjHEFASDevhM8oPw',
      'public': True,
      'uri': 'spotify:playlist:4WkWJ0EjHEFASDevhM8oPw',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1RHirWgH1weMsBLi4KOK9d',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b2732f3e58dd611d177973cb3a8cab67616d0000b27345cab965cb4639a4e669564aab67616d0000b2739e83c93811be6abfad8649d6ab67616d0000b273e4c03429788f0aff263a5fc6',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b2732f3e58dd611d177973cb3a8cab67616d0000b27345cab965cb4639a4e669564aab67616d0000b2739e83c93811be6abfad8649d6ab67616d0000b273e4c03429788f0aff263a5fc6',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b2732f3e58dd611d177973cb3a8cab67616d0000b27345cab965cb4639a4e669564aab67616d0000b2739e83c93811be6abfad8649d6ab67616d0000b273e4c03429788f0aff263a5fc6',
          'width': 60,
        }),
      ]),
      'name': 'Ain’t got shit on me',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Rens Boeser',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/317g2sbpe3ccycu45fes6lfr5lpe',
        }),
        'href': 'https://api.spotify.com/v1/users/317g2sbpe3ccycu45fes6lfr5lpe',
        'object_type': 'user',
        'owner_id': '317g2sbpe3ccycu45fes6lfr5lpe',
        'uri': 'spotify:user:317g2sbpe3ccycu45fes6lfr5lpe',
      }),
      'playlist_id': '1RHirWgH1weMsBLi4KOK9d',
      'public': False,
      'uri': 'spotify:playlist:1RHirWgH1weMsBLi4KOK9d',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2ZfissHhjQnhlmD54h6elH',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b2730f0e63e38a0ea92314ab9d7fab67616d0000b2737622b889949b07f15c6b57e2ab67616d0000b273a871bc3a84418ad1240a5d4eab67616d0000b273f56d363d03630bf3ee50b705',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b2730f0e63e38a0ea92314ab9d7fab67616d0000b2737622b889949b07f15c6b57e2ab67616d0000b273a871bc3a84418ad1240a5d4eab67616d0000b273f56d363d03630bf3ee50b705',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b2730f0e63e38a0ea92314ab9d7fab67616d0000b2737622b889949b07f15c6b57e2ab67616d0000b273a871bc3a84418ad1240a5d4eab67616d0000b273f56d363d03630bf3ee50b705',
          'width': 60,
        }),
      ]),
      'name': 'Billie (interlude)',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '2ZfissHhjQnhlmD54h6elH',
      'public': True,
      'uri': 'spotify:playlist:2ZfissHhjQnhlmD54h6elH',
    }),
    dict({
      'collaborative': False,
      'description': 'Missing: Metrik - Techtonic;  GAJATE - Baile Funk',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1vOHEgZ5UszkWycPjnG2Uo',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000bebbdce297c9b2a3b46d3c0a41fb',
          'width': None,
        }),
      ]),
      'name': 'Forza Horizon 5 Bass Arena',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'SylveonTribe',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/rwilming',
        }),
        'href': 'https://api.spotify.com/v1/users/rwilming',
        'object_type': 'user',
        'owner_id': 'rwilming',
        'uri': 'spotify:user:rwilming',
      }),
      'playlist_id': '1vOHEgZ5UszkWycPjnG2Uo',
      'public': False,
      'uri': 'spotify:playlist:1vOHEgZ5UszkWycPjnG2Uo',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4hQFqB1AtOpzsAv01E8n6c',
      }),
      'images': list([
      ]),
      'name': 'My Playlist #63',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4hQFqB1AtOpzsAv01E8n6c',
      'public': True,
      'uri': 'spotify:playlist:4hQFqB1AtOpzsAv01E8n6c',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0Jgs7FxHX86twpgCDehAHv',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b273411d9123d8ac6e5865c1c9e8ab67616d0000b2736c9556ea020144591559e3e3ab67616d0000b27385d230a79a0f0081bff1f102ab67616d0000b273eb9d3cba22cfa81c14fb8f0b',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b273411d9123d8ac6e5865c1c9e8ab67616d0000b2736c9556ea020144591559e3e3ab67616d0000b27385d230a79a0f0081bff1f102ab67616d0000b273eb9d3cba22cfa81c14fb8f0b',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b273411d9123d8ac6e5865c1c9e8ab67616d0000b2736c9556ea020144591559e3e3ab67616d0000b27385d230a79a0f0081bff1f102ab67616d0000b273eb9d3cba22cfa81c14fb8f0b',
          'width': 60,
        }),
      ]),
      'name': 'Crème',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '0Jgs7FxHX86twpgCDehAHv',
      'public': True,
      'uri': 'spotify:playlist:0Jgs7FxHX86twpgCDehAHv',
    }),
    dict({
      'collaborative': False,
      'description': 'Spotify Wrapped presents the songs that you loved most this year.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1F0sijgNaJdgit',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://wrapped-images.spotifycdn.com/image/yts-2022/large/your-top-songs-2022_large_en.jpg',
          'width': None,
        }),
      ]),
      'name': 'Your Top Songs 2022',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1F0sijgNaJdgit',
      'public': False,
      'uri': 'spotify:playlist:37i9dQZF1F0sijgNaJdgit',
    }),
    dict({
      'collaborative': False,
      'description': 'Rock for when on the move.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX6YSLRPj8EAI',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000037ef65b059c5fdd9834b05bc9',
          'width': None,
        }),
      ]),
      'name': 'omw from the pit',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX6YSLRPj8EAI',
      'public': False,
      'uri': 'spotify:playlist:37i9dQZF1DX6YSLRPj8EAI',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6fHmmdjd2Urd7DAhb4bqOB',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b27304ac00b52282fa61045ad3ddab67616d0000b2731dacb4f92caf0b997cf2b6c7ab67616d0000b273837c1f17d180ad970b2802c2ab67616d0000b273f90e44e9accf167fe582d4b1',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b27304ac00b52282fa61045ad3ddab67616d0000b2731dacb4f92caf0b997cf2b6c7ab67616d0000b273837c1f17d180ad970b2802c2ab67616d0000b273f90e44e9accf167fe582d4b1',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b27304ac00b52282fa61045ad3ddab67616d0000b2731dacb4f92caf0b997cf2b6c7ab67616d0000b273837c1f17d180ad970b2802c2ab67616d0000b273f90e44e9accf167fe582d4b1',
          'width': 60,
        }),
      ]),
      'name': 'My Shazam Tracks',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '6fHmmdjd2Urd7DAhb4bqOB',
      'public': True,
      'uri': 'spotify:playlist:6fHmmdjd2Urd7DAhb4bqOB',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5H2U7tZb9dMSHPwi20XcuD',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b2730aa31b3fb95f3e6bc48312d9ab67616d0000b2737adbe35f4bcb61b4e9aa910cab67616d0000b273be90598dc5b123eb550c6d51ab67616d0000b273fe8c4d2d61fa92202800947c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b2730aa31b3fb95f3e6bc48312d9ab67616d0000b2737adbe35f4bcb61b4e9aa910cab67616d0000b273be90598dc5b123eb550c6d51ab67616d0000b273fe8c4d2d61fa92202800947c',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b2730aa31b3fb95f3e6bc48312d9ab67616d0000b2737adbe35f4bcb61b4e9aa910cab67616d0000b273be90598dc5b123eb550c6d51ab67616d0000b273fe8c4d2d61fa92202800947c',
          'width': 60,
        }),
      ]),
      'name': 'Likes',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '5H2U7tZb9dMSHPwi20XcuD',
      'public': True,
      'uri': 'spotify:playlist:5H2U7tZb9dMSHPwi20XcuD',
    }),
    dict({
      'collaborative': False,
      'description': 'Your weekly mixtape of fresh music. Enjoy new music and deep cuts picked for you. Updates every Monday.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZEVXcGYKTerf9omc',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://newjams-images.scdn.co/image/ab676477000033ad/dt/v3/discover-weekly/stfxRixhceEsm_g7gO49YG1QsPjeunG6pNz8FmJENkOk2hR2EYo9nNsDL_MhjTxn8dIkVBsnTkvXlYlE7IZ0818v7z5KIwRNyI6tUamw8Fg=/MjA6NTQ6ODBUNjItMjEtMw==',
          'width': None,
        }),
      ]),
      'name': 'Discover Weekly',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZEVXcGYKTerf9omc',
      'public': False,
      'uri': 'spotify:playlist:37i9dQZEVXcGYKTerf9omc',
    }),
    dict({
      'collaborative': False,
      'description': 'Catch all the latest music from artists you follow, plus new singles picked for you. Updates every Friday.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZEVXbsfxNSCNXcqe',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://newjams-images.scdn.co/image/ab6764780000c480/dt/v3/release-radar/ab6761610000e5eb2c0d92dae9b4af4c8a565c3b/en-GB',
          'width': None,
        }),
      ]),
      'name': 'Release Radar',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZEVXbsfxNSCNXcqe',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZEVXbsfxNSCNXcqe',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/709T4OzANnUi2lKQLlVkrE',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b27312b78e0955d7be6bd6e9084aab67616d0000b273336a313426983a122d8ed70cab67616d0000b2738fae0b49fa2872779be1e77cab67616d0000b2739b90e4ccf55c0a23a13f4eae',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b27312b78e0955d7be6bd6e9084aab67616d0000b273336a313426983a122d8ed70cab67616d0000b2738fae0b49fa2872779be1e77cab67616d0000b2739b90e4ccf55c0a23a13f4eae',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b27312b78e0955d7be6bd6e9084aab67616d0000b273336a313426983a122d8ed70cab67616d0000b2738fae0b49fa2872779be1e77cab67616d0000b2739b90e4ccf55c0a23a13f4eae',
          'width': 60,
        }),
      ]),
      'name': "March '22",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '709T4OzANnUi2lKQLlVkrE',
      'public': False,
      'uri': 'spotify:playlist:709T4OzANnUi2lKQLlVkrE',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/57ZuuAVl0eAZvhisoFP3SC',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b27320b467550945fd123e00f0a5ab67616d0000b273490a887b85a95378ea66b41dab67616d0000b2736bb188bb70c9561e60de61cbab67616d0000b2737f500193535d8fe6d4cb398f',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b27320b467550945fd123e00f0a5ab67616d0000b273490a887b85a95378ea66b41dab67616d0000b2736bb188bb70c9561e60de61cbab67616d0000b2737f500193535d8fe6d4cb398f',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b27320b467550945fd123e00f0a5ab67616d0000b273490a887b85a95378ea66b41dab67616d0000b2736bb188bb70c9561e60de61cbab67616d0000b2737f500193535d8fe6d4cb398f',
          'width': 60,
        }),
      ]),
      'name': "February '22",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '57ZuuAVl0eAZvhisoFP3SC',
      'public': False,
      'uri': 'spotify:playlist:57ZuuAVl0eAZvhisoFP3SC',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4OI1xDCLFlEcfgaeyowpEu',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b27315893afacb5d2604085a9d8eab67616d0000b273356a689446b81073e1071987ab67616d0000b2737f86c9158ee0a14faa484d53ab67616d0000b27395da52884fb152645273020d',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b27315893afacb5d2604085a9d8eab67616d0000b273356a689446b81073e1071987ab67616d0000b2737f86c9158ee0a14faa484d53ab67616d0000b27395da52884fb152645273020d',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b27315893afacb5d2604085a9d8eab67616d0000b273356a689446b81073e1071987ab67616d0000b2737f86c9158ee0a14faa484d53ab67616d0000b27395da52884fb152645273020d',
          'width': 60,
        }),
      ]),
      'name': "January '22",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4OI1xDCLFlEcfgaeyowpEu',
      'public': False,
      'uri': 'spotify:playlist:4OI1xDCLFlEcfgaeyowpEu',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4NsY2DKzQIjaajal5L25Kt',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b2731bfe2bbcc1f3e104459fef3cab67616d0000b2735425fecb078325803cd33dc8ab67616d0000b273a0a1e3d999ccb049ab3af5eaab67616d0000b273d7d88c479133a202690899d6',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b2731bfe2bbcc1f3e104459fef3cab67616d0000b2735425fecb078325803cd33dc8ab67616d0000b273a0a1e3d999ccb049ab3af5eaab67616d0000b273d7d88c479133a202690899d6',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b2731bfe2bbcc1f3e104459fef3cab67616d0000b2735425fecb078325803cd33dc8ab67616d0000b273a0a1e3d999ccb049ab3af5eaab67616d0000b273d7d88c479133a202690899d6',
          'width': 60,
        }),
      ]),
      'name': "December '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4NsY2DKzQIjaajal5L25Kt',
      'public': False,
      'uri': 'spotify:playlist:4NsY2DKzQIjaajal5L25Kt',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5dV0IeLCysOP6qEDGzhHw0',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b273014392f7224d7765e698a904ab67616d0000b27317f6a7b8151062c09e7c8a8fab67616d0000b273ec8d2bf88ac5308f8b9b8dc8ab67616d0000b273f4a6ca892c6ed5a8e969e8a9',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b273014392f7224d7765e698a904ab67616d0000b27317f6a7b8151062c09e7c8a8fab67616d0000b273ec8d2bf88ac5308f8b9b8dc8ab67616d0000b273f4a6ca892c6ed5a8e969e8a9',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b273014392f7224d7765e698a904ab67616d0000b27317f6a7b8151062c09e7c8a8fab67616d0000b273ec8d2bf88ac5308f8b9b8dc8ab67616d0000b273f4a6ca892c6ed5a8e969e8a9',
          'width': 60,
        }),
      ]),
      'name': "November '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '5dV0IeLCysOP6qEDGzhHw0',
      'public': False,
      'uri': 'spotify:playlist:5dV0IeLCysOP6qEDGzhHw0',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/40bvnxNQlivxZ02DmDzNxy',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d0000b2731b6dc095ae71e2a017b5f9b6ab67616d0000b2731d47ca87b7476af61dd4e502ab67616d0000b273fa244f6c5c40c2052d4c5408ab67616d0000b273feeecb5afca011822a371efe',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d0000b2731b6dc095ae71e2a017b5f9b6ab67616d0000b2731d47ca87b7476af61dd4e502ab67616d0000b273fa244f6c5c40c2052d4c5408ab67616d0000b273feeecb5afca011822a371efe',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d0000b2731b6dc095ae71e2a017b5f9b6ab67616d0000b2731d47ca87b7476af61dd4e502ab67616d0000b273fa244f6c5c40c2052d4c5408ab67616d0000b273feeecb5afca011822a371efe',
          'width': 60,
        }),
      ]),
      'name': "October '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '40bvnxNQlivxZ02DmDzNxy',
      'public': False,
      'uri': 'spotify:playlist:40bvnxNQlivxZ02DmDzNxy',
    }),
  ])
# ---
# name: test_get_current_users_playlists[current_user_playlist_2.json]
  list([
    dict({
      'collaborative': False,
      'description': 'You listened to <a href="spotify:playlist:37i9dQZF1EIgrtU6YDkEQE">freedom</a> and <a href="spotify:playlist:37i9dQZF1EIdpo5I50ibyV">vibing</a> on Mondays in the morning. Here\'s some: <a href="spotify:playlist:37i9dQZF1EIdec6qRjNYma">melodic techno</a>, <a href="spotify:playlist:37i9dQZF1EQpoj8u9Hn81e">house</a>, <a href="spotify:playlist:37i9dQZF1EIhEAiEhIniSC">fraternity</a>, <a href="spotify:playlist:37i9dQZF1EIdJGESPytB8N">130 bpm</a>, <a href="spotify:playlist:37i9dQZF1EIftxQNa49o4y">doof doof</a> and <a href="spotify:playlist:37i9dQZF1EIe1dCdpWzpql">electric</a>',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1EP6YuccBxUcC1',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://daylist.spotifycdn.com/playlist-covers-mix/en/morning_default.jpg',
          'width': None,
        }),
      ]),
      'name': 'daylist • melodic techno house monday morning',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1EP6YuccBxUcC1',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1EP6YuccBxUcC1',
    }),
    dict({
      'collaborative': False,
      'description': 'A Blend of music for Joost and Cheyenne. Updates daily.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1EJvpyGjPopYtd',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://blend-playlist-covers.spotifycdn.com/v2/blend_DEFAULT-azure-pink-en.jpg',
          'width': None,
        }),
      ]),
      'name': 'Cheyenne + Joost',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1EJvpyGjPopYtd',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1EJvpyGjPopYtd',
    }),
    dict({
      'collaborative': False,
      'description': '100% good vibes.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWYMroOc5KTTh',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f0000000253a4d12c459c3cd2d265dfa2',
          'width': None,
        }),
      ]),
      'name': 'Serotonin',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWYMroOc5KTTh',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1DWYMroOc5KTTh',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5t75uJ5vBvEdbbvs5uIqXJ',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e0205c6f48cceeb832778012b21',
          'width': None,
        }),
      ]),
      'name': 'Sweet',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '5t75uJ5vBvEdbbvs5uIqXJ',
      'public': True,
      'uri': 'spotify:playlist:5t75uJ5vBvEdbbvs5uIqXJ',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0pM0KTMXM7K5qr3sL2DPw1',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02991e1b6c088e2abc38f584c8',
          'width': None,
        }),
      ]),
      'name': 'Pain',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '0pM0KTMXM7K5qr3sL2DPw1',
      'public': True,
      'uri': 'spotify:playlist:0pM0KTMXM7K5qr3sL2DPw1',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4WkWJ0EjHEFASDevhM8oPw',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02d061f5bfae8d38558f3698c1',
          'width': None,
        }),
      ]),
      'name': 'Hyper',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4WkWJ0EjHEFASDevhM8oPw',
      'public': True,
      'uri': 'spotify:playlist:4WkWJ0EjHEFASDevhM8oPw',
    }),
    dict({
      'collaborative': False,
      'description': 'A Blend of music for Joost and Christel. Updates daily.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1EJwDEkXAeJkCv',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://blend-playlist-covers.spotifycdn.com/v2/blend_DEFAULT-forest-pink-en.jpg',
          'width': None,
        }),
      ]),
      'name': 'Christel + Joost',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1EJwDEkXAeJkCv',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1EJwDEkXAeJkCv',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1RHirWgH1weMsBLi4KOK9d',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e022f3e58dd611d177973cb3a8cab67616d00001e0245cab965cb4639a4e669564aab67616d00001e029e83c93811be6abfad8649d6ab67616d00001e02e4c03429788f0aff263a5fc6',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e022f3e58dd611d177973cb3a8cab67616d00001e0245cab965cb4639a4e669564aab67616d00001e029e83c93811be6abfad8649d6ab67616d00001e02e4c03429788f0aff263a5fc6',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e022f3e58dd611d177973cb3a8cab67616d00001e0245cab965cb4639a4e669564aab67616d00001e029e83c93811be6abfad8649d6ab67616d00001e02e4c03429788f0aff263a5fc6',
          'width': 60,
        }),
      ]),
      'name': 'Ain’t got shit on me',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Rensie',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/317g2sbpe3ccycu45fes6lfr5lpe',
        }),
        'href': 'https://api.spotify.com/v1/users/317g2sbpe3ccycu45fes6lfr5lpe',
        'object_type': 'user',
        'owner_id': '317g2sbpe3ccycu45fes6lfr5lpe',
        'uri': 'spotify:user:317g2sbpe3ccycu45fes6lfr5lpe',
      }),
      'playlist_id': '1RHirWgH1weMsBLi4KOK9d',
      'public': True,
      'uri': 'spotify:playlist:1RHirWgH1weMsBLi4KOK9d',
    }),
    dict({
      'collaborative': False,
      'description': 'A Blend of music for Joost and kosmik. Updates daily.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1EJDyIuS82b8FD',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://blend-playlist-covers.spotifycdn.com/v2/blend_DEFAULT-maroon-red-en.jpg',
          'width': None,
        }),
      ]),
      'name': 'kosmik + Joost',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1EJDyIuS82b8FD',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1EJDyIuS82b8FD',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2ZfissHhjQnhlmD54h6elH',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020f0e63e38a0ea92314ab9d7fab67616d00001e027622b889949b07f15c6b57e2ab67616d00001e02a871bc3a84418ad1240a5d4eab67616d00001e02f56d363d03630bf3ee50b705',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020f0e63e38a0ea92314ab9d7fab67616d00001e027622b889949b07f15c6b57e2ab67616d00001e02a871bc3a84418ad1240a5d4eab67616d00001e02f56d363d03630bf3ee50b705',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020f0e63e38a0ea92314ab9d7fab67616d00001e027622b889949b07f15c6b57e2ab67616d00001e02a871bc3a84418ad1240a5d4eab67616d00001e02f56d363d03630bf3ee50b705',
          'width': 60,
        }),
      ]),
      'name': 'Billie (interlude)',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '2ZfissHhjQnhlmD54h6elH',
      'public': True,
      'uri': 'spotify:playlist:2ZfissHhjQnhlmD54h6elH',
    }),
    dict({
      'collaborative': False,
      'description': 'Missing: Metrik - Techtonic;  GAJATE - Baile Funk',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1vOHEgZ5UszkWycPjnG2Uo',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da84dce297c9b2a3b46d3c0a41fb',
          'width': None,
        }),
      ]),
      'name': 'Forza Horizon 5 Bass Arena',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'SylveonTribe',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/rwilming',
        }),
        'href': 'https://api.spotify.com/v1/users/rwilming',
        'object_type': 'user',
        'owner_id': 'rwilming',
        'uri': 'spotify:user:rwilming',
      }),
      'playlist_id': '1vOHEgZ5UszkWycPjnG2Uo',
      'public': True,
      'uri': 'spotify:playlist:1vOHEgZ5UszkWycPjnG2Uo',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4hQFqB1AtOpzsAv01E8n6c',
      }),
      'images': list([
      ]),
      'name': 'My Playlist #63',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4hQFqB1AtOpzsAv01E8n6c',
      'public': True,
      'uri': 'spotify:playlist:4hQFqB1AtOpzsAv01E8n6c',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0Jgs7FxHX86twpgCDehAHv',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e026c9556ea020144591559e3e3ab67616d00001e0285d230a79a0f0081bff1f102ab67616d00001e02e014060de62f2809a3d16ac7ab67616d00001e02eb9d3cba22cfa81c14fb8f0b',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e026c9556ea020144591559e3e3ab67616d00001e0285d230a79a0f0081bff1f102ab67616d00001e02e014060de62f2809a3d16ac7ab67616d00001e02eb9d3cba22cfa81c14fb8f0b',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e026c9556ea020144591559e3e3ab67616d00001e0285d230a79a0f0081bff1f102ab67616d00001e02e014060de62f2809a3d16ac7ab67616d00001e02eb9d3cba22cfa81c14fb8f0b',
          'width': 60,
        }),
      ]),
      'name': 'Crème',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '0Jgs7FxHX86twpgCDehAHv',
      'public': True,
      'uri': 'spotify:playlist:0Jgs7FxHX86twpgCDehAHv',
    }),
    dict({
      'collaborative': False,
      'description': 'Spotify Wrapped presents the songs that you loved most this year.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1F0sijgNaJdgit',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://wrapped-images.spotifycdn.com/image/yts-2022/default/your-top-songs-2022_default_en.jpg',
          'width': None,
        }),
      ]),
      'name': 'Your Top Songs 2022',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1F0sijgNaJdgit',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1F0sijgNaJdgit',
    }),
    dict({
      'collaborative': False,
      'description': "The UK's biggest rock playlist. Cover: Circa Waves",
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX4DZAVUAwHMT',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000002460587c8418f9e99ddfa0464',
          'width': None,
        }),
      ]),
      'name': 'The Rock List',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX4DZAVUAwHMT',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1DX4DZAVUAwHMT',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6fHmmdjd2Urd7DAhb4bqOB',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020389027010b78a5e7dce426bab67616d00001e022b8ac52203215122968d4d6aab67616d00001e029eec33b045d88f87b9b06e67ab67616d00001e02ce70170f863e670be6a3874c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020389027010b78a5e7dce426bab67616d00001e022b8ac52203215122968d4d6aab67616d00001e029eec33b045d88f87b9b06e67ab67616d00001e02ce70170f863e670be6a3874c',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020389027010b78a5e7dce426bab67616d00001e022b8ac52203215122968d4d6aab67616d00001e029eec33b045d88f87b9b06e67ab67616d00001e02ce70170f863e670be6a3874c',
          'width': 60,
        }),
      ]),
      'name': 'My Shazam Tracks',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '6fHmmdjd2Urd7DAhb4bqOB',
      'public': True,
      'uri': 'spotify:playlist:6fHmmdjd2Urd7DAhb4bqOB',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5H2U7tZb9dMSHPwi20XcuD',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020aa31b3fb95f3e6bc48312d9ab67616d00001e027adbe35f4bcb61b4e9aa910cab67616d00001e02be90598dc5b123eb550c6d51ab67616d00001e02fe8c4d2d61fa92202800947c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020aa31b3fb95f3e6bc48312d9ab67616d00001e027adbe35f4bcb61b4e9aa910cab67616d00001e02be90598dc5b123eb550c6d51ab67616d00001e02fe8c4d2d61fa92202800947c',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020aa31b3fb95f3e6bc48312d9ab67616d00001e027adbe35f4bcb61b4e9aa910cab67616d00001e02be90598dc5b123eb550c6d51ab67616d00001e02fe8c4d2d61fa92202800947c',
          'width': 60,
        }),
      ]),
      'name': 'Likes',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '5H2U7tZb9dMSHPwi20XcuD',
      'public': True,
      'uri': 'spotify:playlist:5H2U7tZb9dMSHPwi20XcuD',
    }),
    dict({
      'collaborative': False,
      'description': 'Your weekly mixtape of fresh music. Enjoy new music and deep cuts picked for you. Updates every Monday.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZEVXcGYKTerf9omc',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://newjams-images.scdn.co/image/ab676477000033ad/dt/v3/discover-weekly/MJeySCHFAx31LmEuBGrG55letD5TLIXTCpfiZIWMsjHdcjZvNf1UcE4luVIM0bpDom7FKHJoeHt974AcHaBpQ48B7uzwdGQSm9Owdb0FtNk=/MjA6NjQ6ODBUNTEtMDEtNA==',
          'width': None,
        }),
      ]),
      'name': 'Discover Weekly',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZEVXcGYKTerf9omc',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZEVXcGYKTerf9omc',
    }),
    dict({
      'collaborative': False,
      'description': 'Catch all the latest music from artists you follow, plus new singles picked for you. Updates every Friday.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZEVXbsfxNSCNXcqe',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://newjams-images.scdn.co/image/ab67647800003f8a/dt/v3/release-radar/ab6761610000e5eb9e528993a2820267b97f6aae/en',
          'width': None,
        }),
      ]),
      'name': 'Release Radar',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZEVXbsfxNSCNXcqe',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZEVXbsfxNSCNXcqe',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/709T4OzANnUi2lKQLlVkrE',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0212b78e0955d7be6bd6e9084aab67616d00001e02336a313426983a122d8ed70cab67616d00001e028fae0b49fa2872779be1e77cab67616d00001e029b90e4ccf55c0a23a13f4eae',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0212b78e0955d7be6bd6e9084aab67616d00001e02336a313426983a122d8ed70cab67616d00001e028fae0b49fa2872779be1e77cab67616d00001e029b90e4ccf55c0a23a13f4eae',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0212b78e0955d7be6bd6e9084aab67616d00001e02336a313426983a122d8ed70cab67616d00001e028fae0b49fa2872779be1e77cab67616d00001e029b90e4ccf55c0a23a13f4eae',
          'width': 60,
        }),
      ]),
      'name': "March '22",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '709T4OzANnUi2lKQLlVkrE',
      'public': True,
      'uri': 'spotify:playlist:709T4OzANnUi2lKQLlVkrE',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/57ZuuAVl0eAZvhisoFP3SC',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02490a887b85a95378ea66b41dab67616d00001e026bb188bb70c9561e60de61cbab67616d00001e027f500193535d8fe6d4cb398fab67616d00001e02ca964f2c3c069b3fb9ec11be',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02490a887b85a95378ea66b41dab67616d00001e026bb188bb70c9561e60de61cbab67616d00001e027f500193535d8fe6d4cb398fab67616d00001e02ca964f2c3c069b3fb9ec11be',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02490a887b85a95378ea66b41dab67616d00001e026bb188bb70c9561e60de61cbab67616d00001e027f500193535d8fe6d4cb398fab67616d00001e02ca964f2c3c069b3fb9ec11be',
          'width': 60,
        }),
      ]),
      'name': "February '22",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '57ZuuAVl0eAZvhisoFP3SC',
      'public': True,
      'uri': 'spotify:playlist:57ZuuAVl0eAZvhisoFP3SC',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4OI1xDCLFlEcfgaeyowpEu',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0215893afacb5d2604085a9d8eab67616d00001e02356a689446b81073e1071987ab67616d00001e027f86c9158ee0a14faa484d53ab67616d00001e0295da52884fb152645273020d',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0215893afacb5d2604085a9d8eab67616d00001e02356a689446b81073e1071987ab67616d00001e027f86c9158ee0a14faa484d53ab67616d00001e0295da52884fb152645273020d',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0215893afacb5d2604085a9d8eab67616d00001e02356a689446b81073e1071987ab67616d00001e027f86c9158ee0a14faa484d53ab67616d00001e0295da52884fb152645273020d',
          'width': 60,
        }),
      ]),
      'name': "January '22",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4OI1xDCLFlEcfgaeyowpEu',
      'public': True,
      'uri': 'spotify:playlist:4OI1xDCLFlEcfgaeyowpEu',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4NsY2DKzQIjaajal5L25Kt',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e021bfe2bbcc1f3e104459fef3cab67616d00001e025425fecb078325803cd33dc8ab67616d00001e02a0a1e3d999ccb049ab3af5eaab67616d00001e02d7d88c479133a202690899d6',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e021bfe2bbcc1f3e104459fef3cab67616d00001e025425fecb078325803cd33dc8ab67616d00001e02a0a1e3d999ccb049ab3af5eaab67616d00001e02d7d88c479133a202690899d6',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e021bfe2bbcc1f3e104459fef3cab67616d00001e025425fecb078325803cd33dc8ab67616d00001e02a0a1e3d999ccb049ab3af5eaab67616d00001e02d7d88c479133a202690899d6',
          'width': 60,
        }),
      ]),
      'name': "December '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4NsY2DKzQIjaajal5L25Kt',
      'public': True,
      'uri': 'spotify:playlist:4NsY2DKzQIjaajal5L25Kt',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5dV0IeLCysOP6qEDGzhHw0',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02014392f7224d7765e698a904ab67616d00001e0217f6a7b8151062c09e7c8a8fab67616d00001e02ec8d2bf88ac5308f8b9b8dc8ab67616d00001e02f4a6ca892c6ed5a8e969e8a9',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02014392f7224d7765e698a904ab67616d00001e0217f6a7b8151062c09e7c8a8fab67616d00001e02ec8d2bf88ac5308f8b9b8dc8ab67616d00001e02f4a6ca892c6ed5a8e969e8a9',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02014392f7224d7765e698a904ab67616d00001e0217f6a7b8151062c09e7c8a8fab67616d00001e02ec8d2bf88ac5308f8b9b8dc8ab67616d00001e02f4a6ca892c6ed5a8e969e8a9',
          'width': 60,
        }),
      ]),
      'name': "November '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '5dV0IeLCysOP6qEDGzhHw0',
      'public': True,
      'uri': 'spotify:playlist:5dV0IeLCysOP6qEDGzhHw0',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/40bvnxNQlivxZ02DmDzNxy',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e021d47ca87b7476af61dd4e502ab67616d00001e023780c2d97ecbd5fc0a4cf107ab67616d00001e02fa244f6c5c40c2052d4c5408ab67616d00001e02feeecb5afca011822a371efe',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e021d47ca87b7476af61dd4e502ab67616d00001e023780c2d97ecbd5fc0a4cf107ab67616d00001e02fa244f6c5c40c2052d4c5408ab67616d00001e02feeecb5afca011822a371efe',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e021d47ca87b7476af61dd4e502ab67616d00001e023780c2d97ecbd5fc0a4cf107ab67616d00001e02fa244f6c5c40c2052d4c5408ab67616d00001e02feeecb5afca011822a371efe',
          'width': 60,
        }),
      ]),
      'name': "October '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '40bvnxNQlivxZ02DmDzNxy',
      'public': True,
      'uri': 'spotify:playlist:40bvnxNQlivxZ02DmDzNxy',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2ExZs1G4AOluuEwg3q5M1v',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020a097bf1204c74abd760e3aeab67616d00001e022f3a0b652f199fc7b3ff0cabab67616d00001e023c041e53cb5c38b6de03e758ab67616d00001e02913a6d7587d853e1dd4c1580',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020a097bf1204c74abd760e3aeab67616d00001e022f3a0b652f199fc7b3ff0cabab67616d00001e023c041e53cb5c38b6de03e758ab67616d00001e02913a6d7587d853e1dd4c1580',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020a097bf1204c74abd760e3aeab67616d00001e022f3a0b652f199fc7b3ff0cabab67616d00001e023c041e53cb5c38b6de03e758ab67616d00001e02913a6d7587d853e1dd4c1580',
          'width': 60,
        }),
      ]),
      'name': "September '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '2ExZs1G4AOluuEwg3q5M1v',
      'public': True,
      'uri': 'spotify:playlist:2ExZs1G4AOluuEwg3q5M1v',
    }),
    dict({
      'collaborative': False,
      'description': 'de soms niet zo casual weird vibe playlist',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4jNUJLnkZJ32nuFE1PjkGu',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02395ee31df8ad9108f5775b1cab67616d00001e0269a6e28f64890d2ed52d5094ab67616d00001e029433432ccc03bf5e6b7837d2ab67616d00001e02f2486b438645e97b523e4f90',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02395ee31df8ad9108f5775b1cab67616d00001e0269a6e28f64890d2ed52d5094ab67616d00001e029433432ccc03bf5e6b7837d2ab67616d00001e02f2486b438645e97b523e4f90',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02395ee31df8ad9108f5775b1cab67616d00001e0269a6e28f64890d2ed52d5094ab67616d00001e029433432ccc03bf5e6b7837d2ab67616d00001e02f2486b438645e97b523e4f90',
          'width': 60,
        }),
      ]),
      'name': 'Slumpmässiga',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'xleanne_',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/xleanne_',
        }),
        'href': 'https://api.spotify.com/v1/users/xleanne_',
        'object_type': 'user',
        'owner_id': 'xleanne_',
        'uri': 'spotify:user:xleanne_',
      }),
      'playlist_id': '4jNUJLnkZJ32nuFE1PjkGu',
      'public': True,
      'uri': 'spotify:playlist:4jNUJLnkZJ32nuFE1PjkGu',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/700dVjBihCDj2HwyhYDTRp',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e021d8b02b7c886f34c408f4ca0ab67616d00001e027b85c73badee55bc69c6ce66ab67616d00001e029071131306eee200e8de2783ab67616d00001e02f7fb699c69d6529d4495766d',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e021d8b02b7c886f34c408f4ca0ab67616d00001e027b85c73badee55bc69c6ce66ab67616d00001e029071131306eee200e8de2783ab67616d00001e02f7fb699c69d6529d4495766d',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e021d8b02b7c886f34c408f4ca0ab67616d00001e027b85c73badee55bc69c6ce66ab67616d00001e029071131306eee200e8de2783ab67616d00001e02f7fb699c69d6529d4495766d',
          'width': 60,
        }),
      ]),
      'name': "August '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '700dVjBihCDj2HwyhYDTRp',
      'public': True,
      'uri': 'spotify:playlist:700dVjBihCDj2HwyhYDTRp',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6B5dmWX7pK2LHHtS6ph265',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0272a0322c6a1ff584ead1adc5ab67616d00001e02a91f9722dea90b3ac0d725daab67616d00001e02b98892f41cd5ab918c34daa9ab67616d00001e02ebea6d997f62d17e9c4eab6c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0272a0322c6a1ff584ead1adc5ab67616d00001e02a91f9722dea90b3ac0d725daab67616d00001e02b98892f41cd5ab918c34daa9ab67616d00001e02ebea6d997f62d17e9c4eab6c',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0272a0322c6a1ff584ead1adc5ab67616d00001e02a91f9722dea90b3ac0d725daab67616d00001e02b98892f41cd5ab918c34daa9ab67616d00001e02ebea6d997f62d17e9c4eab6c',
          'width': 60,
        }),
      ]),
      'name': 'Discover Weekly Archive',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '6B5dmWX7pK2LHHtS6ph265',
      'public': True,
      'uri': 'spotify:playlist:6B5dmWX7pK2LHHtS6ph265',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0ISThPpDv4JBNeHdptcK6i',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0293aa4d55db0e53466971c07fab67616d00001e02bffd2fc0fd4c3b09d3cd2616ab67616d00001e02c3647b02a2dba464fa7a739bab67616d00001e02f4956c3ceefc6fa1cffc6da6',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0293aa4d55db0e53466971c07fab67616d00001e02bffd2fc0fd4c3b09d3cd2616ab67616d00001e02c3647b02a2dba464fa7a739bab67616d00001e02f4956c3ceefc6fa1cffc6da6',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0293aa4d55db0e53466971c07fab67616d00001e02bffd2fc0fd4c3b09d3cd2616ab67616d00001e02c3647b02a2dba464fa7a739bab67616d00001e02f4956c3ceefc6fa1cffc6da6',
          'width': 60,
        }),
      ]),
      'name': 'Dance vibes',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '0ISThPpDv4JBNeHdptcK6i',
      'public': True,
      'uri': 'spotify:playlist:0ISThPpDv4JBNeHdptcK6i',
    }),
    dict({
      'collaborative': True,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2ElmM8s9Um1XSP07hADX9s',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020f5b85c5d4a8131d01aca941ab67616d00001e0268c13496a915eea4d4325681ab67616d00001e02a91c10fe9472d9bd89802e5aab67616d00001e02c691f9d8b09e963e7935faab',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020f5b85c5d4a8131d01aca941ab67616d00001e0268c13496a915eea4d4325681ab67616d00001e02a91c10fe9472d9bd89802e5aab67616d00001e02c691f9d8b09e963e7935faab',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020f5b85c5d4a8131d01aca941ab67616d00001e0268c13496a915eea4d4325681ab67616d00001e02a91c10fe9472d9bd89802e5aab67616d00001e02c691f9d8b09e963e7935faab',
          'width': 60,
        }),
      ]),
      'name': 'goeien numertjs',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '2ElmM8s9Um1XSP07hADX9s',
      'public': True,
      'uri': 'spotify:playlist:2ElmM8s9Um1XSP07hADX9s',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0DRUBqBUSFJH1a7FvBIsGg',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e023d197fe39ea86e8b4ac05f28ab67616d00001e0243b45e6fad695fb69d771075ab67616d00001e025486d91bd83f2c4e0b1669f5ab67616d00001e02e6d896d0369324af77f47e9a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e023d197fe39ea86e8b4ac05f28ab67616d00001e0243b45e6fad695fb69d771075ab67616d00001e025486d91bd83f2c4e0b1669f5ab67616d00001e02e6d896d0369324af77f47e9a',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e023d197fe39ea86e8b4ac05f28ab67616d00001e0243b45e6fad695fb69d771075ab67616d00001e025486d91bd83f2c4e0b1669f5ab67616d00001e02e6d896d0369324af77f47e9a',
          'width': 60,
        }),
      ]),
      'name': 'Summer vibes',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '0DRUBqBUSFJH1a7FvBIsGg',
      'public': True,
      'uri': 'spotify:playlist:0DRUBqBUSFJH1a7FvBIsGg',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4PSXSX9WhxdjAzSjU175od',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e027c33cef24775c3780a9930f4ab67616d00001e029357f6851b075c6fb7b44f41ab67616d00001e02ef24c3fdbf856340d55cfeb2ab67616d00001e02fa091c156c618ffd26ed2356',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e027c33cef24775c3780a9930f4ab67616d00001e029357f6851b075c6fb7b44f41ab67616d00001e02ef24c3fdbf856340d55cfeb2ab67616d00001e02fa091c156c618ffd26ed2356',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e027c33cef24775c3780a9930f4ab67616d00001e029357f6851b075c6fb7b44f41ab67616d00001e02ef24c3fdbf856340d55cfeb2ab67616d00001e02fa091c156c618ffd26ed2356',
          'width': 60,
        }),
      ]),
      'name': "July '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4PSXSX9WhxdjAzSjU175od',
      'public': True,
      'uri': 'spotify:playlist:4PSXSX9WhxdjAzSjU175od',
    }),
    dict({
      'collaborative': False,
      'description': 'A Blend of music for Joost and xleanne_. Updates daily.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1EJADo3CBlOCly',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://blend-playlist-covers.spotifycdn.com/v2/blend_DEFAULT-royal-azure-en.jpg',
          'width': None,
        }),
      ]),
      'name': 'xleanne_ + Joost',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1EJADo3CBlOCly',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1EJADo3CBlOCly',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1XKSZRcsYP6VTkObunDIjQ',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020902cf9a0391c16a5fa4f969ab67616d00001e0234b23957c8bf15277804a2aeab67616d00001e02577dd278fa34655ace27f2c5ab67616d00001e028ff16aeca5722fcced965cb8',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020902cf9a0391c16a5fa4f969ab67616d00001e0234b23957c8bf15277804a2aeab67616d00001e02577dd278fa34655ace27f2c5ab67616d00001e028ff16aeca5722fcced965cb8',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020902cf9a0391c16a5fa4f969ab67616d00001e0234b23957c8bf15277804a2aeab67616d00001e02577dd278fa34655ace27f2c5ab67616d00001e028ff16aeca5722fcced965cb8',
          'width': 60,
        }),
      ]),
      'name': "June '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '1XKSZRcsYP6VTkObunDIjQ',
      'public': True,
      'uri': 'spotify:playlist:1XKSZRcsYP6VTkObunDIjQ',
    }),
    dict({
      'collaborative': False,
      'description': 'This is a playlist of some of the songs in the Keinemusik set during the beach party in the Cayo Perico mission in Grand Theft Auto 5 ',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3uCD1EyW3JRx8SV1QnA3Zm',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da848e09c57d7b2ef2a17e853d4c',
          'width': None,
        }),
      ]),
      'name': 'GTA Cayo Perico Beach Party: Keinemusik Set',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Austin Martinez',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/127651589',
        }),
        'href': 'https://api.spotify.com/v1/users/127651589',
        'object_type': 'user',
        'owner_id': '127651589',
        'uri': 'spotify:user:127651589',
      }),
      'playlist_id': '3uCD1EyW3JRx8SV1QnA3Zm',
      'public': True,
      'uri': 'spotify:playlist:3uCD1EyW3JRx8SV1QnA3Zm',
    }),
    dict({
      'collaborative': False,
      'description': 'A Blend of music for Joost and Marc. Updates daily.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1EJBr22FUQwTGS',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://blend-playlist-covers.spotifycdn.com/v2/blend_DEFAULT-azure-yellow-en.jpg',
          'width': None,
        }),
      ]),
      'name': 'Marc + Joost',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1EJBr22FUQwTGS',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1EJBr22FUQwTGS',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3yPujxZ9OiB4By8COZaxaK',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e022614c295a38ee782d093aa09ab67616d00001e0236e0535a12c22b83a6a59768ab67616d00001e024e587b1639b57a16e9161883ab67616d00001e02a1035156496a35002a9deeb5',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e022614c295a38ee782d093aa09ab67616d00001e0236e0535a12c22b83a6a59768ab67616d00001e024e587b1639b57a16e9161883ab67616d00001e02a1035156496a35002a9deeb5',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e022614c295a38ee782d093aa09ab67616d00001e0236e0535a12c22b83a6a59768ab67616d00001e024e587b1639b57a16e9161883ab67616d00001e02a1035156496a35002a9deeb5',
          'width': 60,
        }),
      ]),
      'name': "May '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '3yPujxZ9OiB4By8COZaxaK',
      'public': True,
      'uri': 'spotify:playlist:3yPujxZ9OiB4By8COZaxaK',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4A31OO75jaLCV2r7bvbQUa',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0204ef796699518264973fee48ab67616d00001e021e2057f92f53ad311ac934ddab67616d00001e0243b45e6fad695fb69d771075ab67616d00001e02ea427780debfc4faf793df19',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0204ef796699518264973fee48ab67616d00001e021e2057f92f53ad311ac934ddab67616d00001e0243b45e6fad695fb69d771075ab67616d00001e02ea427780debfc4faf793df19',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0204ef796699518264973fee48ab67616d00001e021e2057f92f53ad311ac934ddab67616d00001e0243b45e6fad695fb69d771075ab67616d00001e02ea427780debfc4faf793df19',
          'width': 60,
        }),
      ]),
      'name': "April '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '4A31OO75jaLCV2r7bvbQUa',
      'public': True,
      'uri': 'spotify:playlist:4A31OO75jaLCV2r7bvbQUa',
    }),
    dict({
      'collaborative': False,
      'description': 'HYPERTECHNO | TECHNO |  SLAP HOUSE | BRAZILIAN BASS | BASS HOUSE | EDM | BASS BOOSTED CAR MUSIC |  FUTURE HOUSE | FUTURE BOUNCE | GYM MOTIVATION',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6JbGAAe70bKTA3yfddjWTK',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da849fa7c9ddef714003c524c89c',
          'width': None,
        }),
      ]),
      'name': 'BASS BOOSTED CAR MUSIC 2023',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'LIZOT',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/max.kleinschmidt',
        }),
        'href': 'https://api.spotify.com/v1/users/max.kleinschmidt',
        'object_type': 'user',
        'owner_id': 'max.kleinschmidt',
        'uri': 'spotify:user:max.kleinschmidt',
      }),
      'playlist_id': '6JbGAAe70bKTA3yfddjWTK',
      'public': True,
      'uri': 'spotify:playlist:6JbGAAe70bKTA3yfddjWTK',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6lVbphMrnxl1vIlfPhdA8i',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020678208f00e4111c88958bb9ab67616d00001e0216faab065323874331824083ab67616d00001e02979ee06e9685aff6ff000417ab67616d00001e02cf6a74cdef3c4e0d828c4057',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020678208f00e4111c88958bb9ab67616d00001e0216faab065323874331824083ab67616d00001e02979ee06e9685aff6ff000417ab67616d00001e02cf6a74cdef3c4e0d828c4057',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020678208f00e4111c88958bb9ab67616d00001e0216faab065323874331824083ab67616d00001e02979ee06e9685aff6ff000417ab67616d00001e02cf6a74cdef3c4e0d828c4057',
          'width': 60,
        }),
      ]),
      'name': "March '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '6lVbphMrnxl1vIlfPhdA8i',
      'public': True,
      'uri': 'spotify:playlist:6lVbphMrnxl1vIlfPhdA8i',
    }),
    dict({
      'collaborative': False,
      'description': "Unlock the Beats of ADE 2024! Prepare for an unforgettable experience as we spotlight the electrifying tracks from 2,500+ artists who will define this year's 1,000+ ADE events. This is your exclusive sneak peek into this years’ line-up! ",
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX3FNkD0kDpDV',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000002f9923c344f94fc95547da337',
          'width': None,
        }),
      ]),
      'name': 'ADE Guest List',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX3FNkD0kDpDV',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1DX3FNkD0kDpDV',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3l0iA85qv43y9aMWztVIHu',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0245951a69fe39a6e163122eabab67616d00001e02460771a72003ffccb35a568fab67616d00001e02927a9b11b73b0d238983065cab67616d00001e02fbe46d92ba0d5ca39d419f07',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0245951a69fe39a6e163122eabab67616d00001e02460771a72003ffccb35a568fab67616d00001e02927a9b11b73b0d238983065cab67616d00001e02fbe46d92ba0d5ca39d419f07',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0245951a69fe39a6e163122eabab67616d00001e02460771a72003ffccb35a568fab67616d00001e02927a9b11b73b0d238983065cab67616d00001e02fbe46d92ba0d5ca39d419f07',
          'width': 60,
        }),
      ]),
      'name': "February '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '3l0iA85qv43y9aMWztVIHu',
      'public': True,
      'uri': 'spotify:playlist:3l0iA85qv43y9aMWztVIHu',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2jp4GK1k1l7I1X67f2EbmD',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0236c95d8631f465e6898bccc8ab67616d00001e02808bcc3151a05dbd4805f340ab67616d00001e028cffb7c6c40759eaf8a5a142ab67616d00001e02a11119d93d213de96081c6e7',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0236c95d8631f465e6898bccc8ab67616d00001e02808bcc3151a05dbd4805f340ab67616d00001e028cffb7c6c40759eaf8a5a142ab67616d00001e02a11119d93d213de96081c6e7',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0236c95d8631f465e6898bccc8ab67616d00001e02808bcc3151a05dbd4805f340ab67616d00001e028cffb7c6c40759eaf8a5a142ab67616d00001e02a11119d93d213de96081c6e7',
          'width': 60,
        }),
      ]),
      'name': "January '21",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '2jp4GK1k1l7I1X67f2EbmD',
      'public': True,
      'uri': 'spotify:playlist:2jp4GK1k1l7I1X67f2EbmD',
    }),
    dict({
      'collaborative': False,
      'description': 'The songs you loved most this year, all wrapped up.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1EM9phQOPnbiB6',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://lineup-images.scdn.co/wrapped-2020-top100_DEFAULT-en.jpg',
          'width': None,
        }),
      ]),
      'name': 'Your Top Songs 2020',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1EM9phQOPnbiB6',
      'public': True,
      'uri': 'spotify:playlist:37i9dQZF1EM9phQOPnbiB6',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/027kb6scBKg9y9dE5nPPTv',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0217cc3111c640c8e15efee21fab67616d00001e021c8cb0a0bc1490aaa287db71ab67616d00001e02e2a6468a88f17315e33274b7ab67616d00001e02f49c98f285a7cebc07fe581c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0217cc3111c640c8e15efee21fab67616d00001e021c8cb0a0bc1490aaa287db71ab67616d00001e02e2a6468a88f17315e33274b7ab67616d00001e02f49c98f285a7cebc07fe581c',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0217cc3111c640c8e15efee21fab67616d00001e021c8cb0a0bc1490aaa287db71ab67616d00001e02e2a6468a88f17315e33274b7ab67616d00001e02f49c98f285a7cebc07fe581c',
          'width': 60,
        }),
      ]),
      'name': "December '20",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '027kb6scBKg9y9dE5nPPTv',
      'public': True,
      'uri': 'spotify:playlist:027kb6scBKg9y9dE5nPPTv',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1lX3M3MvpNmQGzuh7tVi15',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020f8c3812f2ce29f1feadcf94ab67616d00001e0229fd157c5178bd374375e34dab67616d00001e024e667c4d363b244d8ec17a9dab67616d00001e02d632291b4714c9b1a7ef2d02',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020f8c3812f2ce29f1feadcf94ab67616d00001e0229fd157c5178bd374375e34dab67616d00001e024e667c4d363b244d8ec17a9dab67616d00001e02d632291b4714c9b1a7ef2d02',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020f8c3812f2ce29f1feadcf94ab67616d00001e0229fd157c5178bd374375e34dab67616d00001e024e667c4d363b244d8ec17a9dab67616d00001e02d632291b4714c9b1a7ef2d02',
          'width': 60,
        }),
      ]),
      'name': "November '20",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Joost Lekkerkerker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1112264649',
        }),
        'href': 'https://api.spotify.com/v1/users/1112264649',
        'object_type': 'user',
        'owner_id': '1112264649',
        'uri': 'spotify:user:1112264649',
      }),
      'playlist_id': '1lX3M3MvpNmQGzuh7tVi15',
      'public': True,
      'uri': 'spotify:playlist:1lX3M3MvpNmQGzuh7tVi15',
    }),
  ])
# ---
# name: test_get_devices
  list([
    dict({
      'device_id': '21dac6b0e0a1f181870fdc9749b2656466557687',
      'device_type': <DeviceType.COMPUTER: 'Computer'>,
      'is_active': False,
      'is_private_session': False,
      'is_restricted': False,
      'name': 'DESKTOP-BKC5SIK',
      'supports_volume': True,
      'volume_percent': 69,
    }),
  ])
# ---
# name: test_get_episode
  dict({
    'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
    'duration_ms': 3690161,
    'episode_id': '3o0RYoo5iOMKSmEbunsbvW',
    'explicit': False,
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/episode/3o0RYoo5iOMKSmEbunsbvW',
    }),
    'href': 'https://api.spotify.com/v1/episodes/3o0RYoo5iOMKSmEbunsbvW',
    'images': list([
      dict({
        'height': 640,
        'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
        'width': 640,
      }),
      dict({
        'height': 300,
        'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
        'width': 300,
      }),
      dict({
        'height': 64,
        'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
        'width': 64,
      }),
    ]),
    'name': 'My Squirrel Has Brain Damage - Safety Third 119',
    'release_date': '2024-07-26',
    'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
    'show': dict({
      'description': 'Safety Third is a weekly show hosted by William Osman, NileRed, The Backyard Scientist, Allen Pan, and a couple other YouTube "Scientists". Sometimes we have guests, sometimes it\'s just us, but always: safety is our number three priority.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/show/1Y9ExMgMxoBVrgrfU7u0nD',
      }),
      'href': 'https://api.spotify.com/v1/shows/1Y9ExMgMxoBVrgrfU7u0nD',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
          'width': 64,
        }),
      ]),
      'name': 'Safety Third',
      'publisher': 'Safety Third ',
      'show_id': '1Y9ExMgMxoBVrgrfU7u0nD',
      'total_episodes': 120,
      'uri': 'spotify:show:1Y9ExMgMxoBVrgrfU7u0nD',
    }),
    'type': <ItemType.EPISODE: 'episode'>,
    'uri': 'spotify:episode:3o0RYoo5iOMKSmEbunsbvW',
  })
# ---
# name: test_get_episodes
  list([
    dict({
      'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 3690161,
      'episode_id': '3o0RYoo5iOMKSmEbunsbvW',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/3o0RYoo5iOMKSmEbunsbvW',
      }),
      'href': 'https://api.spotify.com/v1/episodes/3o0RYoo5iOMKSmEbunsbvW',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
          'width': 64,
        }),
      ]),
      'name': 'My Squirrel Has Brain Damage - Safety Third 119',
      'release_date': '2024-07-26',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'show': dict({
        'description': 'Safety Third is a weekly show hosted by William Osman, NileRed, The Backyard Scientist, Allen Pan, and a couple other YouTube "Scientists". Sometimes we have guests, sometimes it\'s just us, but always: safety is our number three priority.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/1Y9ExMgMxoBVrgrfU7u0nD',
        }),
        'href': 'https://api.spotify.com/v1/shows/1Y9ExMgMxoBVrgrfU7u0nD',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Safety Third',
        'publisher': 'Safety Third ',
        'show_id': '1Y9ExMgMxoBVrgrfU7u0nD',
        'total_episodes': 122,
        'uri': 'spotify:show:1Y9ExMgMxoBVrgrfU7u0nD',
      }),
      'type': <ItemType.EPISODE: 'episode'>,
      'uri': 'spotify:episode:3o0RYoo5iOMKSmEbunsbvW',
    }),
  ])
# ---
# name: test_get_featured_playlists
  list([
    dict({
      'collaborative': False,
      'description': 'De ideale playlist voor het fijne kerstgevoel bij de boom!',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX4dopZ9vOp1t',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000037d14c267b8ee5fea2246a8fe',
          'width': None,
        }),
      ]),
      'name': 'Kerst Hits 2023',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX4dopZ9vOp1t',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX4dopZ9vOp1t',
    }),
    dict({
      'collaborative': False,
      'description': 'De 50 populairste hits van Nederland. Cover: Jack Harlow',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWSBi5svWQ9Nk',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003f7b99051789611a49101c1cf',
          'width': None,
        }),
      ]),
      'name': 'Top Hits NL',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWSBi5svWQ9Nk',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWSBi5svWQ9Nk',
    }),
    dict({
      'collaborative': False,
      'description': 'The biggest Christmas songs of all time.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX0Yxoavh5qJV',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003ef53563c4fa1187c7537f13f',
          'width': None,
        }),
      ]),
      'name': 'Christmas Hits',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX0Yxoavh5qJV',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX0Yxoavh5qJV',
    }),
    dict({
      'collaborative': False,
      'description': 'Luister de Radio 2 Top 2000 - 2023 - Editie 25!',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWTmvXBN4DgpA',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000034a3550dfb857569735d6c5ab',
          'width': None,
        }),
      ]),
      'name': 'Top 2000',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWTmvXBN4DgpA',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWTmvXBN4DgpA',
    }),
    dict({
      'collaborative': False,
      'description': 'Lekker rustig aan doen op zondag met deze zachte pop liedjes.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWZpGSuzrdTXg',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000034203ab0c15f6a3243fea16d8',
          'width': None,
        }),
      ]),
      'name': 'Easy On Sunday',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWZpGSuzrdTXg',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWZpGSuzrdTXg',
    }),
    dict({
      'collaborative': False,
      'description': 'Timeless heart-warming classics from 1940- 1980 for the holiday season.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX6R7QUWePReA',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003b70e0f51ac4cf9d62cee4977',
          'width': None,
        }),
      ]),
      'name': 'Christmas Classics',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX6R7QUWePReA',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX6R7QUWePReA',
    }),
    dict({
      'collaborative': False,
      'description': 'De beste Nederlandse hits van vroeger en nu. Cover: Tino Martin & Mart Hoogkamer',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXdKMCnEhDnDL',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003d93ec9896683ab78fa949391',
          'width': None,
        }),
      ]),
      'name': 'Beste van NL',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXdKMCnEhDnDL',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXdKMCnEhDnDL',
    }),
    dict({
      'collaborative': False,
      'description': 'Reanny & King Ocho op de cover van Woordenschat!',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX19xRtMyA5LM',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003f90ad1550abb0e50440cc032',
          'width': None,
        }),
      ]),
      'name': 'Woordenschat',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX19xRtMyA5LM',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX19xRtMyA5LM',
    }),
    dict({
      'collaborative': False,
      'description': 'Koffie met gemoedelijke muziek op de achtergrond.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWYPwGkJoztcR',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f0000000358e9793722274f9d7b7e85e6',
          'width': None,
        }),
      ]),
      'name': "'t Koffiehuis",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWYPwGkJoztcR',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWYPwGkJoztcR',
    }),
    dict({
      'collaborative': False,
      'description': 'De grootste hits uit de kroeg in één playlist.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWUppGmuwT9c7',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003d307684e485446632dce60ab',
          'width': None,
        }),
      ]),
      'name': 'Kroegenhits',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWUppGmuwT9c7',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWUppGmuwT9c7',
    }),
    dict({
      'collaborative': False,
      'description': 'Niks aan te doen, Winter 2023 is coming! ',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXcx1szy2g67M',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003f2338153122480fcf814c326',
          'width': None,
        }),
      ]),
      'name': "Winter '23",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXcx1szy2g67M',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXcx1szy2g67M',
    }),
    dict({
      'collaborative': False,
      'description': 'Kick back to the best new and recent chill hits.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX4WYpdgoIcn6',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f0000000385a267af7eab188ae99105ad',
          'width': None,
        }),
      ]),
      'name': 'Chill Hits',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX4WYpdgoIcn6',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX4WYpdgoIcn6',
    }),
    dict({
      'collaborative': False,
      'description': 'Mitski is on top of the Hottest 50!',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXcBWIGoYBM5M',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000037ac0d0713aa7b5a4fb38e273',
          'width': None,
        }),
      ]),
      'name': 'Today’s Top Hits',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXcBWIGoYBM5M',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXcBWIGoYBM5M',
    }),
    dict({
      'collaborative': False,
      'description': 'Warm instrumental versions of your favorite Christmas songs.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWU0r6G8OGirN',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003c3196f5150c18abb9ce7db75',
          'width': None,
        }),
      ]),
      'name': 'Cozy Christmas Jazz',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWU0r6G8OGirN',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWU0r6G8OGirN',
    }),
    dict({
      'collaborative': False,
      'description': 'De meest gestreamde tracks van 2023 in Nederland. Cover: Maan',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWZ58KqXkQf1S',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003f1590ccbee8af2a83ef32d73',
          'width': None,
        }),
      ]),
      'name': 'Top Tracks 2023 NL',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWZ58KqXkQf1S',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWZ58KqXkQf1S',
    }),
    dict({
      'collaborative': False,
      'description': 'De beste en nieuwste dance hits. Cover: David Guetta & Kim Petras',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWTwCImwcYjDL',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003c0aa04aa9a5a82b6471e3d01',
          'width': None,
        }),
      ]),
      'name': '360 Dance',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWTwCImwcYjDL',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWTwCImwcYjDL',
    }),
    dict({
      'collaborative': False,
      'description': 'De nieuwste releases elke vrijdag op Spotify! Cover: SERA, YouNotUs',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DXb5BKLTO7ULa',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f000000038cd883983a21f8d91b6324c0',
          'width': None,
        }),
      ]),
      'name': 'New Music Friday NL',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DXb5BKLTO7ULa',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DXb5BKLTO7ULa',
    }),
    dict({
      'collaborative': False,
      'description': 'Motion, fissa & good vibes! Cover: J Balvin',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWXHyhanaNMoy',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003d469349e5325224b9f84c79c',
          'width': None,
        }),
      ]),
      'name': 'La Vida Loca',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWXHyhanaNMoy',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWXHyhanaNMoy',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DWWMOmoXKqHTD',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003ffa215be1a4c64e3cbf59d1e',
          'width': None,
        }),
      ]),
      'name': 'Songs to Sing in the Car',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DWWMOmoXKqHTD',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DWWMOmoXKqHTD',
    }),
    dict({
      'collaborative': False,
      'description': 'Peaceful piano to help you slow down, breathe, and relax. ',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/37i9dQZF1DX4sWSpwq3LiO',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67706f00000003d073e656e546e43bc387ad79',
          'width': None,
        }),
      ]),
      'name': 'Peaceful Piano',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '37i9dQZF1DX4sWSpwq3LiO',
      'public': None,
      'uri': 'spotify:playlist:37i9dQZF1DX4sWSpwq3LiO',
    }),
  ])
# ---
# name: test_get_following_artists
  list([
    dict({
      'artist_id': '0lLY20XpZ9yDobkbHI7u1y',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb0fb1220e7e3ace47ebad023e',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051740fb1220e7e3ace47ebad023e',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1780fb1220e7e3ace47ebad023e',
          'width': 160,
        }),
      ]),
      'name': 'Pegboard Nerds',
      'uri': 'spotify:artist:0lLY20XpZ9yDobkbHI7u1y',
    }),
    dict({
      'artist_id': '0p4nmQO2msCgU4IF37Wi3j',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb5c3349ddba6b8e064c1bab16',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051745c3349ddba6b8e064c1bab16',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1785c3349ddba6b8e064c1bab16',
          'width': 160,
        }),
      ]),
      'name': 'Avril Lavigne',
      'uri': 'spotify:artist:0p4nmQO2msCgU4IF37Wi3j',
    }),
    dict({
      'artist_id': '0rEuaTPLMhlViNCJrg3NEH',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb7b60ba4ab40815357c713dc2',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051747b60ba4ab40815357c713dc2',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1787b60ba4ab40815357c713dc2',
          'width': 160,
        }),
      ]),
      'name': 'Beast In Black',
      'uri': 'spotify:artist:0rEuaTPLMhlViNCJrg3NEH',
    }),
    dict({
      'artist_id': '0uBVyPbLZRDNEBiA4fZUlp',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebf6cb4b106fe956c95d243a1f',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174f6cb4b106fe956c95d243a1f',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178f6cb4b106fe956c95d243a1f',
          'width': 160,
        }),
      ]),
      'name': 'Froukje',
      'uri': 'spotify:artist:0uBVyPbLZRDNEBiA4fZUlp',
    }),
    dict({
      'artist_id': '10GT4yz8c6xjjnPGtGPI1l',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebb0debcb6b7015f1a7a1bfaa0',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174b0debcb6b7015f1a7a1bfaa0',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178b0debcb6b7015f1a7a1bfaa0',
          'width': 160,
        }),
      ]),
      'name': 'Franc Moody',
      'uri': 'spotify:artist:10GT4yz8c6xjjnPGtGPI1l',
    }),
    dict({
      'artist_id': '17IDrizGUiveZm4P77Kkio',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb712d292bff8648aa62c2dad4',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174712d292bff8648aa62c2dad4',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178712d292bff8648aa62c2dad4',
          'width': 160,
        }),
      ]),
      'name': 'Icarus',
      'uri': 'spotify:artist:17IDrizGUiveZm4P77Kkio',
    }),
    dict({
      'artist_id': '1A6zWJwn4XmdZZgob3wYPM',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb5022973615b58f2756ab3ff3',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051745022973615b58f2756ab3ff3',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1785022973615b58f2756ab3ff3',
          'width': 160,
        }),
      ]),
      'name': 'Blaudzun',
      'uri': 'spotify:artist:1A6zWJwn4XmdZZgob3wYPM',
    }),
    dict({
      'artist_id': '1BAdSa5cdtCNLbvT7gWmtJ',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebbfa0f25d3d775e4892e0add3',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174bfa0f25d3d775e4892e0add3',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178bfa0f25d3d775e4892e0add3',
          'width': 160,
        }),
      ]),
      'name': 'Conro',
      'uri': 'spotify:artist:1BAdSa5cdtCNLbvT7gWmtJ',
    }),
    dict({
      'artist_id': '1Cs0zKBU1kc0i8ypK3B9ai',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebf150017ca69c8793503c2d4f',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174f150017ca69c8793503c2d4f',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178f150017ca69c8793503c2d4f',
          'width': 160,
        }),
      ]),
      'name': 'David Guetta',
      'uri': 'spotify:artist:1Cs0zKBU1kc0i8ypK3B9ai',
    }),
    dict({
      'artist_id': '1DbXVMdQqNejIYLU2xsIMi',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb9b0c0d5e5e4f43a21b19f7e8',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051749b0c0d5e5e4f43a21b19f7e8',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1789b0c0d5e5e4f43a21b19f7e8',
          'width': 160,
        }),
      ]),
      'name': 'Ryan Ritual',
      'uri': 'spotify:artist:1DbXVMdQqNejIYLU2xsIMi',
    }),
    dict({
      'artist_id': '1GLtl8uqKmnyCWxHmw9tL4',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebd263e0042b36fd357c8c7cdb',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174d263e0042b36fd357c8c7cdb',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178d263e0042b36fd357c8c7cdb',
          'width': 160,
        }),
      ]),
      'name': 'The Kooks',
      'uri': 'spotify:artist:1GLtl8uqKmnyCWxHmw9tL4',
    }),
    dict({
      'artist_id': '1LOB7jTeEV14pHai6EXSzF',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebc6b0d99b1a736712a1653d6a',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174c6b0d99b1a736712a1653d6a',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178c6b0d99b1a736712a1653d6a',
          'width': 160,
        }),
      ]),
      'name': 'Cash Cash',
      'uri': 'spotify:artist:1LOB7jTeEV14pHai6EXSzF',
    }),
    dict({
      'artist_id': '1QOHbhVRpDoNtRkz79si6b',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb403bad456309541432feb79b',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174403bad456309541432feb79b',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178403bad456309541432feb79b',
          'width': 160,
        }),
      ]),
      'name': 'Karen Harding',
      'uri': 'spotify:artist:1QOHbhVRpDoNtRkz79si6b',
    }),
    dict({
      'artist_id': '1eK59pkylGGka9wRUEKVXt',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb7b6e73b581c807a49a146eb6',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051747b6e73b581c807a49a146eb6',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1787b6e73b581c807a49a146eb6',
          'width': 160,
        }),
      ]),
      'name': 'Chris Brochu',
      'uri': 'spotify:artist:1eK59pkylGGka9wRUEKVXt',
    }),
    dict({
      'artist_id': '1ho3p0XM4jDk7n9NUOekbp',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2736d5999b6e7e2dd2fd19f88f8',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e026d5999b6e7e2dd2fd19f88f8',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048516d5999b6e7e2dd2fd19f88f8',
          'width': 64,
        }),
      ]),
      'name': 'Inthelittlewood',
      'uri': 'spotify:artist:1ho3p0XM4jDk7n9NUOekbp',
    }),
    dict({
      'artist_id': '1kDGbuxWknIKx4FlgWxiSp',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb065faf07b0343e97bf3fba57',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174065faf07b0343e97bf3fba57',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178065faf07b0343e97bf3fba57',
          'width': 160,
        }),
      ]),
      'name': 'Nothing But Thieves',
      'uri': 'spotify:artist:1kDGbuxWknIKx4FlgWxiSp',
    }),
    dict({
      'artist_id': '1vCWHaC5f2uS3yhpwWbIA6',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebae07171f989fb39736674113',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174ae07171f989fb39736674113',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178ae07171f989fb39736674113',
          'width': 160,
        }),
      ]),
      'name': 'Avicii',
      'uri': 'spotify:artist:1vCWHaC5f2uS3yhpwWbIA6',
    }),
    dict({
      'artist_id': '1yqxFtPHKcGcv6SXZNdyT9',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebffa0888ff64a510cbf665855',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174ffa0888ff64a510cbf665855',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178ffa0888ff64a510cbf665855',
          'width': 160,
        }),
      ]),
      'name': 'MK',
      'uri': 'spotify:artist:1yqxFtPHKcGcv6SXZNdyT9',
    }),
    dict({
      'artist_id': '23fqKkggKUBHNkbKtXEls4',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebe5ea1aa1404629c12ad86658',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174e5ea1aa1404629c12ad86658',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178e5ea1aa1404629c12ad86658',
          'width': 160,
        }),
      ]),
      'name': 'Kygo',
      'uri': 'spotify:artist:23fqKkggKUBHNkbKtXEls4',
    }),
    dict({
      'artist_id': '2NZMqINcyfepvLxQJdzcZk',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb96b6d4d0d0f43bd50216f22e',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab6761610000517496b6d4d0d0f43bd50216f22e',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f17896b6d4d0d0f43bd50216f22e',
          'width': 160,
        }),
      ]),
      'name': 'Lensko',
      'uri': 'spotify:artist:2NZMqINcyfepvLxQJdzcZk',
    }),
  ])
# ---
# name: test_get_new_releases
  list([
    dict({
      'album_id': '5SGtrmYbIo0Dsg4kJ4qjM6',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '4gzpq5DPGxSnKTe4SA8HAU',
          'name': 'Coldplay',
          'uri': 'spotify:artist:4gzpq5DPGxSnKTe4SA8HAU',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e0209ba52a5116e0c3e8461f58b',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d0000485109ba52a5116e0c3e8461f58b',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b27309ba52a5116e0c3e8461f58b',
          'width': 640,
        }),
      ]),
      'name': 'Moon Music',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 10,
      'uri': 'spotify:album:5SGtrmYbIo0Dsg4kJ4qjM6',
    }),
    dict({
      'album_id': '713lZ7AF55fEFSQgcttj9y',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '4U9nsRTH2mr9L4UXEWqG5e',
          'name': 'Bente',
          'uri': 'spotify:artist:4U9nsRTH2mr9L4UXEWqG5e',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02ab9953b1d18f8233f6b26027',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851ab9953b1d18f8233f6b26027',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273ab9953b1d18f8233f6b26027',
          'width': 640,
        }),
      ]),
      'name': 'drift',
      'release_date': '2024-10-03',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 14,
      'uri': 'spotify:album:713lZ7AF55fEFSQgcttj9y',
    }),
    dict({
      'album_id': '49kVZFZguyqvfxt0HklIhg',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '7J41Q5hdwuBgyVo7zGhPhO',
          'name': 'MEROL',
          'uri': 'spotify:artist:7J41Q5hdwuBgyVo7zGhPhO',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02ef565801d3a62e7da27d8d0a',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851ef565801d3a62e7da27d8d0a',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273ef565801d3a62e7da27d8d0a',
          'width': 640,
        }),
      ]),
      'name': 'Naar De Haaien & Weer Terug',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 15,
      'uri': 'spotify:album:49kVZFZguyqvfxt0HklIhg',
    }),
    dict({
      'album_id': '5M84TQMlBTgqPZej6KCvVd',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '30mNTnmvPn3HwXA5dW1Iza',
          'name': 'Racoon',
          'uri': 'spotify:artist:30mNTnmvPn3HwXA5dW1Iza',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02527a4f51021439a52c266259',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851527a4f51021439a52c266259',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273527a4f51021439a52c266259',
          'width': 640,
        }),
      ]),
      'name': 'It Is What It Is',
      'release_date': '2024-10-03',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 12,
      'uri': 'spotify:album:5M84TQMlBTgqPZej6KCvVd',
    }),
    dict({
      'album_id': '6mHNMtHrXIdUWWuZD9njsG',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '3qnGvpP8Yth1AqSBMqON5x',
          'name': 'Leon Bridges',
          'uri': 'spotify:artist:3qnGvpP8Yth1AqSBMqON5x',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02b7ac31cd8650b673ed24ea71',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851b7ac31cd8650b673ed24ea71',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273b7ac31cd8650b673ed24ea71',
          'width': 640,
        }),
      ]),
      'name': 'Leon',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 13,
      'uri': 'spotify:album:6mHNMtHrXIdUWWuZD9njsG',
    }),
    dict({
      'album_id': '1wOiuWSlK5pQdpQP8VgH6F',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '6styCzc1Ej4NxISL0LiigM',
          'name': 'The Smile',
          'uri': 'spotify:artist:6styCzc1Ej4NxISL0LiigM',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e026613d3127feee7ee948412f9',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048516613d3127feee7ee948412f9',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2736613d3127feee7ee948412f9',
          'width': 640,
        }),
      ]),
      'name': 'Cutouts',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 10,
      'uri': 'spotify:album:1wOiuWSlK5pQdpQP8VgH6F',
    }),
    dict({
      'album_id': '1Dds4p0qcMEnSE7jlMEt8n',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '4EzkuveR9pLvDVFNx6foYD',
          'name': 'James Bay',
          'uri': 'spotify:artist:4EzkuveR9pLvDVFNx6foYD',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e029ee701eef621f69f3c2967ed',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048519ee701eef621f69f3c2967ed',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2739ee701eef621f69f3c2967ed',
          'width': 640,
        }),
      ]),
      'name': 'Changes All The Time',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 11,
      'uri': 'spotify:album:1Dds4p0qcMEnSE7jlMEt8n',
    }),
    dict({
      'album_id': '7LJBpaTfUgMflZOz3JmMBv',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '2qXV33vUIb0D4YygTg7FCT',
          'name': 'Genna',
          'uri': 'spotify:artist:2qXV33vUIb0D4YygTg7FCT',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02b5d14d3f2fd36368daaf2da5',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851b5d14d3f2fd36368daaf2da5',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273b5d14d3f2fd36368daaf2da5',
          'width': 640,
        }),
      ]),
      'name': '7 Stappen',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 7,
      'uri': 'spotify:album:7LJBpaTfUgMflZOz3JmMBv',
    }),
    dict({
      'album_id': '4Kws98pwkccx24c0zLewXG',
      'album_type': <AlbumType.SINGLE: 'single'>,
      'artists': list([
        dict({
          'artist_id': '7nfwBKWMnPY7FJZQwh1wq8',
          'name': 'Stenfert',
          'uri': 'spotify:artist:7nfwBKWMnPY7FJZQwh1wq8',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02ddb058c1f361f94e8a89945d',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851ddb058c1f361f94e8a89945d',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273ddb058c1f361f94e8a89945d',
          'width': 640,
        }),
      ]),
      'name': 'Zeezout',
      'release_date': '2024-10-03',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 6,
      'uri': 'spotify:album:4Kws98pwkccx24c0zLewXG',
    }),
    dict({
      'album_id': '6ixQBPjQSxlp1ITpzyzTHj',
      'album_type': <AlbumType.EP: 'ep'>,
      'artists': list([
        dict({
          'artist_id': '5mwcMzXAn2fReGFjXeGGsJ',
          'name': 'Plume',
          'uri': 'spotify:artist:5mwcMzXAn2fReGFjXeGGsJ',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02b612c27f3630e523d3ae5222',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851b612c27f3630e523d3ae5222',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273b612c27f3630e523d3ae5222',
          'width': 640,
        }),
      ]),
      'name': 'The Rules',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 6,
      'uri': 'spotify:album:6ixQBPjQSxlp1ITpzyzTHj',
    }),
    dict({
      'album_id': '7swV2ssDdlKc89h1DxUNh7',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '37M5pPGs6V1fchFJSgCguX',
          'name': 'FINNEAS',
          'uri': 'spotify:artist:37M5pPGs6V1fchFJSgCguX',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e024db4ce3fe9ed73fb7bc79b4a',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048514db4ce3fe9ed73fb7bc79b4a',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2734db4ce3fe9ed73fb7bc79b4a',
          'width': 640,
        }),
      ]),
      'name': "For Cryin' Out Loud!",
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 10,
      'uri': 'spotify:album:7swV2ssDdlKc89h1DxUNh7',
    }),
    dict({
      'album_id': '4c7fP0tUymaZcrEFIeIeZc',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '4aEnNH9PuU1HF3TsZTru54',
          'name': 'Caribou',
          'uri': 'spotify:artist:4aEnNH9PuU1HF3TsZTru54',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02959bd39a899174acc5788b32',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851959bd39a899174acc5788b32',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273959bd39a899174acc5788b32',
          'width': 640,
        }),
      ]),
      'name': 'Honey',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 12,
      'uri': 'spotify:album:4c7fP0tUymaZcrEFIeIeZc',
    }),
    dict({
      'album_id': '5gpwMpxd66j2WAmGcyiWXQ',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '4IS4EyXNmiI2w5SRCjMtEF',
          'name': 'Kendji Girac',
          'uri': 'spotify:artist:4IS4EyXNmiI2w5SRCjMtEF',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e024f89a971bf651f14622c96e6',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048514f89a971bf651f14622c96e6',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2734f89a971bf651f14622c96e6',
          'width': 640,
        }),
      ]),
      'name': 'Vivre...',
      'release_date': '2024-10-03',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 11,
      'uri': 'spotify:album:5gpwMpxd66j2WAmGcyiWXQ',
    }),
    dict({
      'album_id': '6yvKcQNyd09wYCCp8O8mNB',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0oK5D6uPhGu4Jk2dbZfodU',
          'name': 'Thee Sacred Souls',
          'uri': 'spotify:artist:0oK5D6uPhGu4Jk2dbZfodU',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02b97ef79f12cc9a0d35975650',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851b97ef79f12cc9a0d35975650',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273b97ef79f12cc9a0d35975650',
          'width': 640,
        }),
      ]),
      'name': 'Got a Story to Tell',
      'release_date': '2024-10-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 12,
      'uri': 'spotify:album:6yvKcQNyd09wYCCp8O8mNB',
    }),
    dict({
      'album_id': '6eKdAMXNBlXNtPy7OdBL50',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '1HY2Jd0NmPuamShAr6KMms',
          'name': 'Lady Gaga',
          'uri': 'spotify:artist:1HY2Jd0NmPuamShAr6KMms',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e028c6bfaa9549f8438bcafb668',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048518c6bfaa9549f8438bcafb668',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2738c6bfaa9549f8438bcafb668',
          'width': 640,
        }),
      ]),
      'name': 'Harlequin',
      'release_date': '2024-09-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 13,
      'uri': 'spotify:album:6eKdAMXNBlXNtPy7OdBL50',
    }),
    dict({
      'album_id': '2UZ05NpzJ76d06VBQrKWtv',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '6OQggpm01CmAB717TKtDCr',
          'name': 'Dopebwoy',
          'uri': 'spotify:artist:6OQggpm01CmAB717TKtDCr',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e025c1f6dec99d4f4982963296f',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048515c1f6dec99d4f4982963296f',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2735c1f6dec99d4f4982963296f',
          'width': 640,
        }),
      ]),
      'name': 'Koude Kermis',
      'release_date': '2024-09-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 15,
      'uri': 'spotify:album:2UZ05NpzJ76d06VBQrKWtv',
    }),
    dict({
      'album_id': '2Yfh7AQ5WbJFv6RwIAbJck',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '6OG9fZ1LKXyL0hShRmmnq1',
          'name': 'Davina Michelle',
          'uri': 'spotify:artist:6OG9fZ1LKXyL0hShRmmnq1',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02aab04c8651437b6d474d9356',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851aab04c8651437b6d474d9356',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273aab04c8651437b6d474d9356',
          'width': 640,
        }),
      ]),
      'name': 'Higher',
      'release_date': '2024-09-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 13,
      'uri': 'spotify:album:2Yfh7AQ5WbJFv6RwIAbJck',
    }),
    dict({
      'album_id': '0wMC6I2G3sKvhcsjn8N1Kd',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '5m1cLmgZIfEYPLejhLFR10',
          'name': 'Fresku',
          'uri': 'spotify:artist:5m1cLmgZIfEYPLejhLFR10',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02bb80524c82fb9a2605494293',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851bb80524c82fb9a2605494293',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273bb80524c82fb9a2605494293',
          'width': 640,
        }),
      ]),
      'name': 'Leren Leven',
      'release_date': '2024-09-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 30,
      'uri': 'spotify:album:0wMC6I2G3sKvhcsjn8N1Kd',
    }),
    dict({
      'album_id': '2ICkFYDtOYuiOC41VAy7qi',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '1hqxH66i1ZwEBAkzORVRPW',
          'name': 'Berre',
          'uri': 'spotify:artist:1hqxH66i1ZwEBAkzORVRPW',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e02c89f084086fef78ac2136f5d',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d00004851c89f084086fef78ac2136f5d',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b273c89f084086fef78ac2136f5d',
          'width': 640,
        }),
      ]),
      'name': "I'll Call You When I'm Home",
      'release_date': '2024-09-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 12,
      'uri': 'spotify:album:2ICkFYDtOYuiOC41VAy7qi',
    }),
    dict({
      'album_id': '1cVpXZnVWHTDUuY8kW6x8M',
      'album_type': <AlbumType.ALBUM: 'album'>,
      'artists': list([
        dict({
          'artist_id': '0fTSzq9jAh4c36UVb4V7CB',
          'name': 'Alex Warren',
          'uri': 'spotify:artist:0fTSzq9jAh4c36UVb4V7CB',
        }),
      ]),
      'images': list([
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67616d00001e026a794c49d6df89ec45d5b925',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab67616d000048516a794c49d6df89ec45d5b925',
          'width': 64,
        }),
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab67616d0000b2736a794c49d6df89ec45d5b925',
          'width': 640,
        }),
      ]),
      'name': "You'll Be Alright, Kid (Chapter 1)",
      'release_date': '2024-09-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'total_tracks': 10,
      'uri': 'spotify:album:1cVpXZnVWHTDUuY8kW6x8M',
    }),
  ])
# ---
# name: test_get_playback_state[playback_1.json]
  dict({
    'context': dict({
      'context_type': <ContextType.COLLECTION: 'collection'>,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/collection/tracks',
      }),
      'href': 'https://api.spotify.com/v1/me/tracks',
      'uri': 'spotify:user:1112264649:collection',
    }),
    'currently_playing_type': 'track',
    'device': dict({
      'device_id': '21dac6b0e0a1f181870fdc9749b2656466557687',
      'device_type': <DeviceType.COMPUTER: 'Computer'>,
      'is_active': True,
      'is_private_session': False,
      'is_restricted': False,
      'name': 'DESKTOP-BKC5SIK',
      'supports_volume': True,
      'volume_percent': 69,
    }),
    'is_playing': True,
    'item': dict({
      'album': dict({
        'album_id': '1iasbpTobDPa5BmsK0Rz1f',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '6cmp7ut7okJAgJOSaMAVf3',
            'name': 'Machinae Supremacy',
            'uri': 'spotify:artist:6cmp7ut7okJAgJOSaMAVf3',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273326db007f167499d23171722',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02326db007f167499d23171722',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851326db007f167499d23171722',
            'width': 64,
          }),
        ]),
        'name': 'WARRIORS, Pt. 1 (Final Stage)',
        'release_date': '2023-10-20',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:1iasbpTobDPa5BmsK0Rz1f',
      }),
      'artists': list([
        dict({
          'artist_id': '6cmp7ut7okJAgJOSaMAVf3',
          'name': 'Machinae Supremacy',
          'uri': 'spotify:artist:6cmp7ut7okJAgJOSaMAVf3',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 268525,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/1FyXbzOlq3dkxaB6iRsETv',
      }),
      'href': 'https://api.spotify.com/v1/tracks/1FyXbzOlq3dkxaB6iRsETv',
      'is_local': False,
      'name': 'WARRIORS, Pt. 1 (Final Stage)',
      'track_id': '1FyXbzOlq3dkxaB6iRsETv',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:1FyXbzOlq3dkxaB6iRsETv',
    }),
    'progress_ms': 225564,
    'repeat_mode': <RepeatMode.OFF: 'off'>,
    'shuffle': False,
  })
# ---
# name: test_get_playback_state[playback_2.json]
  dict({
    'context': dict({
      'context_type': <ContextType.PLAYLIST: 'playlist'>,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2r35vbe6hHl6yDSMfjKgmm',
      }),
      'href': 'https://api.spotify.com/v1/playlists/2r35vbe6hHl6yDSMfjKgmm',
      'uri': 'spotify:user:rushofficial:playlist:2r35vbe6hHl6yDSMfjKgmm',
    }),
    'currently_playing_type': 'track',
    'device': dict({
      'device_id': 'a19f7a03a25aff3e43f457a328a8ba67a8c44789',
      'device_type': <DeviceType.SPEAKER: 'Speaker'>,
      'is_active': True,
      'is_private_session': False,
      'is_restricted': False,
      'name': 'Master Bathroom Speaker',
      'supports_volume': True,
      'volume_percent': 25,
    }),
    'is_playing': True,
    'item': dict({
      'album': dict({
        'album_id': '3nUNxSh2szhmN7iifAKv5i',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '2Hkut4rAAyrQxRdof7FVJq',
            'name': 'Rush',
            'uri': 'spotify:artist:2Hkut4rAAyrQxRdof7FVJq',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27306c0d7ebcabad0c39b566983',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0206c0d7ebcabad0c39b566983',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485106c0d7ebcabad0c39b566983',
            'width': 64,
          }),
        ]),
        'name': 'Permanent Waves',
        'release_date': '1980-01-01',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 6,
        'uri': 'spotify:album:3nUNxSh2szhmN7iifAKv5i',
      }),
      'artists': list([
        dict({
          'artist_id': '2Hkut4rAAyrQxRdof7FVJq',
          'name': 'Rush',
          'uri': 'spotify:artist:2Hkut4rAAyrQxRdof7FVJq',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 296466,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/4e9hUiLsN4mx61ARosFi7p',
      }),
      'href': 'https://api.spotify.com/v1/tracks/4e9hUiLsN4mx61ARosFi7p',
      'is_local': False,
      'name': 'The Spirit Of Radio',
      'track_id': '4e9hUiLsN4mx61ARosFi7p',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:4e9hUiLsN4mx61ARosFi7p',
    }),
    'progress_ms': 249367,
    'repeat_mode': <RepeatMode.OFF: 'off'>,
    'shuffle': False,
  })
# ---
# name: test_get_playback_state[playback_3.json]
  dict({
    'context': dict({
      'context_type': <ContextType.COLLECTION: 'collection'>,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/collection/tracks',
      }),
      'href': 'https://api.spotify.com/v1/me/tracks',
      'uri': 'spotify:user:1112264649:collection',
    }),
    'currently_playing_type': 'track',
    'device': dict({
      'device_id': None,
      'device_type': <DeviceType.SPEAKER: 'Speaker'>,
      'is_active': True,
      'is_private_session': False,
      'is_restricted': True,
      'name': 'Sonos Roam SL',
      'supports_volume': True,
      'volume_percent': 34,
    }),
    'is_playing': True,
    'item': dict({
      'album': dict({
        'album_id': '3qCsGHHWG6t9izvmsE47jr',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '6s5ubAp65wXoTZefE01RNR',
            'name': 'Joost',
            'uri': 'spotify:artist:6s5ubAp65wXoTZefE01RNR',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273ae0956d669aca836c4fb5a0c',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02ae0956d669aca836c4fb5a0c',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851ae0956d669aca836c4fb5a0c',
            'width': 64,
          }),
        ]),
        'name': 'Ome Robert',
        'release_date': '2018-04-26',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:3qCsGHHWG6t9izvmsE47jr',
      }),
      'artists': list([
        dict({
          'artist_id': '6s5ubAp65wXoTZefE01RNR',
          'name': 'Joost',
          'uri': 'spotify:artist:6s5ubAp65wXoTZefE01RNR',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 152500,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/3TE49HXyoNczZk2IBhP87z',
      }),
      'href': 'https://api.spotify.com/v1/tracks/3TE49HXyoNczZk2IBhP87z',
      'is_local': False,
      'name': 'Ome Robert',
      'track_id': '3TE49HXyoNczZk2IBhP87z',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:3TE49HXyoNczZk2IBhP87z',
    }),
    'progress_ms': 7919,
    'repeat_mode': <RepeatMode.OFF: 'off'>,
    'shuffle': False,
  })
# ---
# name: test_get_playback_state[playback_4.json]
  dict({
    'context': None,
    'currently_playing_type': 'track',
    'device': dict({
      'device_id': 'aee274e4bbe6b44cf3b22ad3b68eca3a6954a701',
      'device_type': <DeviceType.COMPUTER: 'Computer'>,
      'is_active': True,
      'is_private_session': False,
      'is_restricted': False,
      'name': 'Joost’s MacBook Pro',
      'supports_volume': True,
      'volume_percent': 67,
    }),
    'is_playing': True,
    'item': None,
    'progress_ms': 22215,
    'repeat_mode': <RepeatMode.OFF: 'off'>,
    'shuffle': False,
  })
# ---
# name: test_get_playback_state[playback_audiobook_1.json]
  dict({
    'context': dict({
      'context_type': <ContextType.SHOW: 'show'>,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/show/58cFIY8IT7yGqR3kHnKqzV',
      }),
      'href': 'https://api.spotify.com/v1/shows/58cFIY8IT7yGqR3kHnKqzV',
      'uri': 'spotify:show:58cFIY8IT7yGqR3kHnKqzV',
    }),
    'currently_playing_type': 'episode',
    'device': dict({
      'device_id': '9e3c475ee7d51dbebb4547dbc5b57e35ee6707f8',
      'device_type': <DeviceType.SMARTPHONE: 'Smartphone'>,
      'is_active': True,
      'is_private_session': False,
      'is_restricted': False,
      'name': 'Nothing phone (1)',
      'supports_volume': False,
      'volume_percent': 100,
    }),
    'is_playing': True,
    'item': dict({
      'description': '',
      'duration_ms': 249652,
      'episode_id': '3NW4BmIOG0qzQZgtLgsydR',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/3NW4BmIOG0qzQZgtLgsydR',
      }),
      'href': 'https://api.spotify.com/v1/episodes/3NW4BmIOG0qzQZgtLgsydR',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'name': 'Track 1',
      'release_date': '0000',
      'release_date_precision': <ReleaseDatePrecision.YEAR: 'year'>,
      'show': dict({
        'description': '''
          Author(s): Anya Niewierra
          Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink
          <p>Na het succes van de bestsellers <i>Het bloemenmeisje</i> en <i>De Camino</i> komt Anya Niewierra met <i>De nomade</i>. Een aangrijpende thriller over vaderliefde en een verborgen verleden.</p>
          <p>De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.</p>
          <p>Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.</p>
          <p>Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.</p>
          <br>
          <p>‘Anya Niewierra heeft met <i>De nomade</i> weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan <i>De Camino</i>.’<br>
          Heleen Spanjaard, <i>Margriet</i></p>
          <p>‘Verrassend, meeslepend en bloedstollend. <i>De nomade</i> is een waardige opvolger van <i>De Camino</i>.’<br>
          Rob Cobben, cultuurverslaggever <i>Dagblad De Limburger</i></p>
        ''',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/58cFIY8IT7yGqR3kHnKqzV',
        }),
        'href': 'https://api.spotify.com/v1/shows/58cFIY8IT7yGqR3kHnKqzV',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'name': 'De nomade',
        'publisher': 'Anya Niewierra',
        'show_id': '58cFIY8IT7yGqR3kHnKqzV',
        'total_episodes': None,
        'uri': 'spotify:show:58cFIY8IT7yGqR3kHnKqzV',
      }),
      'type': <ItemType.EPISODE: 'episode'>,
      'uri': 'spotify:episode:3NW4BmIOG0qzQZgtLgsydR',
    }),
    'progress_ms': 15611,
    'repeat_mode': <RepeatMode.OFF: 'off'>,
    'shuffle': False,
  })
# ---
# name: test_get_playback_state[playback_episode_1.json]
  dict({
    'context': dict({
      'context_type': <ContextType.SHOW: 'show'>,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/show/1Y9ExMgMxoBVrgrfU7u0nD',
      }),
      'href': 'https://api.spotify.com/v1/shows/1Y9ExMgMxoBVrgrfU7u0nD',
      'uri': 'spotify:show:1Y9ExMgMxoBVrgrfU7u0nD',
    }),
    'currently_playing_type': 'episode',
    'device': dict({
      'device_id': None,
      'device_type': <DeviceType.SPEAKER: 'Speaker'>,
      'is_active': True,
      'is_private_session': False,
      'is_restricted': True,
      'name': 'Sonos Roam SL',
      'supports_volume': True,
      'volume_percent': 46,
    }),
    'is_playing': True,
    'item': dict({
      'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 3690161,
      'episode_id': '3o0RYoo5iOMKSmEbunsbvW',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/3o0RYoo5iOMKSmEbunsbvW',
      }),
      'href': 'https://api.spotify.com/v1/episodes/3o0RYoo5iOMKSmEbunsbvW',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
          'width': 64,
        }),
      ]),
      'name': 'My Squirrel Has Brain Damage - Safety Third 119',
      'release_date': '2024-07-26',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'show': dict({
        'description': 'Safety Third is a weekly show hosted by William Osman, NileRed, The Backyard Scientist, Allen Pan, and a couple other YouTube "Scientists". Sometimes we have guests, sometimes it\'s just us, but always: safety is our number three priority.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/1Y9ExMgMxoBVrgrfU7u0nD',
        }),
        'href': 'https://api.spotify.com/v1/shows/1Y9ExMgMxoBVrgrfU7u0nD',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Safety Third',
        'publisher': 'Safety Third ',
        'show_id': '1Y9ExMgMxoBVrgrfU7u0nD',
        'total_episodes': 120,
        'uri': 'spotify:show:1Y9ExMgMxoBVrgrfU7u0nD',
      }),
      'type': <ItemType.EPISODE: 'episode'>,
      'uri': 'spotify:episode:3o0RYoo5iOMKSmEbunsbvW',
    }),
    'progress_ms': 5410,
    'repeat_mode': <RepeatMode.OFF: 'off'>,
    'shuffle': False,
  })
# ---
# name: test_get_playlist[playlist_1.json]
  dict({
    'collaborative': False,
    'description': 'A playlist for testing pourposes',
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/playlist/3cEYpjA9oz9GiPac4AsH4n',
    }),
    'images': list([
      dict({
        'height': None,
        'url': 'https://i.scdn.co/image/ab67706c0000da848d0ce13d55f634e290f744ba',
        'width': None,
      }),
    ]),
    'name': 'Spotify Web API Testing playlist',
    'object_type': 'playlist',
    'owner': dict({
      'display_name': 'JMPerez²',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/user/jmperezperez',
      }),
      'href': 'https://api.spotify.com/v1/users/jmperezperez',
      'object_type': 'user',
      'owner_id': 'jmperezperez',
      'uri': 'spotify:user:jmperezperez',
    }),
    'playlist_id': '3cEYpjA9oz9GiPac4AsH4n',
    'public': True,
    'tracks': dict({
      'items': list([
        dict({
          'added_at': datetime.datetime(2015, 1, 15, 12, 39, 22, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/jmperezperez',
            }),
            'href': 'https://api.spotify.com/v1/users/jmperezperez',
            'uri': 'spotify:user:jmperezperez',
            'user_id': 'jmperezperez',
          }),
          'track': dict({
            'album': dict({
              'album_id': '2pANdqPvxInB0YvcDiw4ko',
              'album_type': <AlbumType.COMPILATION: 'compilation'>,
              'artists': list([
                dict({
                  'artist_id': '0LyfQWJT6nXafLPZqxe9Of',
                  'name': 'Various Artists',
                  'uri': 'spotify:artist:0LyfQWJT6nXafLPZqxe9Of',
                }),
              ]),
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab67616d0000b273ce6d0eef0c1ce77e5f95bbbc',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67616d00001e02ce6d0eef0c1ce77e5f95bbbc',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab67616d00004851ce6d0eef0c1ce77e5f95bbbc',
                  'width': 64,
                }),
              ]),
              'name': 'Progressive Psy Trance Picks Vol.8',
              'release_date': '2012-04-02',
              'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
              'total_tracks': 20,
              'uri': 'spotify:album:2pANdqPvxInB0YvcDiw4ko',
            }),
            'artists': list([
              dict({
                'artist_id': '6eSdhw46riw2OUHgMwR8B5',
                'name': 'Odiseo',
                'uri': 'spotify:artist:6eSdhw46riw2OUHgMwR8B5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 376000,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4rzfv0JLZfVhOhbSQ8o5jZ',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4rzfv0JLZfVhOhbSQ8o5jZ',
            'is_local': False,
            'name': 'Api',
            'track_id': '4rzfv0JLZfVhOhbSQ8o5jZ',
            'track_number': 10,
            'type': <ItemType.TRACK: 'track'>,
            'uri': 'spotify:track:4rzfv0JLZfVhOhbSQ8o5jZ',
          }),
        }),
        dict({
          'added_at': datetime.datetime(2015, 1, 15, 12, 40, 3, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/jmperezperez',
            }),
            'href': 'https://api.spotify.com/v1/users/jmperezperez',
            'uri': 'spotify:user:jmperezperez',
            'user_id': 'jmperezperez',
          }),
          'track': dict({
            'album': dict({
              'album_id': '6nlfkk5GoXRL1nktlATNsy',
              'album_type': <AlbumType.COMPILATION: 'compilation'>,
              'artists': list([
                dict({
                  'artist_id': '0LyfQWJT6nXafLPZqxe9Of',
                  'name': 'Various Artists',
                  'uri': 'spotify:artist:0LyfQWJT6nXafLPZqxe9Of',
                }),
              ]),
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab67616d0000b273aa2ff29970d9a63a49dfaeb2',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67616d00001e02aa2ff29970d9a63a49dfaeb2',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab67616d00004851aa2ff29970d9a63a49dfaeb2',
                  'width': 64,
                }),
              ]),
              'name': 'Wellness & Dreaming Source',
              'release_date': '2015-01-09',
              'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
              'total_tracks': 25,
              'uri': 'spotify:album:6nlfkk5GoXRL1nktlATNsy',
            }),
            'artists': list([
              dict({
                'artist_id': '5VQE4WOzPu9h3HnGLuBoA6',
                'name': 'Vlasta Marek',
                'uri': 'spotify:artist:5VQE4WOzPu9h3HnGLuBoA6',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 730066,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5o3jMYOSbaVz3tkgwhELSV',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5o3jMYOSbaVz3tkgwhELSV',
            'is_local': False,
            'name': 'Is',
            'track_id': '5o3jMYOSbaVz3tkgwhELSV',
            'track_number': 21,
            'type': <ItemType.TRACK: 'track'>,
            'uri': 'spotify:track:5o3jMYOSbaVz3tkgwhELSV',
          }),
        }),
        dict({
          'added_at': datetime.datetime(2015, 1, 15, 12, 22, 30, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/jmperezperez',
            }),
            'href': 'https://api.spotify.com/v1/users/jmperezperez',
            'uri': 'spotify:user:jmperezperez',
            'user_id': 'jmperezperez',
          }),
          'track': dict({
            'album': dict({
              'album_id': '4hnqM0JK4CM1phwfq1Ldyz',
              'album_type': <AlbumType.ALBUM: 'album'>,
              'artists': list([
                dict({
                  'artist_id': '066X20Nz7iquqkkCW6Jxy6',
                  'name': 'LCD Soundsystem',
                  'uri': 'spotify:artist:066X20Nz7iquqkkCW6Jxy6',
                }),
              ]),
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab67616d0000b273ee0d0dce888c6c8a70db6e8b',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67616d00001e02ee0d0dce888c6c8a70db6e8b',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab67616d00004851ee0d0dce888c6c8a70db6e8b',
                  'width': 64,
                }),
              ]),
              'name': 'This Is Happening',
              'release_date': '2010-05-17',
              'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
              'total_tracks': 9,
              'uri': 'spotify:album:4hnqM0JK4CM1phwfq1Ldyz',
            }),
            'artists': list([
              dict({
                'artist_id': '066X20Nz7iquqkkCW6Jxy6',
                'name': 'LCD Soundsystem',
                'uri': 'spotify:artist:066X20Nz7iquqkkCW6Jxy6',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 401440,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4Cy0NHJ8Gh0xMdwyM9RkQm',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4Cy0NHJ8Gh0xMdwyM9RkQm',
            'is_local': False,
            'name': 'All I Want',
            'track_id': '4Cy0NHJ8Gh0xMdwyM9RkQm',
            'track_number': 4,
            'type': <ItemType.TRACK: 'track'>,
            'uri': 'spotify:track:4Cy0NHJ8Gh0xMdwyM9RkQm',
          }),
        }),
        dict({
          'added_at': datetime.datetime(2015, 1, 15, 12, 40, 35, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/jmperezperez',
            }),
            'href': 'https://api.spotify.com/v1/users/jmperezperez',
            'uri': 'spotify:user:jmperezperez',
            'user_id': 'jmperezperez',
          }),
          'track': dict({
            'album': dict({
              'album_id': '2usKFntxa98WHMcyW6xJBz',
              'album_type': <AlbumType.ALBUM: 'album'>,
              'artists': list([
                dict({
                  'artist_id': '272ArH9SUAlslQqsSgPJA2',
                  'name': 'Glenn Horiuchi Trio',
                  'uri': 'spotify:artist:272ArH9SUAlslQqsSgPJA2',
                }),
              ]),
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab67616d0000b2738b7447ac3daa1da18811cf7b',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67616d00001e028b7447ac3daa1da18811cf7b',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab67616d000048518b7447ac3daa1da18811cf7b',
                  'width': 64,
                }),
              ]),
              'name': 'Glenn Horiuchi Trio / Gelenn Horiuchi Quartet: Mercy / Jump Start / Endpoints / Curl Out / Earthworks / Mind Probe / Null Set / Another Space (A)',
              'release_date': '2011-04-01',
              'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
              'total_tracks': 8,
              'uri': 'spotify:album:2usKFntxa98WHMcyW6xJBz',
            }),
            'artists': list([
              dict({
                'artist_id': '272ArH9SUAlslQqsSgPJA2',
                'name': 'Glenn Horiuchi Trio',
                'uri': 'spotify:artist:272ArH9SUAlslQqsSgPJA2',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 358760,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6hvFrZNocdt2FcKGCSY5NI',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6hvFrZNocdt2FcKGCSY5NI',
            'is_local': False,
            'name': 'Endpoints',
            'track_id': '6hvFrZNocdt2FcKGCSY5NI',
            'track_number': 2,
            'type': <ItemType.TRACK: 'track'>,
            'uri': 'spotify:track:6hvFrZNocdt2FcKGCSY5NI',
          }),
        }),
        dict({
          'added_at': datetime.datetime(2015, 1, 15, 12, 41, 10, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/jmperezperez',
            }),
            'href': 'https://api.spotify.com/v1/users/jmperezperez',
            'uri': 'spotify:user:jmperezperez',
            'user_id': 'jmperezperez',
          }),
          'track': dict({
            'album': dict({
              'album_id': '0ivM6kSawaug0j3tZVusG2',
              'album_type': <AlbumType.ALBUM: 'album'>,
              'artists': list([
                dict({
                  'artist_id': '2KftmGt9sk1yLjsAoloC3M',
                  'name': 'Zucchero',
                  'uri': 'spotify:artist:2KftmGt9sk1yLjsAoloC3M',
                }),
              ]),
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab67616d0000b27304e57d181ff062f8339d6c71',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67616d00001e0204e57d181ff062f8339d6c71',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab67616d0000485104e57d181ff062f8339d6c71',
                  'width': 64,
                }),
              ]),
              'name': 'All The Best (Spanish Version)',
              'release_date': '2007-01-01',
              'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
              'total_tracks': 18,
              'uri': 'spotify:album:0ivM6kSawaug0j3tZVusG2',
            }),
            'artists': list([
              dict({
                'artist_id': '2KftmGt9sk1yLjsAoloC3M',
                'name': 'Zucchero',
                'uri': 'spotify:artist:2KftmGt9sk1yLjsAoloC3M',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 176093,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2E2znCPaS8anQe21GLxcvJ',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2E2znCPaS8anQe21GLxcvJ',
            'is_local': False,
            'name': 'You Are So Beautiful',
            'track_id': '2E2znCPaS8anQe21GLxcvJ',
            'track_number': 18,
            'type': <ItemType.TRACK: 'track'>,
            'uri': 'spotify:track:2E2znCPaS8anQe21GLxcvJ',
          }),
        }),
      ]),
    }),
    'uri': 'spotify:playlist:3cEYpjA9oz9GiPac4AsH4n',
  })
# ---
# name: test_get_playlist[playlist_2.json]
  dict({
    'collaborative': False,
    'description': '',
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/playlist/3toMXYM91T55pKzuysH5Ph',
    }),
    'images': list([
      dict({
        'height': None,
        'url': 'https://i.scdn.co/image/ab67616d00001e022f9b47bdc2b1c7cae7b014af',
        'width': None,
      }),
    ]),
    'name': 'Starred',
    'object_type': 'playlist',
    'owner': dict({
      'display_name': 'chadandcaren',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/user/chadandcaren',
      }),
      'href': 'https://api.spotify.com/v1/users/chadandcaren',
      'object_type': 'user',
      'owner_id': 'chadandcaren',
      'uri': 'spotify:user:chadandcaren',
    }),
    'playlist_id': '3toMXYM91T55pKzuysH5Ph',
    'public': True,
    'tracks': dict({
      'items': list([
        dict({
          'added_at': datetime.datetime(2013, 1, 19, 22, 16, 8, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/chadandcaren',
            }),
            'href': 'https://api.spotify.com/v1/users/chadandcaren',
            'uri': 'spotify:user:chadandcaren',
            'user_id': 'chadandcaren',
          }),
          'track': dict({
            'album': dict({
              'album_id': '3KVfMVtOmoVCgihLE4HoBr',
              'album_type': <AlbumType.ALBUM: 'album'>,
              'artists': list([
                dict({
                  'artist_id': '2vm8GdHyrJh2O2MfbQFYG0',
                  'name': 'Ingrid Michaelson',
                  'uri': 'spotify:artist:2vm8GdHyrJh2O2MfbQFYG0',
                }),
              ]),
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab67616d0000b273866dc0fd5fbfd51fd4c50919',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67616d00001e02866dc0fd5fbfd51fd4c50919',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab67616d00004851866dc0fd5fbfd51fd4c50919',
                  'width': 64,
                }),
              ]),
              'name': 'Be OK',
              'release_date': '2008-01-01',
              'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
              'total_tracks': 11,
              'uri': 'spotify:album:3KVfMVtOmoVCgihLE4HoBr',
            }),
            'artists': list([
              dict({
                'artist_id': '2vm8GdHyrJh2O2MfbQFYG0',
                'name': 'Ingrid Michaelson',
                'uri': 'spotify:artist:2vm8GdHyrJh2O2MfbQFYG0',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 148706,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4oeRfmp9XpKWym6YD1WvBP',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4oeRfmp9XpKWym6YD1WvBP',
            'is_local': False,
            'name': 'You and I',
            'track_id': '4oeRfmp9XpKWym6YD1WvBP',
            'track_number': 10,
            'type': <ItemType.TRACK: 'track'>,
            'uri': 'spotify:track:4oeRfmp9XpKWym6YD1WvBP',
          }),
        }),
      ]),
    }),
    'uri': 'spotify:playlist:3toMXYM91T55pKzuysH5Ph',
  })
# ---
# name: test_get_playlist[playlist_3.json]
  dict({
    'collaborative': False,
    'description': '',
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/playlist/0pM0KTMXM7K5qr3sL2DPw1',
    }),
    'images': list([
      dict({
        'height': None,
        'url': 'https://i.scdn.co/image/ab67616d00001e02991e1b6c088e2abc38f584c8',
        'width': None,
      }),
    ]),
    'name': 'Pain',
    'object_type': 'playlist',
    'owner': dict({
      'display_name': 'Joost Lekkerkerker',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/user/1112264649',
      }),
      'href': 'https://api.spotify.com/v1/users/1112264649',
      'object_type': 'user',
      'owner_id': '1112264649',
      'uri': 'spotify:user:1112264649',
    }),
    'playlist_id': '0pM0KTMXM7K5qr3sL2DPw1',
    'public': True,
    'tracks': dict({
      'items': list([
        dict({
          'added_at': datetime.datetime(2024, 5, 16, 20, 46, 24, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/1112264649',
            }),
            'href': 'https://api.spotify.com/v1/users/1112264649',
            'uri': 'spotify:user:1112264649',
            'user_id': '1112264649',
          }),
          'track': dict({
            'album': dict({
              'album_id': '5iuJo58XqIENkyviBJ4dil',
              'album_type': <AlbumType.SINGLE: 'single'>,
              'artists': list([
                dict({
                  'artist_id': '6DDZJCwSnNF361mUwPEm4G',
                  'name': 'Saint Nomad',
                  'uri': 'spotify:artist:6DDZJCwSnNF361mUwPEm4G',
                }),
              ]),
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab67616d0000b273991e1b6c088e2abc38f584c8',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67616d00001e02991e1b6c088e2abc38f584c8',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab67616d00004851991e1b6c088e2abc38f584c8',
                  'width': 64,
                }),
              ]),
              'name': 'Nothing To Lose',
              'release_date': '2020-05-01',
              'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
              'total_tracks': 1,
              'uri': 'spotify:album:5iuJo58XqIENkyviBJ4dil',
            }),
            'artists': list([
              dict({
                'artist_id': '6DDZJCwSnNF361mUwPEm4G',
                'name': 'Saint Nomad',
                'uri': 'spotify:artist:6DDZJCwSnNF361mUwPEm4G',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 164453,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4bEdcyI0l4zX2Ut5m5Xrhw',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4bEdcyI0l4zX2Ut5m5Xrhw',
            'is_local': False,
            'name': 'Nothing To Lose',
            'track_id': '4bEdcyI0l4zX2Ut5m5Xrhw',
            'track_number': 1,
            'type': <ItemType.TRACK: 'track'>,
            'uri': 'spotify:track:4bEdcyI0l4zX2Ut5m5Xrhw',
          }),
        }),
        dict({
          'added_at': datetime.datetime(2024, 5, 16, 20, 53, 44, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/1112264649',
            }),
            'href': 'https://api.spotify.com/v1/users/1112264649',
            'uri': 'spotify:user:1112264649',
            'user_id': '1112264649',
          }),
          'track': dict({
            'album': dict({
              'album_id': '4stVgm9xx3cSNYddv8oTcL',
              'album_type': <AlbumType.SINGLE: 'single'>,
              'artists': list([
                dict({
                  'artist_id': '6GFq3n0UYhpfzYPprpmD4K',
                  'name': 'Doko',
                  'uri': 'spotify:artist:6GFq3n0UYhpfzYPprpmD4K',
                }),
              ]),
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab67616d0000b273a8f196ac6565b31a5b6689de',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67616d00001e02a8f196ac6565b31a5b6689de',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab67616d00004851a8f196ac6565b31a5b6689de',
                  'width': 64,
                }),
              ]),
              'name': 'Borrowed Time',
              'release_date': '2019-06-28',
              'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
              'total_tracks': 1,
              'uri': 'spotify:album:4stVgm9xx3cSNYddv8oTcL',
            }),
            'artists': list([
              dict({
                'artist_id': '6GFq3n0UYhpfzYPprpmD4K',
                'name': 'Doko',
                'uri': 'spotify:artist:6GFq3n0UYhpfzYPprpmD4K',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 198022,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2kmZop34md5KWP4gn7Zuj8',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2kmZop34md5KWP4gn7Zuj8',
            'is_local': False,
            'name': 'Borrowed Time',
            'track_id': '2kmZop34md5KWP4gn7Zuj8',
            'track_number': 1,
            'type': <ItemType.TRACK: 'track'>,
            'uri': 'spotify:track:2kmZop34md5KWP4gn7Zuj8',
          }),
        }),
        dict({
          'added_at': datetime.datetime(2024, 11, 28, 10, 18, 44, tzinfo=datetime.timezone.utc),
          'added_by': dict({
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/user/1112264649',
            }),
            'href': 'https://api.spotify.com/v1/users/1112264649',
            'uri': 'spotify:user:1112264649',
            'user_id': '1112264649',
          }),
          'track': dict({
            'description': 'HAPPYYYYY SEMEN DAY!!!!!! Love you xoxoxCheck out our Patreon at patreon.com/ToniandRyan, and make sure you join our Facebook Group!\xa0Find #ToniAndRyan on Instagram @tonilodge and @ryan.jon OR on TikTok @toniandryanpodcast Hosted on Acast. See acast.com/privacy for more information.',
            'duration_ms': 2071013,
            'episode_id': '5ytYkag3JZJ3GP2uuFAEBe',
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/episode/5ytYkag3JZJ3GP2uuFAEBe',
            }),
            'href': 'https://api.spotify.com/v1/episodes/5ytYkag3JZJ3GP2uuFAEBe',
            'images': list([
              dict({
                'height': 640,
                'url': 'https://i.scdn.co/image/ab6765630000ba8ab5f65a943ef4f707bf79949b',
                'width': 640,
              }),
              dict({
                'height': 300,
                'url': 'https://i.scdn.co/image/ab67656300005f1fb5f65a943ef4f707bf79949b',
                'width': 300,
              }),
              dict({
                'height': 64,
                'url': 'https://i.scdn.co/image/ab6765630000f68db5f65a943ef4f707bf79949b',
                'width': 64,
              }),
            ]),
            'name': 'Toni Delivers Semen',
            'release_date': '2024-11-27',
            'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
            'show': dict({
              'description': 'We’ll all giggle along at naughty jokes, your dating horror stories and give questionable recommendations on movies, food and relationships. This podcast is hot, fun garbage and we (Toni Lodge and Ryan Jon here in Melbourne, Australia) would love you to climb aboard and be our friends. Hosted on Acast. See acast.com/privacy for more information.',
              'external_urls': dict({
                'spotify': 'https://open.spotify.com/show/5OzkclFjD6iAjtAuo7aIYt',
              }),
              'href': 'https://api.spotify.com/v1/shows/5OzkclFjD6iAjtAuo7aIYt',
              'images': list([
                dict({
                  'height': 640,
                  'url': 'https://i.scdn.co/image/ab6765630000ba8ab5f65a943ef4f707bf79949b',
                  'width': 640,
                }),
                dict({
                  'height': 300,
                  'url': 'https://i.scdn.co/image/ab67656300005f1fb5f65a943ef4f707bf79949b',
                  'width': 300,
                }),
                dict({
                  'height': 64,
                  'url': 'https://i.scdn.co/image/ab6765630000f68db5f65a943ef4f707bf79949b',
                  'width': 64,
                }),
              ]),
              'name': 'Toni and Ryan',
              'publisher': 'Toni Lodge and Ryan Jon',
              'show_id': '5OzkclFjD6iAjtAuo7aIYt',
              'total_episodes': 780,
              'uri': 'spotify:show:5OzkclFjD6iAjtAuo7aIYt',
            }),
            'type': <ItemType.EPISODE: 'episode'>,
            'uri': 'spotify:episode:5ytYkag3JZJ3GP2uuFAEBe',
          }),
        }),
      ]),
    }),
    'uri': 'spotify:playlist:0pM0KTMXM7K5qr3sL2DPw1',
  })
# ---
# name: test_get_playlist_cover_image
  list([
    dict({
      'height': None,
      'url': 'https://image-cdn-fa.spotifycdn.com/image/ab67706c0000bebb8d0ce13d55f634e290f744ba',
      'width': None,
    }),
  ])
# ---
# name: test_get_playlist_tracks
  list([
    dict({
      'added_at': datetime.datetime(2015, 1, 15, 12, 39, 22, tzinfo=datetime.timezone.utc),
      'added_by': dict({
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/jmperezperez',
        }),
        'href': 'https://api.spotify.com/v1/users/jmperezperez',
        'uri': 'spotify:user:jmperezperez',
        'user_id': 'jmperezperez',
      }),
      'track': dict({
        'album': dict({
          'album_id': '2pANdqPvxInB0YvcDiw4ko',
          'album_type': <AlbumType.COMPILATION: 'compilation'>,
          'artists': list([
            dict({
              'artist_id': '0LyfQWJT6nXafLPZqxe9Of',
              'name': 'Various Artists',
              'uri': 'spotify:artist:0LyfQWJT6nXafLPZqxe9Of',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273ce6d0eef0c1ce77e5f95bbbc',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02ce6d0eef0c1ce77e5f95bbbc',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851ce6d0eef0c1ce77e5f95bbbc',
              'width': 64,
            }),
          ]),
          'name': 'Progressive Psy Trance Picks Vol.8',
          'release_date': '2012-04-02',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 20,
          'uri': 'spotify:album:2pANdqPvxInB0YvcDiw4ko',
        }),
        'artists': list([
          dict({
            'artist_id': '6eSdhw46riw2OUHgMwR8B5',
            'name': 'Odiseo',
            'uri': 'spotify:artist:6eSdhw46riw2OUHgMwR8B5',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 376000,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/4rzfv0JLZfVhOhbSQ8o5jZ',
        }),
        'href': 'https://api.spotify.com/v1/tracks/4rzfv0JLZfVhOhbSQ8o5jZ',
        'is_local': False,
        'name': 'Api',
        'track_id': '4rzfv0JLZfVhOhbSQ8o5jZ',
        'track_number': 10,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:4rzfv0JLZfVhOhbSQ8o5jZ',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2015, 1, 15, 12, 40, 3, tzinfo=datetime.timezone.utc),
      'added_by': dict({
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/jmperezperez',
        }),
        'href': 'https://api.spotify.com/v1/users/jmperezperez',
        'uri': 'spotify:user:jmperezperez',
        'user_id': 'jmperezperez',
      }),
      'track': dict({
        'album': dict({
          'album_id': '6nlfkk5GoXRL1nktlATNsy',
          'album_type': <AlbumType.COMPILATION: 'compilation'>,
          'artists': list([
            dict({
              'artist_id': '0LyfQWJT6nXafLPZqxe9Of',
              'name': 'Various Artists',
              'uri': 'spotify:artist:0LyfQWJT6nXafLPZqxe9Of',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273aa2ff29970d9a63a49dfaeb2',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02aa2ff29970d9a63a49dfaeb2',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851aa2ff29970d9a63a49dfaeb2',
              'width': 64,
            }),
          ]),
          'name': 'Wellness & Dreaming Source',
          'release_date': '2015-01-09',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 25,
          'uri': 'spotify:album:6nlfkk5GoXRL1nktlATNsy',
        }),
        'artists': list([
          dict({
            'artist_id': '5VQE4WOzPu9h3HnGLuBoA6',
            'name': 'Vlasta Marek',
            'uri': 'spotify:artist:5VQE4WOzPu9h3HnGLuBoA6',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 730066,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5o3jMYOSbaVz3tkgwhELSV',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5o3jMYOSbaVz3tkgwhELSV',
        'is_local': False,
        'name': 'Is',
        'track_id': '5o3jMYOSbaVz3tkgwhELSV',
        'track_number': 21,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:5o3jMYOSbaVz3tkgwhELSV',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2015, 1, 15, 12, 22, 30, tzinfo=datetime.timezone.utc),
      'added_by': dict({
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/jmperezperez',
        }),
        'href': 'https://api.spotify.com/v1/users/jmperezperez',
        'uri': 'spotify:user:jmperezperez',
        'user_id': 'jmperezperez',
      }),
      'track': dict({
        'album': dict({
          'album_id': '4hnqM0JK4CM1phwfq1Ldyz',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '066X20Nz7iquqkkCW6Jxy6',
              'name': 'LCD Soundsystem',
              'uri': 'spotify:artist:066X20Nz7iquqkkCW6Jxy6',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273ee0d0dce888c6c8a70db6e8b',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02ee0d0dce888c6c8a70db6e8b',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851ee0d0dce888c6c8a70db6e8b',
              'width': 64,
            }),
          ]),
          'name': 'This Is Happening',
          'release_date': '2010-05-17',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 9,
          'uri': 'spotify:album:4hnqM0JK4CM1phwfq1Ldyz',
        }),
        'artists': list([
          dict({
            'artist_id': '066X20Nz7iquqkkCW6Jxy6',
            'name': 'LCD Soundsystem',
            'uri': 'spotify:artist:066X20Nz7iquqkkCW6Jxy6',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 401440,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/4Cy0NHJ8Gh0xMdwyM9RkQm',
        }),
        'href': 'https://api.spotify.com/v1/tracks/4Cy0NHJ8Gh0xMdwyM9RkQm',
        'is_local': False,
        'name': 'All I Want',
        'track_id': '4Cy0NHJ8Gh0xMdwyM9RkQm',
        'track_number': 4,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:4Cy0NHJ8Gh0xMdwyM9RkQm',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2015, 1, 15, 12, 40, 35, tzinfo=datetime.timezone.utc),
      'added_by': dict({
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/jmperezperez',
        }),
        'href': 'https://api.spotify.com/v1/users/jmperezperez',
        'uri': 'spotify:user:jmperezperez',
        'user_id': 'jmperezperez',
      }),
      'track': dict({
        'album': dict({
          'album_id': '2usKFntxa98WHMcyW6xJBz',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '272ArH9SUAlslQqsSgPJA2',
              'name': 'Glenn Horiuchi Trio',
              'uri': 'spotify:artist:272ArH9SUAlslQqsSgPJA2',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2738b7447ac3daa1da18811cf7b',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e028b7447ac3daa1da18811cf7b',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048518b7447ac3daa1da18811cf7b',
              'width': 64,
            }),
          ]),
          'name': 'Glenn Horiuchi Trio / Gelenn Horiuchi Quartet: Mercy / Jump Start / Endpoints / Curl Out / Earthworks / Mind Probe / Null Set / Another Space (A)',
          'release_date': '2011-04-01',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 8,
          'uri': 'spotify:album:2usKFntxa98WHMcyW6xJBz',
        }),
        'artists': list([
          dict({
            'artist_id': '272ArH9SUAlslQqsSgPJA2',
            'name': 'Glenn Horiuchi Trio',
            'uri': 'spotify:artist:272ArH9SUAlslQqsSgPJA2',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 358760,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6hvFrZNocdt2FcKGCSY5NI',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6hvFrZNocdt2FcKGCSY5NI',
        'is_local': False,
        'name': 'Endpoints',
        'track_id': '6hvFrZNocdt2FcKGCSY5NI',
        'track_number': 2,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:6hvFrZNocdt2FcKGCSY5NI',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2015, 1, 15, 12, 41, 10, tzinfo=datetime.timezone.utc),
      'added_by': dict({
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/jmperezperez',
        }),
        'href': 'https://api.spotify.com/v1/users/jmperezperez',
        'uri': 'spotify:user:jmperezperez',
        'user_id': 'jmperezperez',
      }),
      'track': dict({
        'album': dict({
          'album_id': '0ivM6kSawaug0j3tZVusG2',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '2KftmGt9sk1yLjsAoloC3M',
              'name': 'Zucchero',
              'uri': 'spotify:artist:2KftmGt9sk1yLjsAoloC3M',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27304e57d181ff062f8339d6c71',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0204e57d181ff062f8339d6c71',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485104e57d181ff062f8339d6c71',
              'width': 64,
            }),
          ]),
          'name': 'All The Best (Spanish Version)',
          'release_date': '2007-01-01',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 18,
          'uri': 'spotify:album:0ivM6kSawaug0j3tZVusG2',
        }),
        'artists': list([
          dict({
            'artist_id': '2KftmGt9sk1yLjsAoloC3M',
            'name': 'Zucchero',
            'uri': 'spotify:artist:2KftmGt9sk1yLjsAoloC3M',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 176093,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/2E2znCPaS8anQe21GLxcvJ',
        }),
        'href': 'https://api.spotify.com/v1/tracks/2E2znCPaS8anQe21GLxcvJ',
        'is_local': False,
        'name': 'You Are So Beautiful',
        'track_id': '2E2znCPaS8anQe21GLxcvJ',
        'track_number': 18,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:2E2znCPaS8anQe21GLxcvJ',
      }),
    }),
  ])
# ---
# name: test_get_playlists_for_user
  list([
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1CBGDKGM8kekBPfAG5jPZt',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e022910c6fc625b0d5ae2eed26aab67616d00001e023dc315e27e5cae6e5519823aab67616d00001e02d272c37389bd3d9c20564166ab67616d00001e02d5bb99cd52da195675b2f2cd',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e022910c6fc625b0d5ae2eed26aab67616d00001e023dc315e27e5cae6e5519823aab67616d00001e02d272c37389bd3d9c20564166ab67616d00001e02d5bb99cd52da195675b2f2cd',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e022910c6fc625b0d5ae2eed26aab67616d00001e023dc315e27e5cae6e5519823aab67616d00001e02d272c37389bd3d9c20564166ab67616d00001e02d5bb99cd52da195675b2f2cd',
          'width': 60,
        }),
      ]),
      'name': 'Starred',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '1CBGDKGM8kekBPfAG5jPZt',
      'public': True,
      'uri': 'spotify:playlist:1CBGDKGM8kekBPfAG5jPZt',
    }),
    dict({
      'collaborative': False,
      'description': 'A mish mash of a bunch of songs that you can maybe dance to. Curated by <a href="https://twitter.com/nicktoumpelis">Nick Toumpelis</a>. Photography by <a href="https://www.instagram.com/nicktoumpelis/">Nick Toumpelis</a>. ',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3tT3E3Q4u5Xd0v3ySPLR1O',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da84f8496493a06aec2c3eda1a42',
          'width': None,
        }),
      ]),
      'name': 'dance fusion',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Nick Toumpelis',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/1226836970',
        }),
        'href': 'https://api.spotify.com/v1/users/1226836970',
        'object_type': 'user',
        'owner_id': '1226836970',
        'uri': 'spotify:user:1226836970',
      }),
      'playlist_id': '3tT3E3Q4u5Xd0v3ySPLR1O',
      'public': True,
      'uri': 'spotify:playlist:3tT3E3Q4u5Xd0v3ySPLR1O',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/41R1UENL6yUDiRR2riptb7',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02087ae01edc17b3fbe0f44b28ab67616d00001e02722ee6054732c347e335cb35ab67616d00001e027d4287bed60bfc5f13d96644ab67616d00001e02bef76218c65153abaed75e6e',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02087ae01edc17b3fbe0f44b28ab67616d00001e02722ee6054732c347e335cb35ab67616d00001e027d4287bed60bfc5f13d96644ab67616d00001e02bef76218c65153abaed75e6e',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02087ae01edc17b3fbe0f44b28ab67616d00001e02722ee6054732c347e335cb35ab67616d00001e027d4287bed60bfc5f13d96644ab67616d00001e02bef76218c65153abaed75e6e',
          'width': 60,
        }),
      ]),
      'name': 'covers and under covers',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'migo',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/migo',
        }),
        'href': 'https://api.spotify.com/v1/users/migo',
        'object_type': 'user',
        'owner_id': 'migo',
        'uri': 'spotify:user:migo',
      }),
      'playlist_id': '41R1UENL6yUDiRR2riptb7',
      'public': True,
      'uri': 'spotify:playlist:41R1UENL6yUDiRR2riptb7',
    }),
    dict({
      'collaborative': False,
      'description': 'Bombastic tunes -- in some way or another',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6dSh5StaaE1XbIF5s7Lxng',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020dd350beeb5ac73672ad6e80ab67616d00001e02341b1e5f0395b17821491c7dab67616d00001e024ccb64f022a53d3e8ec84a20ab67616d00001e02e477610ef54781d751a9e319',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020dd350beeb5ac73672ad6e80ab67616d00001e02341b1e5f0395b17821491c7dab67616d00001e024ccb64f022a53d3e8ec84a20ab67616d00001e02e477610ef54781d751a9e319',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020dd350beeb5ac73672ad6e80ab67616d00001e02341b1e5f0395b17821491c7dab67616d00001e024ccb64f022a53d3e8ec84a20ab67616d00001e02e477610ef54781d751a9e319',
          'width': 60,
        }),
      ]),
      'name': 'Fläskiga låtar',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'migo',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/migo',
        }),
        'href': 'https://api.spotify.com/v1/users/migo',
        'object_type': 'user',
        'owner_id': 'migo',
        'uri': 'spotify:user:migo',
      }),
      'playlist_id': '6dSh5StaaE1XbIF5s7Lxng',
      'public': True,
      'uri': 'spotify:playlist:6dSh5StaaE1XbIF5s7Lxng',
    }),
    dict({
      'collaborative': False,
      'description': 'Migo',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6hBpet9cW4cVgn96xBJ5Ay',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02578f1ac435ac326e48334f66ab67616d00001e02722ee6054732c347e335cb35ab67616d00001e02810168d54f85d48f07389237ab67616d00001e02e477610ef54781d751a9e319',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02578f1ac435ac326e48334f66ab67616d00001e02722ee6054732c347e335cb35ab67616d00001e02810168d54f85d48f07389237ab67616d00001e02e477610ef54781d751a9e319',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02578f1ac435ac326e48334f66ab67616d00001e02722ee6054732c347e335cb35ab67616d00001e02810168d54f85d48f07389237ab67616d00001e02e477610ef54781d751a9e319',
          'width': 60,
        }),
      ]),
      'name': 'migo1',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'migo',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/migo',
        }),
        'href': 'https://api.spotify.com/v1/users/migo',
        'object_type': 'user',
        'owner_id': 'migo',
        'uri': 'spotify:user:migo',
      }),
      'playlist_id': '6hBpet9cW4cVgn96xBJ5Ay',
      'public': True,
      'uri': 'spotify:playlist:6hBpet9cW4cVgn96xBJ5Ay',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/47s8Pj6MjV5UWYEaHIe9ZH',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e023a2d2b9621ef645380c63c16ab67616d00001e02ba4c798ab356b8adb64bb2fcab67616d00001e02ba6132f887666a2627eb8a56ab67616d00001e02dbe9c4609ec382dcc0391e62',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e023a2d2b9621ef645380c63c16ab67616d00001e02ba4c798ab356b8adb64bb2fcab67616d00001e02ba6132f887666a2627eb8a56ab67616d00001e02dbe9c4609ec382dcc0391e62',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e023a2d2b9621ef645380c63c16ab67616d00001e02ba4c798ab356b8adb64bb2fcab67616d00001e02ba6132f887666a2627eb8a56ab67616d00001e02dbe9c4609ec382dcc0391e62',
          'width': 60,
        }),
      ]),
      'name': 'Dance I Said',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Michelle Kadir',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/michellekadir',
        }),
        'href': 'https://api.spotify.com/v1/users/michellekadir',
        'object_type': 'user',
        'owner_id': 'michellekadir',
        'uri': 'spotify:user:michellekadir',
      }),
      'playlist_id': '47s8Pj6MjV5UWYEaHIe9ZH',
      'public': True,
      'uri': 'spotify:playlist:47s8Pj6MjV5UWYEaHIe9ZH',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/13XT3kKAKOuhKV1IdgQxzf',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0242165edf668b41cb531722b0ab67616d00001e02599dfe976032830e5ec68945ab67616d00001e0297a9ac8888b636959cd8353cab67616d00001e029d2ff3fc2590549e13f17670',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0242165edf668b41cb531722b0ab67616d00001e02599dfe976032830e5ec68945ab67616d00001e0297a9ac8888b636959cd8353cab67616d00001e029d2ff3fc2590549e13f17670',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0242165edf668b41cb531722b0ab67616d00001e02599dfe976032830e5ec68945ab67616d00001e0297a9ac8888b636959cd8353cab67616d00001e029d2ff3fc2590549e13f17670',
          'width': 60,
        }),
      ]),
      'name': 'Instrumental',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'migo',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/migo',
        }),
        'href': 'https://api.spotify.com/v1/users/migo',
        'object_type': 'user',
        'owner_id': 'migo',
        'uri': 'spotify:user:migo',
      }),
      'playlist_id': '13XT3kKAKOuhKV1IdgQxzf',
      'public': True,
      'uri': 'spotify:playlist:13XT3kKAKOuhKV1IdgQxzf',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/70lIZA6kTENcryaoGNIPaA',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02d3c8ce1e6e072e0e70dfdf17',
          'width': None,
        }),
      ]),
      'name': 'Steve Via - The Story of Light',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'migo',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/migo',
        }),
        'href': 'https://api.spotify.com/v1/users/migo',
        'object_type': 'user',
        'owner_id': 'migo',
        'uri': 'spotify:user:migo',
      }),
      'playlist_id': '70lIZA6kTENcryaoGNIPaA',
      'public': True,
      'uri': 'spotify:playlist:70lIZA6kTENcryaoGNIPaA',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6FTrJV6xPwAxEGNsIDG5Uj',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0210a9b88453d9d4a3aeb55a18ab67616d00001e0266c35697a32e5437811bb5ffab67616d00001e02a0ef2b3fa19f6d2a03149dcaab67616d00001e02a1fc113a6858d0824d9aaf38',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0210a9b88453d9d4a3aeb55a18ab67616d00001e0266c35697a32e5437811bb5ffab67616d00001e02a0ef2b3fa19f6d2a03149dcaab67616d00001e02a1fc113a6858d0824d9aaf38',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0210a9b88453d9d4a3aeb55a18ab67616d00001e0266c35697a32e5437811bb5ffab67616d00001e02a0ef2b3fa19f6d2a03149dcaab67616d00001e02a1fc113a6858d0824d9aaf38',
          'width': 60,
        }),
      ]),
      'name': 'Pulp Fiction (approximate)',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'migo',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/migo',
        }),
        'href': 'https://api.spotify.com/v1/users/migo',
        'object_type': 'user',
        'owner_id': 'migo',
        'uri': 'spotify:user:migo',
      }),
      'playlist_id': '6FTrJV6xPwAxEGNsIDG5Uj',
      'public': True,
      'uri': 'spotify:playlist:6FTrJV6xPwAxEGNsIDG5Uj',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2tiFrJw4jgaQEDTGkNY4Lt',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e021d7f86bc0a6c0cab4503aa17',
          'width': None,
        }),
      ]),
      'name': 'friday',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '2tiFrJw4jgaQEDTGkNY4Lt',
      'public': True,
      'uri': 'spotify:playlist:2tiFrJw4jgaQEDTGkNY4Lt',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0EDdjGp3CRtWBWesrDv45e',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da84046a80315ca7366b7e337a0f',
          'width': None,
        }),
      ]),
      'name': '07:42',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'robin',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/robbanrapp',
        }),
        'href': 'https://api.spotify.com/v1/users/robbanrapp',
        'object_type': 'user',
        'owner_id': 'robbanrapp',
        'uri': 'spotify:user:robbanrapp',
      }),
      'playlist_id': '0EDdjGp3CRtWBWesrDv45e',
      'public': True,
      'uri': 'spotify:playlist:0EDdjGp3CRtWBWesrDv45e',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/29e81WfoAsVIwEzXpSv2KT',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0240c7f05b85afeda3c365a03eab67616d00001e029a5a33aa7954b5519feb5692ab67616d00001e02aa7d2641af0fa4c1f76fafbfab67616d00001e02b3591763154a27326b3f431a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0240c7f05b85afeda3c365a03eab67616d00001e029a5a33aa7954b5519feb5692ab67616d00001e02aa7d2641af0fa4c1f76fafbfab67616d00001e02b3591763154a27326b3f431a',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0240c7f05b85afeda3c365a03eab67616d00001e029a5a33aa7954b5519feb5692ab67616d00001e02aa7d2641af0fa4c1f76fafbfab67616d00001e02b3591763154a27326b3f431a',
          'width': 60,
        }),
      ]),
      'name': 'Top 100 Tracks of 2011',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Pitchfork',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/pitchfork',
        }),
        'href': 'https://api.spotify.com/v1/users/pitchfork',
        'object_type': 'user',
        'owner_id': 'pitchfork',
        'uri': 'spotify:user:pitchfork',
      }),
      'playlist_id': '29e81WfoAsVIwEzXpSv2KT',
      'public': True,
      'uri': 'spotify:playlist:29e81WfoAsVIwEzXpSv2KT',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6sjcAKwplYdvNVmXuVWqYK',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-fa.spotifycdn.com/image/ab67706c0000da84c421935777d6aa97ca36f613',
          'width': None,
        }),
      ]),
      'name': 'Kanye West - The Samples',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Starfish & Coffee',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/125214440',
        }),
        'href': 'https://api.spotify.com/v1/users/125214440',
        'object_type': 'user',
        'owner_id': '125214440',
        'uri': 'spotify:user:125214440',
      }),
      'playlist_id': '6sjcAKwplYdvNVmXuVWqYK',
      'public': True,
      'uri': 'spotify:playlist:6sjcAKwplYdvNVmXuVWqYK',
    }),
    dict({
      'collaborative': False,
      'description': 'The official <a href="http://www.billboard.com/charts/hot-100">Billboard Hot 100</a> features this week\'s most popular songs across all genres, ranked by radio airplay monitored by Nielsen BDS, download sales tracked by Nielsen SoundScan and streaming activity data provided by leading online music services. For more information go to <a href="http://Billboard.com">Billboard.com</a>.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6UeSakyzhiEt4NB3UAd6NQ',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da843bd5501a335b265807df34db',
          'width': None,
        }),
      ]),
      'name': 'Billboard Hot 100',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Billboard',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/billboard.com',
        }),
        'href': 'https://api.spotify.com/v1/users/billboard.com',
        'object_type': 'user',
        'owner_id': 'billboard.com',
        'uri': 'spotify:user:billboard.com',
      }),
      'playlist_id': '6UeSakyzhiEt4NB3UAd6NQ',
      'public': True,
      'uri': 'spotify:playlist:6UeSakyzhiEt4NB3UAd6NQ',
    }),
    dict({
      'collaborative': False,
      'description': 'Ta det lugnt &amp; koppla av till vårmysiga &amp; behagliga låtar. Kärlekssånger, sköna hits, svenska klassiker, akustiska låtar &amp; vackra ballader.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4tIypOcGSBi4GPlXbbNBmf',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da84bd5af3266f629da301350735',
          'width': None,
        }),
      ]),
      'name': 'LUGNA LÅTAR 2025 🌼 lugn & mysig musik',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Filtr Sweden',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/sonymusicentertainment',
        }),
        'href': 'https://api.spotify.com/v1/users/sonymusicentertainment',
        'object_type': 'user',
        'owner_id': 'sonymusicentertainment',
        'uri': 'spotify:user:sonymusicentertainment',
      }),
      'playlist_id': '4tIypOcGSBi4GPlXbbNBmf',
      'public': True,
      'uri': 'spotify:playlist:4tIypOcGSBi4GPlXbbNBmf',
    }),
    dict({
      'collaborative': False,
      'description': 'Sveriges största och bästa svenska klassiker, sånger och hits genom tiderna. Sommarhits och klassiska favoriter – svensk musik sommaren 2025.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/26uqIdWqPakRB3c6Lw8I7C',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da8416ee66851f6fc81d954cc240',
          'width': None,
        }),
      ]),
      'name': 'Svenska låtar & klassiker alla kan! 🇸🇪',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Filtr Sweden',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/sonymusicentertainment',
        }),
        'href': 'https://api.spotify.com/v1/users/sonymusicentertainment',
        'object_type': 'user',
        'owner_id': 'sonymusicentertainment',
        'uri': 'spotify:user:sonymusicentertainment',
      }),
      'playlist_id': '26uqIdWqPakRB3c6Lw8I7C',
      'public': True,
      'uri': 'spotify:playlist:26uqIdWqPakRB3c6Lw8I7C',
    }),
    dict({
      'collaborative': False,
      'description': 'Världens bästa och mest tidlösa rockmusik i en mix av klassiska &amp; nya rockhits från Judas Priest, Ozzy Osbourne, AC/DC, Scorpions, Bruce Springsteen med flera.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1sNULKBP0MR5SCDhoTUGT1',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da844a3cbf9b6b1eeb03701cfae4',
          'width': None,
        }),
      ]),
      'name': 'Rock Hits ⚡️',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Filtr Legacy Sweden',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/legacysweden',
        }),
        'href': 'https://api.spotify.com/v1/users/legacysweden',
        'object_type': 'user',
        'owner_id': 'legacysweden',
        'uri': 'spotify:user:legacysweden',
      }),
      'playlist_id': '1sNULKBP0MR5SCDhoTUGT1',
      'public': True,
      'uri': 'spotify:playlist:1sNULKBP0MR5SCDhoTUGT1',
    }),
    dict({
      'collaborative': False,
      'description': 'Summer chill beach vibes playlist all genres 2000s - 2024.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4u4WSPyfvZ4RrpWWnmjIYY',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000d72c59e76846e27ba7f51db46ae5',
          'width': None,
        }),
      ]),
      'name': 'Beach Vibes 🌴 Summertime Hits 2025',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Beach Vibes',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/jhsizemore',
        }),
        'href': 'https://api.spotify.com/v1/users/jhsizemore',
        'object_type': 'user',
        'owner_id': 'jhsizemore',
        'uri': 'spotify:user:jhsizemore',
      }),
      'playlist_id': '4u4WSPyfvZ4RrpWWnmjIYY',
      'public': True,
      'uri': 'spotify:playlist:4u4WSPyfvZ4RrpWWnmjIYY',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1jiWNIRgT9whCQZMGDzsZU',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02396bcd4043a871d830c848a3ab67616d00001e02678bfbaf23b8dfa454017b0bab67616d00001e02c40c3ae9c8d60ccf0a4baa8bab67616d00001e02e202fd7dbb4262a37b85a644',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02396bcd4043a871d830c848a3ab67616d00001e02678bfbaf23b8dfa454017b0bab67616d00001e02c40c3ae9c8d60ccf0a4baa8bab67616d00001e02e202fd7dbb4262a37b85a644',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02396bcd4043a871d830c848a3ab67616d00001e02678bfbaf23b8dfa454017b0bab67616d00001e02c40c3ae9c8d60ccf0a4baa8bab67616d00001e02e202fd7dbb4262a37b85a644',
          'width': 60,
        }),
      ]),
      'name': 'RS Playlist',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Rolling Stone',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/rsedit',
        }),
        'href': 'https://api.spotify.com/v1/users/rsedit',
        'object_type': 'user',
        'owner_id': 'rsedit',
        'uri': 'spotify:user:rsedit',
      }),
      'playlist_id': '1jiWNIRgT9whCQZMGDzsZU',
      'public': True,
      'uri': 'spotify:playlist:1jiWNIRgT9whCQZMGDzsZU',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7JbyZrk837zNSgRRzMZITA',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0213cbe3e4dfa81fe5b91f2f1cab67616d00001e029d6e136c3a0298fb0c53abeaab67616d00001e02dac4efc0ebdfd9d92f127129ab67616d00001e02df2f41d27d037e13bdd56333',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0213cbe3e4dfa81fe5b91f2f1cab67616d00001e029d6e136c3a0298fb0c53abeaab67616d00001e02dac4efc0ebdfd9d92f127129ab67616d00001e02df2f41d27d037e13bdd56333',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0213cbe3e4dfa81fe5b91f2f1cab67616d00001e029d6e136c3a0298fb0c53abeaab67616d00001e02dac4efc0ebdfd9d92f127129ab67616d00001e02df2f41d27d037e13bdd56333',
          'width': 60,
        }),
      ]),
      'name': 'Eighties',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'migo',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/migo',
        }),
        'href': 'https://api.spotify.com/v1/users/migo',
        'object_type': 'user',
        'owner_id': 'migo',
        'uri': 'spotify:user:migo',
      }),
      'playlist_id': '7JbyZrk837zNSgRRzMZITA',
      'public': True,
      'uri': 'spotify:playlist:7JbyZrk837zNSgRRzMZITA',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6bUIofrj5PWNIeb67DbUqf',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e021b6c907fea6271ab06a852e1ab67616d00001e026c7112082b63beefffe40151ab67616d00001e028175dd850d192b76ec494d90ab67616d00001e02bdc7f3b01de89cf5ce73bb32',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e021b6c907fea6271ab06a852e1ab67616d00001e026c7112082b63beefffe40151ab67616d00001e028175dd850d192b76ec494d90ab67616d00001e02bdc7f3b01de89cf5ce73bb32',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e021b6c907fea6271ab06a852e1ab67616d00001e026c7112082b63beefffe40151ab67616d00001e028175dd850d192b76ec494d90ab67616d00001e02bdc7f3b01de89cf5ce73bb32',
          'width': 60,
        }),
      ]),
      'name': 'While You Work (@whileyouwork)',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Eli Feghali',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/efeghali',
        }),
        'href': 'https://api.spotify.com/v1/users/efeghali',
        'object_type': 'user',
        'owner_id': 'efeghali',
        'uri': 'spotify:user:efeghali',
      }),
      'playlist_id': '6bUIofrj5PWNIeb67DbUqf',
      'public': True,
      'uri': 'spotify:playlist:6bUIofrj5PWNIeb67DbUqf',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/12G6dXVYRBSvVktGXrKK43',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e023992c7ab57975935b29fa22bab67616d00001e02e73283547df6735c5db0ba45ab67616d00001e02fb00f7be0eca020bb5c05911ab67616d00001e02fe24dcd263c08c6dd84b6e8c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e023992c7ab57975935b29fa22bab67616d00001e02e73283547df6735c5db0ba45ab67616d00001e02fb00f7be0eca020bb5c05911ab67616d00001e02fe24dcd263c08c6dd84b6e8c',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e023992c7ab57975935b29fa22bab67616d00001e02e73283547df6735c5db0ba45ab67616d00001e02fb00f7be0eca020bb5c05911ab67616d00001e02fe24dcd263c08c6dd84b6e8c',
          'width': 60,
        }),
      ]),
      'name': "60's, 70's & similar",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'hammond',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/hammond',
        }),
        'href': 'https://api.spotify.com/v1/users/hammond',
        'object_type': 'user',
        'owner_id': 'hammond',
        'uri': 'spotify:user:hammond',
      }),
      'playlist_id': '12G6dXVYRBSvVktGXrKK43',
      'public': True,
      'uri': 'spotify:playlist:12G6dXVYRBSvVktGXrKK43',
    }),
    dict({
      'collaborative': False,
      'description': '<a href="https://web.archive.org/web/20100212234214/http://www.1000recordings.com/the-list">Old version of official site</a>.',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4KQDdglJ7HGcqNozbJTlM3',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-fa.spotifycdn.com/image/ab67706c0000da84bfff770712a44bacaf1abdf2',
          'width': None,
        }),
      ]),
      'name': '1000 Recordings to Hear Before You Die (Tom Moon): Album Index',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': "Ulysses' Classical",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/ulyssestone',
        }),
        'href': 'https://api.spotify.com/v1/users/ulyssestone',
        'object_type': 'user',
        'owner_id': 'ulyssestone',
        'uri': 'spotify:user:ulyssestone',
      }),
      'playlist_id': '4KQDdglJ7HGcqNozbJTlM3',
      'public': True,
      'uri': 'spotify:playlist:4KQDdglJ7HGcqNozbJTlM3',
    }),
    dict({
      'collaborative': False,
      'description': "This soulful soundtrack is packed with groovy soul &amp; funk with artists like Sam Cooke, The O'Jays, Leon Bridges, The Delfonics, Raphael Saadiq",
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3Rc7qAgZf9f0vskwzFBMHL',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da846325e8713786c11f229cd64e',
          'width': None,
        }),
      ]),
      'name': 'Hipster Soul',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Filtr Legacy Sweden',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/legacysweden',
        }),
        'href': 'https://api.spotify.com/v1/users/legacysweden',
        'object_type': 'user',
        'owner_id': 'legacysweden',
        'uri': 'spotify:user:legacysweden',
      }),
      'playlist_id': '3Rc7qAgZf9f0vskwzFBMHL',
      'public': True,
      'uri': 'spotify:playlist:3Rc7qAgZf9f0vskwzFBMHL',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/284on3DVWeAxWkgVuzZKGt',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e020480c65d154f38c816048c85ab67616d00001e026b69568c80e688e8eb0e07a7ab67616d00001e029a7c18d05c03b002aad78110ab67616d00001e02b2bb7a473fd1b3d502278fea',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e020480c65d154f38c816048c85ab67616d00001e026b69568c80e688e8eb0e07a7ab67616d00001e029a7c18d05c03b002aad78110ab67616d00001e02b2bb7a473fd1b3d502278fea',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e020480c65d154f38c816048c85ab67616d00001e026b69568c80e688e8eb0e07a7ab67616d00001e029a7c18d05c03b002aad78110ab67616d00001e02b2bb7a473fd1b3d502278fea',
          'width': 60,
        }),
      ]),
      'name': 'Bra skit',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Johan Liesén',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/liesen',
        }),
        'href': 'https://api.spotify.com/v1/users/liesen',
        'object_type': 'user',
        'owner_id': 'liesen',
        'uri': 'spotify:user:liesen',
      }),
      'playlist_id': '284on3DVWeAxWkgVuzZKGt',
      'public': True,
      'uri': 'spotify:playlist:284on3DVWeAxWkgVuzZKGt',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2nXRzr40InzvYIpCUfPhUP',
      }),
      'images': list([
      ]),
      'name': 'Le testing',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '2nXRzr40InzvYIpCUfPhUP',
      'public': True,
      'uri': 'spotify:playlist:2nXRzr40InzvYIpCUfPhUP',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1l1OW7GMacBhrSlW1nlO1K',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02b55861c30a8eb7ece3f02aee',
          'width': None,
        }),
      ]),
      'name': 'Awesome stuff',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '1l1OW7GMacBhrSlW1nlO1K',
      'public': True,
      'uri': 'spotify:playlist:1l1OW7GMacBhrSlW1nlO1K',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3Av66ptxyIoUggHF7kCBYX',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e023c757f61859e3619bc862e0cab67616d00001e02430faa3759ab2c69b351b8d9ab67616d00001e02abafafd88eafdb505136be21ab67616d00001e02ed717b9fe8ead59ec2f2e600',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e023c757f61859e3619bc862e0cab67616d00001e02430faa3759ab2c69b351b8d9ab67616d00001e02abafafd88eafdb505136be21ab67616d00001e02ed717b9fe8ead59ec2f2e600',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e023c757f61859e3619bc862e0cab67616d00001e02430faa3759ab2c69b351b8d9ab67616d00001e02abafafd88eafdb505136be21ab67616d00001e02ed717b9fe8ead59ec2f2e600',
          'width': 60,
        }),
      ]),
      'name': 'Söndagsregn 2010-10-24',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Jon Åslund',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/jon',
        }),
        'href': 'https://api.spotify.com/v1/users/jon',
        'object_type': 'user',
        'owner_id': 'jon',
        'uri': 'spotify:user:jon',
      }),
      'playlist_id': '3Av66ptxyIoUggHF7kCBYX',
      'public': True,
      'uri': 'spotify:playlist:3Av66ptxyIoUggHF7kCBYX',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1s1281yGD8FWEwr5EC1L3i',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02ab647295c0c97446c1f1a3b5ab67616d00001e02b3acf13890f0bc4e3d6b6faeab67616d00001e02c08d5fa5c0f1a834acef5100ab67616d00001e02c17e2f804d61d7c6feff082d',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02ab647295c0c97446c1f1a3b5ab67616d00001e02b3acf13890f0bc4e3d6b6faeab67616d00001e02c08d5fa5c0f1a834acef5100ab67616d00001e02c17e2f804d61d7c6feff082d',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02ab647295c0c97446c1f1a3b5ab67616d00001e02b3acf13890f0bc4e3d6b6faeab67616d00001e02c08d5fa5c0f1a834acef5100ab67616d00001e02c17e2f804d61d7c6feff082d',
          'width': 60,
        }),
      ]),
      'name': 'lördag 2010-12-11',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '1s1281yGD8FWEwr5EC1L3i',
      'public': True,
      'uri': 'spotify:playlist:1s1281yGD8FWEwr5EC1L3i',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0Xo8zJCdKx2vDyqk4o6p5C',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e0238e6fb5d88c75c017093ead3',
          'width': None,
        }),
      ]),
      'name': 'aaaa',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '0Xo8zJCdKx2vDyqk4o6p5C',
      'public': True,
      'uri': 'spotify:playlist:0Xo8zJCdKx2vDyqk4o6p5C',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/52foD1Dr3GjooeyKuygmVB',
      }),
      'images': list([
      ]),
      'name': 'sfasdf',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '52foD1Dr3GjooeyKuygmVB',
      'public': True,
      'uri': 'spotify:playlist:52foD1Dr3GjooeyKuygmVB',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5reoN3Jf8wMl3NtikgVwaC',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e022ac93e41d74e138cf5740b9eab67616d00001e02482be3c0abad6a3c2bcd2efdab67616d00001e026d88028a85c771f37374c8eaab67616d00001e02f2d2adaa21ad616df6241e7d',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e022ac93e41d74e138cf5740b9eab67616d00001e02482be3c0abad6a3c2bcd2efdab67616d00001e026d88028a85c771f37374c8eaab67616d00001e02f2d2adaa21ad616df6241e7d',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e022ac93e41d74e138cf5740b9eab67616d00001e02482be3c0abad6a3c2bcd2efdab67616d00001e026d88028a85c771f37374c8eaab67616d00001e02f2d2adaa21ad616df6241e7d',
          'width': 60,
        }),
      ]),
      'name': 'xmas',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '5reoN3Jf8wMl3NtikgVwaC',
      'public': True,
      'uri': 'spotify:playlist:5reoN3Jf8wMl3NtikgVwaC',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/46DwpEgx5I7m1Nw3DaWvmV',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e0222ebe325082a93efb47fbad9',
          'width': None,
        }),
      ]),
      'name': 'offline synk 96k test',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '46DwpEgx5I7m1Nw3DaWvmV',
      'public': True,
      'uri': 'spotify:playlist:46DwpEgx5I7m1Nw3DaWvmV',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4buZT5WKFuhpgLI14UTj83',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e022a81ff34f4346f9da93b32ff',
          'width': None,
        }),
      ]),
      'name': 'mos',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '4buZT5WKFuhpgLI14UTj83',
      'public': True,
      'uri': 'spotify:playlist:4buZT5WKFuhpgLI14UTj83',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7hKns5sIoqFjQHSAw3J2FF',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e022a81ff34f4346f9da93b32ff',
          'width': None,
        }),
      ]),
      'name': 'Little Bird',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '7hKns5sIoqFjQHSAw3J2FF',
      'public': True,
      'uri': 'spotify:playlist:7hKns5sIoqFjQHSAw3J2FF',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/30qKa2i4EbDYhvbrMhxAw0',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e022cdc4b4e178dabf49c002280ab67616d00001e024f87f14089217e3f70a5f39eab67616d00001e0279606c79fde418c0bc458abbab67616d00001e02ff186ce2c8d8cdfe4e65d710',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e022cdc4b4e178dabf49c002280ab67616d00001e024f87f14089217e3f70a5f39eab67616d00001e0279606c79fde418c0bc458abbab67616d00001e02ff186ce2c8d8cdfe4e65d710',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e022cdc4b4e178dabf49c002280ab67616d00001e024f87f14089217e3f70a5f39eab67616d00001e0279606c79fde418c0bc458abbab67616d00001e02ff186ce2c8d8cdfe4e65d710',
          'width': 60,
        }),
      ]),
      'name': 'this is the real shi',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '30qKa2i4EbDYhvbrMhxAw0',
      'public': True,
      'uri': 'spotify:playlist:30qKa2i4EbDYhvbrMhxAw0',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1ycFHQsEQy1LDyrPyZnGsG',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02b7f5f38651637f858e69f479',
          'width': None,
        }),
      ]),
      'name': 'Dance',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '1ycFHQsEQy1LDyrPyZnGsG',
      'public': True,
      'uri': 'spotify:playlist:1ycFHQsEQy1LDyrPyZnGsG',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4LuBtXVct4y7fKW7TxvxmC',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02e2b82066b6e43424650667bd',
          'width': None,
        }),
      ]),
      'name': 'Hot Chip – Made in the Dark',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '4LuBtXVct4y7fKW7TxvxmC',
      'public': True,
      'uri': 'spotify:playlist:4LuBtXVct4y7fKW7TxvxmC',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7q4Qgg67nbQxURn8CK6SxJ',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e023e6139ca94ae5e3d6c3c4818ab67616d00001e024b54c6f083e52b1f83d761afab67616d00001e02746602eeb55e4816bcab30feab67616d00001e02e8ea46a9ca2a56ea60f79152',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e023e6139ca94ae5e3d6c3c4818ab67616d00001e024b54c6f083e52b1f83d761afab67616d00001e02746602eeb55e4816bcab30feab67616d00001e02e8ea46a9ca2a56ea60f79152',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e023e6139ca94ae5e3d6c3c4818ab67616d00001e024b54c6f083e52b1f83d761afab67616d00001e02746602eeb55e4816bcab30feab67616d00001e02e8ea46a9ca2a56ea60f79152',
          'width': 60,
        }),
      ]),
      'name': 'wutangtastic',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '7q4Qgg67nbQxURn8CK6SxJ',
      'public': True,
      'uri': 'spotify:playlist:7q4Qgg67nbQxURn8CK6SxJ',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2EYCsp3uvM2GYuhSpnTWCL',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02828cfb835d229a32720bc6afab67616d00001e028688e410538bc27972791f4cab67616d00001e02c0f16d3c653999907e74e5baab67616d00001e02f05438406a5201bb8cedba3b',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02828cfb835d229a32720bc6afab67616d00001e028688e410538bc27972791f4cab67616d00001e02c0f16d3c653999907e74e5baab67616d00001e02f05438406a5201bb8cedba3b',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02828cfb835d229a32720bc6afab67616d00001e028688e410538bc27972791f4cab67616d00001e02c0f16d3c653999907e74e5baab67616d00001e02f05438406a5201bb8cedba3b',
          'width': 60,
        }),
      ]),
      'name': 'Poison (Remastered)',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '2EYCsp3uvM2GYuhSpnTWCL',
      'public': True,
      'uri': 'spotify:playlist:2EYCsp3uvM2GYuhSpnTWCL',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6NPlWibAzOTmBl4vVTk3ce',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02d1d06d587afd9243ba7a4cd8',
          'width': None,
        }),
      ]),
      'name': 'The Stone Roses – The Stone Roses',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '6NPlWibAzOTmBl4vVTk3ce',
      'public': True,
      'uri': 'spotify:playlist:6NPlWibAzOTmBl4vVTk3ce',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/32x6m7Tkh7stmqBUFMSJAg',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02730ed5d84d1d98c4d16ed47e',
          'width': None,
        }),
      ]),
      'name': 'Clark',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '32x6m7Tkh7stmqBUFMSJAg',
      'public': True,
      'uri': 'spotify:playlist:32x6m7Tkh7stmqBUFMSJAg',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0HQPDWVwnZOgAPKYpb22Oa',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02e8ea46a9ca2a56ea60f79152',
          'width': None,
        }),
      ]),
      'name': 'Down In Mexico',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '0HQPDWVwnZOgAPKYpb22Oa',
      'public': True,
      'uri': 'spotify:playlist:0HQPDWVwnZOgAPKYpb22Oa',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5uLiqU8UnZZMexCQ7aX5Av',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02e55e182ab6209a335a5cfacb',
          'width': None,
        }),
      ]),
      'name': 'spotify:user:jamesds:playlist:3MVqxQY9orcSGiTxsiCR9l',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '5uLiqU8UnZZMexCQ7aX5Av',
      'public': True,
      'uri': 'spotify:playlist:5uLiqU8UnZZMexCQ7aX5Av',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1ntWxtDOHfK4e529dwSW19',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e020947f8018fbb25c91d7c7525',
          'width': None,
        }),
      ]),
      'name': 'Can-Can From Orpheus In The Underworld',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '1ntWxtDOHfK4e529dwSW19',
      'public': True,
      'uri': 'spotify:playlist:1ntWxtDOHfK4e529dwSW19',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4sPehjI8DC6jffWbu7N2J3',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02a511f69870fa68e7ba78c099',
          'width': None,
        }),
      ]),
      'name': 'I Know You Want Me - Radio Edit Cold',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '4sPehjI8DC6jffWbu7N2J3',
      'public': True,
      'uri': 'spotify:playlist:4sPehjI8DC6jffWbu7N2J3',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/47u5ZfJ5EhJp9SKfPnSVXl',
      }),
      'images': list([
      ]),
      'name': '-',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '47u5ZfJ5EhJp9SKfPnSVXl',
      'public': True,
      'uri': 'spotify:playlist:47u5ZfJ5EhJp9SKfPnSVXl',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7jY1F22qFIEYzPEncPHdci',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02a7d400b4159f7cfc0c9ccae7',
          'width': None,
        }),
      ]),
      'name': 'pineapple',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '7jY1F22qFIEYzPEncPHdci',
      'public': True,
      'uri': 'spotify:playlist:7jY1F22qFIEYzPEncPHdci',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7ulnJeIjwdYXl9ZwmQWx1X',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0238217b2b2873090ab46fe0c6ab67616d00001e02599dfe976032830e5ec68945ab67616d00001e02d1bac93adf4492db2e6ff9f8ab67616d00001e02e9eb91ae8241234cb7aaaa4c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0238217b2b2873090ab46fe0c6ab67616d00001e02599dfe976032830e5ec68945ab67616d00001e02d1bac93adf4492db2e6ff9f8ab67616d00001e02e9eb91ae8241234cb7aaaa4c',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0238217b2b2873090ab46fe0c6ab67616d00001e02599dfe976032830e5ec68945ab67616d00001e02d1bac93adf4492db2e6ff9f8ab67616d00001e02e9eb91ae8241234cb7aaaa4c',
          'width': 60,
        }),
      ]),
      'name': 'Mostafa',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '7ulnJeIjwdYXl9ZwmQWx1X',
      'public': True,
      'uri': 'spotify:playlist:7ulnJeIjwdYXl9ZwmQWx1X',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5wnFYJsx0Kh4aIRdfpyYK5',
      }),
      'images': list([
      ]),
      'name': 'Bäst!',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '5wnFYJsx0Kh4aIRdfpyYK5',
      'public': True,
      'uri': 'spotify:playlist:5wnFYJsx0Kh4aIRdfpyYK5',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3f1xEfhUOtolv3leBeLFjt',
      }),
      'images': list([
      ]),
      'name': 'Träning',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '3f1xEfhUOtolv3leBeLFjt',
      'public': True,
      'uri': 'spotify:playlist:3f1xEfhUOtolv3leBeLFjt',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3OMEP4nmg7BhxHiIkWG6QE',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e02fec1b815bb3c50a64a90fd10',
          'width': None,
        }),
      ]),
      'name': 'vadim vs jigga',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '3OMEP4nmg7BhxHiIkWG6QE',
      'public': True,
      'uri': 'spotify:playlist:3OMEP4nmg7BhxHiIkWG6QE',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6zVS95BwB86w9dTG7ItO6E',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e021a26e142095e1c7ba5015218',
          'width': None,
        }),
      ]),
      'name': 'A Man From Argentina',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '6zVS95BwB86w9dTG7ItO6E',
      'public': True,
      'uri': 'spotify:playlist:6zVS95BwB86w9dTG7ItO6E',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5ziOTIewSR9pfiLgd96ZTf',
      }),
      'images': list([
      ]),
      'name': 'asd',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '5ziOTIewSR9pfiLgd96ZTf',
      'public': True,
      'uri': 'spotify:playlist:5ziOTIewSR9pfiLgd96ZTf',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4JUoTcdkgYS8KSCBb5GPCe',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02188099f301c32148ab07a557ab67616d00001e029700390e9c33c62cfcd915ceab67616d00001e02db7edd97763bd68d265f432eab67616d00001e02fec1b815bb3c50a64a90fd10',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02188099f301c32148ab07a557ab67616d00001e029700390e9c33c62cfcd915ceab67616d00001e02db7edd97763bd68d265f432eab67616d00001e02fec1b815bb3c50a64a90fd10',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02188099f301c32148ab07a557ab67616d00001e029700390e9c33c62cfcd915ceab67616d00001e02db7edd97763bd68d265f432eab67616d00001e02fec1b815bb3c50a64a90fd10',
          'width': 60,
        }),
      ]),
      'name': 'saturday',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '4JUoTcdkgYS8KSCBb5GPCe',
      'public': True,
      'uri': 'spotify:playlist:4JUoTcdkgYS8KSCBb5GPCe',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2HXTsgk72ydbN7XLZpIK4R',
      }),
      'images': list([
      ]),
      'name': 'sad',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '2HXTsgk72ydbN7XLZpIK4R',
      'public': True,
      'uri': 'spotify:playlist:2HXTsgk72ydbN7XLZpIK4R',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3gRWqRUsL6iokkSVsls518',
      }),
      'images': list([
      ]),
      'name': 'Tom spellista',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '3gRWqRUsL6iokkSVsls518',
      'public': True,
      'uri': 'spotify:playlist:3gRWqRUsL6iokkSVsls518',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6LFapHF3M01mY4mfeSckru',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e027f69c9b102d628bcfbf68ef8',
          'width': None,
        }),
      ]),
      'name': 'The Twilight Zone',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '6LFapHF3M01mY4mfeSckru',
      'public': True,
      'uri': 'spotify:playlist:6LFapHF3M01mY4mfeSckru',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4rau8iRVYD6wdzcJm2nkkI',
      }),
      'images': list([
      ]),
      'name': 'iPod management',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '4rau8iRVYD6wdzcJm2nkkI',
      'public': True,
      'uri': 'spotify:playlist:4rau8iRVYD6wdzcJm2nkkI',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3Tvcf1N8s4KL7etqpFxcIb',
      }),
      'images': list([
      ]),
      'name': 'Test list',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '3Tvcf1N8s4KL7etqpFxcIb',
      'public': True,
      'uri': 'spotify:playlist:3Tvcf1N8s4KL7etqpFxcIb',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6mNzfuOGykfZWdVU7ujqsk',
      }),
      'images': list([
      ]),
      'name': 'Golden Years [Soundtrack Version]',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '6mNzfuOGykfZWdVU7ujqsk',
      'public': True,
      'uri': 'spotify:playlist:6mNzfuOGykfZWdVU7ujqsk',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3yUqbmlNjdqYDAviSwv0Gg',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e024152eb1f853ff285508aca35ab67616d00001e0287e51905aaafd4b2e46e9121ab67616d00001e02d61b1aba42e5583551eaeeacab67616d00001e02e59861190fc754988c0c4392',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e024152eb1f853ff285508aca35ab67616d00001e0287e51905aaafd4b2e46e9121ab67616d00001e02d61b1aba42e5583551eaeeacab67616d00001e02e59861190fc754988c0c4392',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e024152eb1f853ff285508aca35ab67616d00001e0287e51905aaafd4b2e46e9121ab67616d00001e02d61b1aba42e5583551eaeeacab67616d00001e02e59861190fc754988c0c4392',
          'width': 60,
        }),
      ]),
      'name': 'BÄSTA LÅTARNA.exe',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '3yUqbmlNjdqYDAviSwv0Gg',
      'public': True,
      'uri': 'spotify:playlist:3yUqbmlNjdqYDAviSwv0Gg',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/347Nk3N6F8QgQuaIEtcYVI',
      }),
      'images': list([
      ]),
      'name': 'bajs',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '347Nk3N6F8QgQuaIEtcYVI',
      'public': True,
      'uri': 'spotify:playlist:347Nk3N6F8QgQuaIEtcYVI',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7uhdePGKRSRKm2QPaU0uSP',
      }),
      'images': list([
      ]),
      'name': 'fredagar',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '7uhdePGKRSRKm2QPaU0uSP',
      'public': True,
      'uri': 'spotify:playlist:7uhdePGKRSRKm2QPaU0uSP',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2i5sGOD9e96p2PpmkXYhDd',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02293e8055dd8814fcdf4742f7ab67616d00001e0259211e56a493ac4509457babab67616d00001e02b6d4566db0d12894a1a3b7a2ab67616d00001e02e2f039481babe23658fc719a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02293e8055dd8814fcdf4742f7ab67616d00001e0259211e56a493ac4509457babab67616d00001e02b6d4566db0d12894a1a3b7a2ab67616d00001e02e2f039481babe23658fc719a',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02293e8055dd8814fcdf4742f7ab67616d00001e0259211e56a493ac4509457babab67616d00001e02b6d4566db0d12894a1a3b7a2ab67616d00001e02e2f039481babe23658fc719a',
          'width': 60,
        }),
      ]),
      'name': 'bara warner',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '2i5sGOD9e96p2PpmkXYhDd',
      'public': True,
      'uri': 'spotify:playlist:2i5sGOD9e96p2PpmkXYhDd',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/4CHtsKuGmoVYC2JCkHAMBs',
      }),
      'images': list([
      ]),
      'name': 'Spelmusik',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '4CHtsKuGmoVYC2JCkHAMBs',
      'public': True,
      'uri': 'spotify:playlist:4CHtsKuGmoVYC2JCkHAMBs',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/371DcQ6pwFUdQPKUK6b9Gy',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0205c7a2f4acca8f1dd00683f0ab67616d00001e020fbb5046ac2211a4aab5ecfaab67616d00001e0286b0c9728ad3ed338eaeea79ab67616d00001e02de1d3e2a7ea73430c2a77555',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0205c7a2f4acca8f1dd00683f0ab67616d00001e020fbb5046ac2211a4aab5ecfaab67616d00001e0286b0c9728ad3ed338eaeea79ab67616d00001e02de1d3e2a7ea73430c2a77555',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0205c7a2f4acca8f1dd00683f0ab67616d00001e020fbb5046ac2211a4aab5ecfaab67616d00001e0286b0c9728ad3ed338eaeea79ab67616d00001e02de1d3e2a7ea73430c2a77555',
          'width': 60,
        }),
      ]),
      'name': 'Lör',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '371DcQ6pwFUdQPKUK6b9Gy',
      'public': True,
      'uri': 'spotify:playlist:371DcQ6pwFUdQPKUK6b9Gy',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/28ZHPQdzIWH5Gjo9xrcnof',
      }),
      'images': list([
      ]),
      'name': 'Matchpuls Fotboll 2010-05-25 18:00 - Del 3',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '28ZHPQdzIWH5Gjo9xrcnof',
      'public': True,
      'uri': 'spotify:playlist:28ZHPQdzIWH5Gjo9xrcnof',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5Q5etdH0vcI1f6rs4wlMnp',
      }),
      'images': list([
      ]),
      'name': 'Luddes lokala filer',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '5Q5etdH0vcI1f6rs4wlMnp',
      'public': True,
      'uri': 'spotify:playlist:5Q5etdH0vcI1f6rs4wlMnp',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5vlB64Tw6f6nSq02csVPRB',
      }),
      'images': list([
      ]),
      'name': 'The Beatles',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '5vlB64Tw6f6nSq02csVPRB',
      'public': True,
      'uri': 'spotify:playlist:5vlB64Tw6f6nSq02csVPRB',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/5DMhpzQw07N9CxiWxsnZbC',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e024d08fc99eff4ed52dfce91faab67616d00001e02775a6bee6c704ec29aec00f4ab67616d00001e02b0c0201a8796d8a536253a61ab67616d00001e02fd4de9a55521ecf4d768f8f6',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e024d08fc99eff4ed52dfce91faab67616d00001e02775a6bee6c704ec29aec00f4ab67616d00001e02b0c0201a8796d8a536253a61ab67616d00001e02fd4de9a55521ecf4d768f8f6',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e024d08fc99eff4ed52dfce91faab67616d00001e02775a6bee6c704ec29aec00f4ab67616d00001e02b0c0201a8796d8a536253a61ab67616d00001e02fd4de9a55521ecf4d768f8f6',
          'width': 60,
        }),
      ]),
      'name': 'Sparkling Thursday',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '5DMhpzQw07N9CxiWxsnZbC',
      'public': True,
      'uri': 'spotify:playlist:5DMhpzQw07N9CxiWxsnZbC',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/40owuDG2UXz44jNpxcOnHy',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0286b9c2836a00b67081e787a1ab67616d00001e0297d4015428c1ae8409236f69ab67616d00001e02b86f9276199af632c42a90ccab67616d00001e02d7c64e1270057cd9c22556d5',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0286b9c2836a00b67081e787a1ab67616d00001e0297d4015428c1ae8409236f69ab67616d00001e02b86f9276199af632c42a90ccab67616d00001e02d7c64e1270057cd9c22556d5',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0286b9c2836a00b67081e787a1ab67616d00001e0297d4015428c1ae8409236f69ab67616d00001e02b86f9276199af632c42a90ccab67616d00001e02d7c64e1270057cd9c22556d5',
          'width': 60,
        }),
      ]),
      'name': 'New playlist 2',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '40owuDG2UXz44jNpxcOnHy',
      'public': True,
      'uri': 'spotify:playlist:40owuDG2UXz44jNpxcOnHy',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0FcxzfoIXA6fpbP8rkqK5V',
      }),
      'images': list([
      ]),
      'name': 'regnbågstisdag',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '0FcxzfoIXA6fpbP8rkqK5V',
      'public': True,
      'uri': 'spotify:playlist:0FcxzfoIXA6fpbP8rkqK5V',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3fsBfb9u0zXOK6JMEkyzEQ',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e0232416982d2ea14bc8c2fe852',
          'width': None,
        }),
      ]),
      'name': 'Irina',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '3fsBfb9u0zXOK6JMEkyzEQ',
      'public': True,
      'uri': 'spotify:playlist:3fsBfb9u0zXOK6JMEkyzEQ',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/02alN0gNaeIYe0k5D7rsrl',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e021bf11700ed63196de26563abab67616d00001e021ffe5d4aa25c7bd1b1fc4847ab67616d00001e0250cb0dcd257aea8ae4e44c85ab67616d00001e02f631e275b1f65ce108977e4e',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e021bf11700ed63196de26563abab67616d00001e021ffe5d4aa25c7bd1b1fc4847ab67616d00001e0250cb0dcd257aea8ae4e44c85ab67616d00001e02f631e275b1f65ce108977e4e',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e021bf11700ed63196de26563abab67616d00001e021ffe5d4aa25c7bd1b1fc4847ab67616d00001e0250cb0dcd257aea8ae4e44c85ab67616d00001e02f631e275b1f65ce108977e4e',
          'width': 60,
        }),
      ]),
      'name': '010101',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '02alN0gNaeIYe0k5D7rsrl',
      'public': True,
      'uri': 'spotify:playlist:02alN0gNaeIYe0k5D7rsrl',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2Q8gqoLDDA4duY4OUFr7Wk',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02c44aa6bac605e42c00234e87ab67616d00001e02cdac19bbaee5cc123edcc26fab67616d00001e02f3aa0e6ca22a382007f61e4dab67616d00001e02f73c1afa6079c9bfb60bd6bc',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02c44aa6bac605e42c00234e87ab67616d00001e02cdac19bbaee5cc123edcc26fab67616d00001e02f3aa0e6ca22a382007f61e4dab67616d00001e02f73c1afa6079c9bfb60bd6bc',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02c44aa6bac605e42c00234e87ab67616d00001e02cdac19bbaee5cc123edcc26fab67616d00001e02f3aa0e6ca22a382007f61e4dab67616d00001e02f73c1afa6079c9bfb60bd6bc',
          'width': 60,
        }),
      ]),
      'name': 'que',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'nikke',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/nikke',
        }),
        'href': 'https://api.spotify.com/v1/users/nikke',
        'object_type': 'user',
        'owner_id': 'nikke',
        'uri': 'spotify:user:nikke',
      }),
      'playlist_id': '2Q8gqoLDDA4duY4OUFr7Wk',
      'public': True,
      'uri': 'spotify:playlist:2Q8gqoLDDA4duY4OUFr7Wk',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3EkXOXsTGiDP5VKKisVWy0',
      }),
      'images': list([
      ]),
      'name': 'Anderssons local files',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '3EkXOXsTGiDP5VKKisVWy0',
      'public': True,
      'uri': 'spotify:playlist:3EkXOXsTGiDP5VKKisVWy0',
    }),
    dict({
      'collaborative': False,
      'description': "Hello America. Spotify here. It’s great to know that so many of our US friends are excited to use Spotify. Our staff have made you this playlist as a way of saying 'hey, good to see you!'",
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0yj2GcyN8GkoJ1EZ9ugyl1',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0201ce44a09e4b95fce0ea3a86ab67616d00001e0217e1907923e91181f38290acab67616d00001e028334ce0c1d48edaa184112b2ab67616d00001e02b81d66d1416afa139d12767b',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0201ce44a09e4b95fce0ea3a86ab67616d00001e0217e1907923e91181f38290acab67616d00001e028334ce0c1d48edaa184112b2ab67616d00001e02b81d66d1416afa139d12767b',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0201ce44a09e4b95fce0ea3a86ab67616d00001e0217e1907923e91181f38290acab67616d00001e028334ce0c1d48edaa184112b2ab67616d00001e02b81d66d1416afa139d12767b',
          'width': 60,
        }),
      ]),
      'name': 'Hello America. Spotify here.',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Spotify',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/spotify',
        }),
        'href': 'https://api.spotify.com/v1/users/spotify',
        'object_type': 'user',
        'owner_id': 'spotify',
        'uri': 'spotify:user:spotify',
      }),
      'playlist_id': '0yj2GcyN8GkoJ1EZ9ugyl1',
      'public': True,
      'uri': 'spotify:playlist:0yj2GcyN8GkoJ1EZ9ugyl1',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7ryTdnz3hVBC87NwIlNaEh',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0252e0dcf6bd926c129c092648ab67616d00001e026d8578f3fc52a97c6560e49aab67616d00001e02765b5b2e04bbe8443952d022ab67616d00001e02980caf4dd525a15f08f8cb87',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0252e0dcf6bd926c129c092648ab67616d00001e026d8578f3fc52a97c6560e49aab67616d00001e02765b5b2e04bbe8443952d022ab67616d00001e02980caf4dd525a15f08f8cb87',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0252e0dcf6bd926c129c092648ab67616d00001e026d8578f3fc52a97c6560e49aab67616d00001e02765b5b2e04bbe8443952d022ab67616d00001e02980caf4dd525a15f08f8cb87',
          'width': 60,
        }),
      ]),
      'name': 'VOXPOP - by ylla',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Ylla Von Malmborg',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/ylla',
        }),
        'href': 'https://api.spotify.com/v1/users/ylla',
        'object_type': 'user',
        'owner_id': 'ylla',
        'uri': 'spotify:user:ylla',
      }),
      'playlist_id': '7ryTdnz3hVBC87NwIlNaEh',
      'public': True,
      'uri': 'spotify:playlist:7ryTdnz3hVBC87NwIlNaEh',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/6dn72TSLbp6JoYSCHi7Sdm',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e021323db3fd863ab1b9c668504ab67616d00001e024ca4012b3749d3f4d6e31114ab67616d00001e027a7eef2276e831469d2a97bbab67616d00001e02b047ef469c70ec511bf876f6',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e021323db3fd863ab1b9c668504ab67616d00001e024ca4012b3749d3f4d6e31114ab67616d00001e027a7eef2276e831469d2a97bbab67616d00001e02b047ef469c70ec511bf876f6',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e021323db3fd863ab1b9c668504ab67616d00001e024ca4012b3749d3f4d6e31114ab67616d00001e027a7eef2276e831469d2a97bbab67616d00001e02b047ef469c70ec511bf876f6',
          'width': 60,
        }),
      ]),
      'name': "smooth'",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '6dn72TSLbp6JoYSCHi7Sdm',
      'public': True,
      'uri': 'spotify:playlist:6dn72TSLbp6JoYSCHi7Sdm',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0dq7cNDG42xYx85RZPola8',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e029b19c107109de740bad72df5',
          'width': None,
        }),
      ]),
      'name': 'Dr. Dre – 2001',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '0dq7cNDG42xYx85RZPola8',
      'public': True,
      'uri': 'spotify:playlist:0dq7cNDG42xYx85RZPola8',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/11ui9npCCW5sOYqSN7Glnv',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e022868c4713a3912fd476b42f1ab67616d00001e026b75ccb4474439cbede6623fab67616d00001e02d82cce4af49ab5566ccf88e7ab67616d00001e02e6a0f986b4bb04250cf1d881',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e022868c4713a3912fd476b42f1ab67616d00001e026b75ccb4474439cbede6623fab67616d00001e02d82cce4af49ab5566ccf88e7ab67616d00001e02e6a0f986b4bb04250cf1d881',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e022868c4713a3912fd476b42f1ab67616d00001e026b75ccb4474439cbede6623fab67616d00001e02d82cce4af49ab5566ccf88e7ab67616d00001e02e6a0f986b4bb04250cf1d881',
          'width': 60,
        }),
      ]),
      'name': 'ludde_test',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '11ui9npCCW5sOYqSN7Glnv',
      'public': True,
      'uri': 'spotify:playlist:11ui9npCCW5sOYqSN7Glnv',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0AqCsfE9B9pKCRtXR7Qcpr',
      }),
      'images': list([
      ]),
      'name': 'Techno Chicken',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '0AqCsfE9B9pKCRtXR7Qcpr',
      'public': True,
      'uri': 'spotify:playlist:0AqCsfE9B9pKCRtXR7Qcpr',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7pnXgdhX1F4QUcwHSku2Vk',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://i.scdn.co/image/ab67616d00001e026400fab74f28e90759ac8815',
          'width': None,
        }),
      ]),
      'name': 'Air – Talkie Walkie',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'smedjan',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/smedjan',
        }),
        'href': 'https://api.spotify.com/v1/users/smedjan',
        'object_type': 'user',
        'owner_id': 'smedjan',
        'uri': 'spotify:user:smedjan',
      }),
      'playlist_id': '7pnXgdhX1F4QUcwHSku2Vk',
      'public': True,
      'uri': 'spotify:playlist:7pnXgdhX1F4QUcwHSku2Vk',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1PDwG4hvy5n2pBf93A8R3r',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e025aa3dcf05b7ce449066b4b06ab67616d00001e0260bf4d4b20eb93075a97cd20ab67616d00001e02a4d5093e91d6b3e7a42eda67ab67616d00001e02bb1f0d801f4c9203f2f4d698',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e025aa3dcf05b7ce449066b4b06ab67616d00001e0260bf4d4b20eb93075a97cd20ab67616d00001e02a4d5093e91d6b3e7a42eda67ab67616d00001e02bb1f0d801f4c9203f2f4d698',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e025aa3dcf05b7ce449066b4b06ab67616d00001e0260bf4d4b20eb93075a97cd20ab67616d00001e02a4d5093e91d6b3e7a42eda67ab67616d00001e02bb1f0d801f4c9203f2f4d698',
          'width': 60,
        }),
      ]),
      'name': 'Mattias recommends',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Mattias',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/mattias',
        }),
        'href': 'https://api.spotify.com/v1/users/mattias',
        'object_type': 'user',
        'owner_id': 'mattias',
        'uri': 'spotify:user:mattias',
      }),
      'playlist_id': '1PDwG4hvy5n2pBf93A8R3r',
      'public': True,
      'uri': 'spotify:playlist:1PDwG4hvy5n2pBf93A8R3r',
    }),
    dict({
      'collaborative': False,
      'description': 'most likely stolen from your playlist',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2UuoB7p8ZdlgQT8upXwoMl',
      }),
      'images': list([
        dict({
          'height': None,
          'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da846cb1cb6370eb30357eee6760',
          'width': None,
        }),
      ]),
      'name': 'brokemogul radio',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Scott Vener',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/brokemogul',
        }),
        'href': 'https://api.spotify.com/v1/users/brokemogul',
        'object_type': 'user',
        'owner_id': 'brokemogul',
        'uri': 'spotify:user:brokemogul',
      }),
      'playlist_id': '2UuoB7p8ZdlgQT8upXwoMl',
      'public': True,
      'uri': 'spotify:playlist:2UuoB7p8ZdlgQT8upXwoMl',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/0IMR2RPbwQQKrxCRYUY1o3',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e024e837b06165d5d397e235e5bab67616d00001e026d9f246dfd32200ea17b557bab67616d00001e028b32b139981e79f2ebe005ebab67616d00001e02b4c5982e1b92f97a126fc18c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e024e837b06165d5d397e235e5bab67616d00001e026d9f246dfd32200ea17b557bab67616d00001e028b32b139981e79f2ebe005ebab67616d00001e02b4c5982e1b92f97a126fc18c',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e024e837b06165d5d397e235e5bab67616d00001e026d9f246dfd32200ea17b557bab67616d00001e028b32b139981e79f2ebe005ebab67616d00001e02b4c5982e1b92f97a126fc18c',
          'width': 60,
        }),
      ]),
      'name': 'merdalamod',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Pierre Carrier',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/gcarrier',
        }),
        'href': 'https://api.spotify.com/v1/users/gcarrier',
        'object_type': 'user',
        'owner_id': 'gcarrier',
        'uri': 'spotify:user:gcarrier',
      }),
      'playlist_id': '0IMR2RPbwQQKrxCRYUY1o3',
      'public': True,
      'uri': 'spotify:playlist:0IMR2RPbwQQKrxCRYUY1o3',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3NYcibK14Rv9hJ3vFEYmWp',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e022b40db2ffe46dae2f8e1f899ab67616d00001e02773a9c3b61b0213bcc6aecedab67616d00001e029c5fa8ff4cc2f973f45e48e0ab67616d00001e02b64d9c842939150eebb1c45b',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e022b40db2ffe46dae2f8e1f899ab67616d00001e02773a9c3b61b0213bcc6aecedab67616d00001e029c5fa8ff4cc2f973f45e48e0ab67616d00001e02b64d9c842939150eebb1c45b',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e022b40db2ffe46dae2f8e1f899ab67616d00001e02773a9c3b61b0213bcc6aecedab67616d00001e029c5fa8ff4cc2f973f45e48e0ab67616d00001e02b64d9c842939150eebb1c45b',
          'width': 60,
        }),
      ]),
      'name': 'guitarsongs',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Daniel Ek',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/daniel',
        }),
        'href': 'https://api.spotify.com/v1/users/daniel',
        'object_type': 'user',
        'owner_id': 'daniel',
        'uri': 'spotify:user:daniel',
      }),
      'playlist_id': '3NYcibK14Rv9hJ3vFEYmWp',
      'public': True,
      'uri': 'spotify:playlist:3NYcibK14Rv9hJ3vFEYmWp',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2t5rxiBSC1JGfiZfQW6MmC',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0299cdf1500395fe61d407f4deab67616d00001e02a96ec7834e225bf4817d119cab67616d00001e02ae427f91828f26f16e62a6a1ab67616d00001e02d389877b9ee335f5c5a2fbdb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0299cdf1500395fe61d407f4deab67616d00001e02a96ec7834e225bf4817d119cab67616d00001e02ae427f91828f26f16e62a6a1ab67616d00001e02d389877b9ee335f5c5a2fbdb',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0299cdf1500395fe61d407f4deab67616d00001e02a96ec7834e225bf4817d119cab67616d00001e02ae427f91828f26f16e62a6a1ab67616d00001e02d389877b9ee335f5c5a2fbdb',
          'width': 60,
        }),
      ]),
      'name': 'Sweet Swedish',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Daniel Ek',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/daniel',
        }),
        'href': 'https://api.spotify.com/v1/users/daniel',
        'object_type': 'user',
        'owner_id': 'daniel',
        'uri': 'spotify:user:daniel',
      }),
      'playlist_id': '2t5rxiBSC1JGfiZfQW6MmC',
      'public': True,
      'uri': 'spotify:playlist:2t5rxiBSC1JGfiZfQW6MmC',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/780WrURGBymglb9YcJwmkz',
      }),
      'images': list([
      ]),
      'name': 'Sommar i P1 - Sveriges Radio – Sommar med Daniel Adams-Ray 9 augusti 2011',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Daniel Ek',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/daniel',
        }),
        'href': 'https://api.spotify.com/v1/users/daniel',
        'object_type': 'user',
        'owner_id': 'daniel',
        'uri': 'spotify:user:daniel',
      }),
      'playlist_id': '780WrURGBymglb9YcJwmkz',
      'public': True,
      'uri': 'spotify:playlist:780WrURGBymglb9YcJwmkz',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/59WSqPcX9mTVrUFdpDrhph',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e022c98891a92efa275093bb7d5ab67616d00001e02455d7ca79bfb1bfc01eac9dbab67616d00001e02619f60dd041fcfffbfc2263cab67616d00001e0262b513fa0b5fdef8f6a5e898',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e022c98891a92efa275093bb7d5ab67616d00001e02455d7ca79bfb1bfc01eac9dbab67616d00001e02619f60dd041fcfffbfc2263cab67616d00001e0262b513fa0b5fdef8f6a5e898',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e022c98891a92efa275093bb7d5ab67616d00001e02455d7ca79bfb1bfc01eac9dbab67616d00001e02619f60dd041fcfffbfc2263cab67616d00001e0262b513fa0b5fdef8f6a5e898',
          'width': 60,
        }),
      ]),
      'name': 'Adjö',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Daniel Ek',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/daniel',
        }),
        'href': 'https://api.spotify.com/v1/users/daniel',
        'object_type': 'user',
        'owner_id': 'daniel',
        'uri': 'spotify:user:daniel',
      }),
      'playlist_id': '59WSqPcX9mTVrUFdpDrhph',
      'public': True,
      'uri': 'spotify:playlist:59WSqPcX9mTVrUFdpDrhph',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2PDLDvW0yaOSd1JF6z7JrC',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e024beb66f56871bbde37f6892dab67616d00001e02588a832e3ff9c8f337daa4f1ab67616d00001e02a0681f41944a502c8f9ae973ab67616d00001e02eeeb755130868683e01a0097',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e024beb66f56871bbde37f6892dab67616d00001e02588a832e3ff9c8f337daa4f1ab67616d00001e02a0681f41944a502c8f9ae973ab67616d00001e02eeeb755130868683e01a0097',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e024beb66f56871bbde37f6892dab67616d00001e02588a832e3ff9c8f337daa4f1ab67616d00001e02a0681f41944a502c8f9ae973ab67616d00001e02eeeb755130868683e01a0097',
          'width': 60,
        }),
      ]),
      'name': "This isn't mainstream hiphop",
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Aron Levin',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/allacentrum',
        }),
        'href': 'https://api.spotify.com/v1/users/allacentrum',
        'object_type': 'user',
        'owner_id': 'allacentrum',
        'uri': 'spotify:user:allacentrum',
      }),
      'playlist_id': '2PDLDvW0yaOSd1JF6z7JrC',
      'public': True,
      'uri': 'spotify:playlist:2PDLDvW0yaOSd1JF6z7JrC',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/1x2qISkYZCzO7nqCihJphT',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0223ce0637df7ead27b2d31590ab67616d00001e0281b977682d6235fdca1b85daab67616d00001e029e884b7922a905cf2df7db50ab67616d00001e02d0b0110fdfcf5e363db97687',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0223ce0637df7ead27b2d31590ab67616d00001e0281b977682d6235fdca1b85daab67616d00001e029e884b7922a905cf2df7db50ab67616d00001e02d0b0110fdfcf5e363db97687',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0223ce0637df7ead27b2d31590ab67616d00001e0281b977682d6235fdca1b85daab67616d00001e029e884b7922a905cf2df7db50ab67616d00001e02d0b0110fdfcf5e363db97687',
          'width': 60,
        }),
      ]),
      'name': 'SpotON: Evidence',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Aron Levin',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/allacentrum',
        }),
        'href': 'https://api.spotify.com/v1/users/allacentrum',
        'object_type': 'user',
        'owner_id': 'allacentrum',
        'uri': 'spotify:user:allacentrum',
      }),
      'playlist_id': '1x2qISkYZCzO7nqCihJphT',
      'public': True,
      'uri': 'spotify:playlist:1x2qISkYZCzO7nqCihJphT',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/2yICyZyxaCjorY6wxhKCqx',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e0240eea368f4fb5f5ee6dcd9a8ab67616d00001e025034ef7aee00fd756756d90cab67616d00001e02c18cc9d6fcea1478b1257678ab67616d00001e02ed5ffaf4fbf618c94dd08db0',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e0240eea368f4fb5f5ee6dcd9a8ab67616d00001e025034ef7aee00fd756756d90cab67616d00001e02c18cc9d6fcea1478b1257678ab67616d00001e02ed5ffaf4fbf618c94dd08db0',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e0240eea368f4fb5f5ee6dcd9a8ab67616d00001e025034ef7aee00fd756756d90cab67616d00001e02c18cc9d6fcea1478b1257678ab67616d00001e02ed5ffaf4fbf618c94dd08db0',
          'width': 60,
        }),
      ]),
      'name': 'Songs from "Super 8"',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'migo',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/migo',
        }),
        'href': 'https://api.spotify.com/v1/users/migo',
        'object_type': 'user',
        'owner_id': 'migo',
        'uri': 'spotify:user:migo',
      }),
      'playlist_id': '2yICyZyxaCjorY6wxhKCqx',
      'public': True,
      'uri': 'spotify:playlist:2yICyZyxaCjorY6wxhKCqx',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/3vxotOnOGDlZXyzJPLFnm2',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e021e1ca90cd8fdbb0ac890a926ab67616d00001e028b04dacf186124a62bc667a7ab67616d00001e02ea1cf454ec02367d76573c4fab67616d00001e02f8553e18a11209d4becd0336',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e021e1ca90cd8fdbb0ac890a926ab67616d00001e028b04dacf186124a62bc667a7ab67616d00001e02ea1cf454ec02367d76573c4fab67616d00001e02f8553e18a11209d4becd0336',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e021e1ca90cd8fdbb0ac890a926ab67616d00001e028b04dacf186124a62bc667a7ab67616d00001e02ea1cf454ec02367d76573c4fab67616d00001e02f8553e18a11209d4becd0336',
          'width': 60,
        }),
      ]),
      'name': 'Hipster International',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Sean Parker',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/napstersean',
        }),
        'href': 'https://api.spotify.com/v1/users/napstersean',
        'object_type': 'user',
        'owner_id': 'napstersean',
        'uri': 'spotify:user:napstersean',
      }),
      'playlist_id': '3vxotOnOGDlZXyzJPLFnm2',
      'public': True,
      'uri': 'spotify:playlist:3vxotOnOGDlZXyzJPLFnm2',
    }),
    dict({
      'collaborative': False,
      'description': '',
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/playlist/7hHiS4TfO4isJ2cfhIxXkb',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://mosaic.scdn.co/640/ab67616d00001e02130dcab9b9d160b5d9352c78ab67616d00001e022350e31bc346a6c20e9de166ab67616d00001e02856ed7b94b0859b3e78a3deaab67616d00001e0295bf7f7dac7b61a95d47f07e',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://mosaic.scdn.co/300/ab67616d00001e02130dcab9b9d160b5d9352c78ab67616d00001e022350e31bc346a6c20e9de166ab67616d00001e02856ed7b94b0859b3e78a3deaab67616d00001e0295bf7f7dac7b61a95d47f07e',
          'width': 300,
        }),
        dict({
          'height': 60,
          'url': 'https://mosaic.scdn.co/60/ab67616d00001e02130dcab9b9d160b5d9352c78ab67616d00001e022350e31bc346a6c20e9de166ab67616d00001e02856ed7b94b0859b3e78a3deaab67616d00001e0295bf7f7dac7b61a95d47f07e',
          'width': 60,
        }),
      ]),
      'name': 'Dopest Rap Tracks of All Time',
      'object_type': 'playlist',
      'owner': dict({
        'display_name': 'Alex Norström',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/user/alegaa',
        }),
        'href': 'https://api.spotify.com/v1/users/alegaa',
        'object_type': 'user',
        'owner_id': 'alegaa',
        'uri': 'spotify:user:alegaa',
      }),
      'playlist_id': '7hHiS4TfO4isJ2cfhIxXkb',
      'public': True,
      'uri': 'spotify:playlist:7hHiS4TfO4isJ2cfhIxXkb',
    }),
  ])
# ---
# name: test_get_recently_played_tracks
  list([
    dict({
      'context': None,
      'played_at': datetime.datetime(2024, 10, 6, 18, 9, 18, 556000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '6Ab1VSoMD5fvlagOW2QDOJ',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '6emHCSoB4tJxTVXakbrpPz',
              'name': 'Karen O',
              'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
            }),
            dict({
              'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
              'name': 'Danger Mouse',
              'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273cdac047e7894fb56a0dfdcde',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02cdac047e7894fb56a0dfdcde',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851cdac047e7894fb56a0dfdcde',
              'width': 64,
            }),
          ]),
          'name': 'Super Breath',
          'release_date': '2024-07-24',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:6Ab1VSoMD5fvlagOW2QDOJ',
        }),
        'artists': list([
          dict({
            'artist_id': '6emHCSoB4tJxTVXakbrpPz',
            'name': 'Karen O',
            'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
          }),
          dict({
            'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
            'name': 'Danger Mouse',
            'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 211800,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/71dMjqJ8UJV700zYs5YZCh',
        }),
        'href': 'https://api.spotify.com/v1/tracks/71dMjqJ8UJV700zYs5YZCh',
        'is_local': False,
        'name': 'Super Breath',
        'track_id': '71dMjqJ8UJV700zYs5YZCh',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:71dMjqJ8UJV700zYs5YZCh',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 18, 5, 33, 902000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '6Ab1VSoMD5fvlagOW2QDOJ',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '6emHCSoB4tJxTVXakbrpPz',
              'name': 'Karen O',
              'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
            }),
            dict({
              'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
              'name': 'Danger Mouse',
              'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273cdac047e7894fb56a0dfdcde',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02cdac047e7894fb56a0dfdcde',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851cdac047e7894fb56a0dfdcde',
              'width': 64,
            }),
          ]),
          'name': 'Super Breath',
          'release_date': '2024-07-24',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:6Ab1VSoMD5fvlagOW2QDOJ',
        }),
        'artists': list([
          dict({
            'artist_id': '6emHCSoB4tJxTVXakbrpPz',
            'name': 'Karen O',
            'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
          }),
          dict({
            'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
            'name': 'Danger Mouse',
            'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 211800,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/71dMjqJ8UJV700zYs5YZCh',
        }),
        'href': 'https://api.spotify.com/v1/tracks/71dMjqJ8UJV700zYs5YZCh',
        'is_local': False,
        'name': 'Super Breath',
        'track_id': '71dMjqJ8UJV700zYs5YZCh',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:71dMjqJ8UJV700zYs5YZCh',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 18, 2, 0, 146000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '6Ab1VSoMD5fvlagOW2QDOJ',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '6emHCSoB4tJxTVXakbrpPz',
              'name': 'Karen O',
              'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
            }),
            dict({
              'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
              'name': 'Danger Mouse',
              'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273cdac047e7894fb56a0dfdcde',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02cdac047e7894fb56a0dfdcde',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851cdac047e7894fb56a0dfdcde',
              'width': 64,
            }),
          ]),
          'name': 'Super Breath',
          'release_date': '2024-07-24',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:6Ab1VSoMD5fvlagOW2QDOJ',
        }),
        'artists': list([
          dict({
            'artist_id': '6emHCSoB4tJxTVXakbrpPz',
            'name': 'Karen O',
            'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
          }),
          dict({
            'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
            'name': 'Danger Mouse',
            'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 211800,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/71dMjqJ8UJV700zYs5YZCh',
        }),
        'href': 'https://api.spotify.com/v1/tracks/71dMjqJ8UJV700zYs5YZCh',
        'is_local': False,
        'name': 'Super Breath',
        'track_id': '71dMjqJ8UJV700zYs5YZCh',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:71dMjqJ8UJV700zYs5YZCh',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 58, 21, 425000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '6Ab1VSoMD5fvlagOW2QDOJ',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '6emHCSoB4tJxTVXakbrpPz',
              'name': 'Karen O',
              'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
            }),
            dict({
              'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
              'name': 'Danger Mouse',
              'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273cdac047e7894fb56a0dfdcde',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02cdac047e7894fb56a0dfdcde',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851cdac047e7894fb56a0dfdcde',
              'width': 64,
            }),
          ]),
          'name': 'Super Breath',
          'release_date': '2024-07-24',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:6Ab1VSoMD5fvlagOW2QDOJ',
        }),
        'artists': list([
          dict({
            'artist_id': '6emHCSoB4tJxTVXakbrpPz',
            'name': 'Karen O',
            'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
          }),
          dict({
            'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
            'name': 'Danger Mouse',
            'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 211800,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/71dMjqJ8UJV700zYs5YZCh',
        }),
        'href': 'https://api.spotify.com/v1/tracks/71dMjqJ8UJV700zYs5YZCh',
        'is_local': False,
        'name': 'Super Breath',
        'track_id': '71dMjqJ8UJV700zYs5YZCh',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:71dMjqJ8UJV700zYs5YZCh',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 54, 39, 34000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '6Ab1VSoMD5fvlagOW2QDOJ',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '6emHCSoB4tJxTVXakbrpPz',
              'name': 'Karen O',
              'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
            }),
            dict({
              'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
              'name': 'Danger Mouse',
              'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273cdac047e7894fb56a0dfdcde',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02cdac047e7894fb56a0dfdcde',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851cdac047e7894fb56a0dfdcde',
              'width': 64,
            }),
          ]),
          'name': 'Super Breath',
          'release_date': '2024-07-24',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:6Ab1VSoMD5fvlagOW2QDOJ',
        }),
        'artists': list([
          dict({
            'artist_id': '6emHCSoB4tJxTVXakbrpPz',
            'name': 'Karen O',
            'uri': 'spotify:artist:6emHCSoB4tJxTVXakbrpPz',
          }),
          dict({
            'artist_id': '2dBj3prW7gP9bCCOIQeDUf',
            'name': 'Danger Mouse',
            'uri': 'spotify:artist:2dBj3prW7gP9bCCOIQeDUf',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 211800,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/71dMjqJ8UJV700zYs5YZCh',
        }),
        'href': 'https://api.spotify.com/v1/tracks/71dMjqJ8UJV700zYs5YZCh',
        'is_local': False,
        'name': 'Super Breath',
        'track_id': '71dMjqJ8UJV700zYs5YZCh',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:71dMjqJ8UJV700zYs5YZCh',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 51, 7, 248000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '5LASDBDtLLEt3QqVtgOoaM',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '0vTVU0KH0CVzijsoKGsTPl',
              'name': "Barry Can't Swim",
              'uri': 'spotify:artist:0vTVU0KH0CVzijsoKGsTPl',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27316bc57c40991e6d3267765ab',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0216bc57c40991e6d3267765ab',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485116bc57c40991e6d3267765ab',
              'width': 64,
            }),
          ]),
          'name': 'When Will We Land?',
          'release_date': '2023-10-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 11,
          'uri': 'spotify:album:5LASDBDtLLEt3QqVtgOoaM',
        }),
        'artists': list([
          dict({
            'artist_id': '0vTVU0KH0CVzijsoKGsTPl',
            'name': "Barry Can't Swim",
            'uri': 'spotify:artist:0vTVU0KH0CVzijsoKGsTPl',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 138951,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/3NZz7DWeVQesSOn6mO39F7',
        }),
        'href': 'https://api.spotify.com/v1/tracks/3NZz7DWeVQesSOn6mO39F7',
        'is_local': False,
        'name': 'How It Feels',
        'track_id': '3NZz7DWeVQesSOn6mO39F7',
        'track_number': 4,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:3NZz7DWeVQesSOn6mO39F7',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 48, 48, 298000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '27vIEhBrsAL30xLMS41ZyA',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '2D7akgJBXcsp8Y2FKdPJCh',
              'name': 'Jasper Tygner',
              'uri': 'spotify:artist:2D7akgJBXcsp8Y2FKdPJCh',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27344f6ff8137cffe1d614054ec',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0244f6ff8137cffe1d614054ec',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485144f6ff8137cffe1d614054ec',
              'width': 64,
            }),
          ]),
          'name': 'Things to Come',
          'release_date': '2024-07-05',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 4,
          'uri': 'spotify:album:27vIEhBrsAL30xLMS41ZyA',
        }),
        'artists': list([
          dict({
            'artist_id': '2D7akgJBXcsp8Y2FKdPJCh',
            'name': 'Jasper Tygner',
            'uri': 'spotify:artist:2D7akgJBXcsp8Y2FKdPJCh',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 163944,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/23DvufvHJAr0OUPfrB7g2J',
        }),
        'href': 'https://api.spotify.com/v1/tracks/23DvufvHJAr0OUPfrB7g2J',
        'is_local': False,
        'name': 'All I Need',
        'track_id': '23DvufvHJAr0OUPfrB7g2J',
        'track_number': 2,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:23DvufvHJAr0OUPfrB7g2J',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 46, 4, 386000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '1BuWrjAiFiHMHtCYHuUIKM',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '6zsJjoCtL1WByG0VsuFWzR',
              'name': 'BLOND:ISH',
              'uri': 'spotify:artist:6zsJjoCtL1WByG0VsuFWzR',
            }),
            dict({
              'artist_id': '5qMHOzLlXeOEjOncWYtRfZ',
              'name': 'Stevie Appleton',
              'uri': 'spotify:artist:5qMHOzLlXeOEjOncWYtRfZ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2736d31b666cc828a16d3d54612',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e026d31b666cc828a16d3d54612',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048516d31b666cc828a16d3d54612',
              'width': 64,
            }),
          ]),
          'name': 'Never Walk Alone',
          'release_date': '2024-08-02',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:1BuWrjAiFiHMHtCYHuUIKM',
        }),
        'artists': list([
          dict({
            'artist_id': '6zsJjoCtL1WByG0VsuFWzR',
            'name': 'BLOND:ISH',
            'uri': 'spotify:artist:6zsJjoCtL1WByG0VsuFWzR',
          }),
          dict({
            'artist_id': '5qMHOzLlXeOEjOncWYtRfZ',
            'name': 'Stevie Appleton',
            'uri': 'spotify:artist:5qMHOzLlXeOEjOncWYtRfZ',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 188360,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/4HB7ECLzrbgapiZyLlFbxz',
        }),
        'href': 'https://api.spotify.com/v1/tracks/4HB7ECLzrbgapiZyLlFbxz',
        'is_local': False,
        'name': 'Never Walk Alone',
        'track_id': '4HB7ECLzrbgapiZyLlFbxz',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:4HB7ECLzrbgapiZyLlFbxz',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 42, 56, 29000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '5sGYMMmqW6bcKWdmC7Jd2S',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '2kLa7JZu4Ijdz1Gle2khZh',
              'name': 'TSHA',
              'uri': 'spotify:artist:2kLa7JZu4Ijdz1Gle2khZh',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27307906cf33511dbe1b58f4872',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0207906cf33511dbe1b58f4872',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485107906cf33511dbe1b58f4872',
              'width': 64,
            }),
          ]),
          'name': 'Sad Girl',
          'release_date': '2024-09-27',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:5sGYMMmqW6bcKWdmC7Jd2S',
        }),
        'artists': list([
          dict({
            'artist_id': '2kLa7JZu4Ijdz1Gle2khZh',
            'name': 'TSHA',
            'uri': 'spotify:artist:2kLa7JZu4Ijdz1Gle2khZh',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 224606,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/3Xz2ZcQlQRA7rqbj7tYsL3',
        }),
        'href': 'https://api.spotify.com/v1/tracks/3Xz2ZcQlQRA7rqbj7tYsL3',
        'is_local': False,
        'name': 'In The Night',
        'track_id': '3Xz2ZcQlQRA7rqbj7tYsL3',
        'track_number': 3,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:3Xz2ZcQlQRA7rqbj7tYsL3',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 39, 11, 454000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '4nXpTQXjFGtB5n3vC76IBR',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '5PlfkPxwCpRRWQJBxCa0By',
              'name': 'HUGEL',
              'uri': 'spotify:artist:5PlfkPxwCpRRWQJBxCa0By',
            }),
            dict({
              'artist_id': '5fMUXHkw8R8eOP2RNVYEZX',
              'name': 'Diplo',
              'uri': 'spotify:artist:5fMUXHkw8R8eOP2RNVYEZX',
            }),
            dict({
              'artist_id': '5mU7ohKXRejACFS8eZIixp',
              'name': 'Malou',
              'uri': 'spotify:artist:5mU7ohKXRejACFS8eZIixp',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27388e0a2ae3b138aad267aae2b',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0288e0a2ae3b138aad267aae2b',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485188e0a2ae3b138aad267aae2b',
              'width': 64,
            }),
          ]),
          'name': 'Forever (feat. Malou & Yuna)',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:4nXpTQXjFGtB5n3vC76IBR',
        }),
        'artists': list([
          dict({
            'artist_id': '5PlfkPxwCpRRWQJBxCa0By',
            'name': 'HUGEL',
            'uri': 'spotify:artist:5PlfkPxwCpRRWQJBxCa0By',
          }),
          dict({
            'artist_id': '5fMUXHkw8R8eOP2RNVYEZX',
            'name': 'Diplo',
            'uri': 'spotify:artist:5fMUXHkw8R8eOP2RNVYEZX',
          }),
          dict({
            'artist_id': '5mU7ohKXRejACFS8eZIixp',
            'name': 'Malou',
            'uri': 'spotify:artist:5mU7ohKXRejACFS8eZIixp',
          }),
          dict({
            'artist_id': '3kHVioJpVxlazAAKQ64pC1',
            'name': 'Yuna',
            'uri': 'spotify:artist:3kHVioJpVxlazAAKQ64pC1',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 140500,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/0WS1qLcXKsCGt5e3dqq30S',
        }),
        'href': 'https://api.spotify.com/v1/tracks/0WS1qLcXKsCGt5e3dqq30S',
        'is_local': False,
        'name': 'Forever (feat. Malou & Yuna)',
        'track_id': '0WS1qLcXKsCGt5e3dqq30S',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:0WS1qLcXKsCGt5e3dqq30S',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 36, 50, 942000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '1xL7LvJtJlAjWPrtA7Aj0v',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '0nnF48t4C8uqGS5HPnCN3F',
              'name': '49th & Main',
              'uri': 'spotify:artist:0nnF48t4C8uqGS5HPnCN3F',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2737be6c8bdc25b79bf8d95f0f0',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e027be6c8bdc25b79bf8d95f0f0',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048517be6c8bdc25b79bf8d95f0f0',
              'width': 64,
            }),
          ]),
          'name': 'Self Sabotage',
          'release_date': '2024-03-28',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:1xL7LvJtJlAjWPrtA7Aj0v',
        }),
        'artists': list([
          dict({
            'artist_id': '0nnF48t4C8uqGS5HPnCN3F',
            'name': '49th & Main',
            'uri': 'spotify:artist:0nnF48t4C8uqGS5HPnCN3F',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 145074,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/7yYur6YhUetXZj6b2CnWrE',
        }),
        'href': 'https://api.spotify.com/v1/tracks/7yYur6YhUetXZj6b2CnWrE',
        'is_local': False,
        'name': 'Self Sabotage',
        'track_id': '7yYur6YhUetXZj6b2CnWrE',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:7yYur6YhUetXZj6b2CnWrE',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 34, 25, 873000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '3UT1EXRpoX808v8dtCz172',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '0vTVU0KH0CVzijsoKGsTPl',
              'name': "Barry Can't Swim",
              'uri': 'spotify:artist:0vTVU0KH0CVzijsoKGsTPl',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2730d8d33cfa46fce3e1bbf66e4',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e020d8d33cfa46fce3e1bbf66e4',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048510d8d33cfa46fce3e1bbf66e4',
              'width': 64,
            }),
          ]),
          'name': 'Still Riding',
          'release_date': '2024-09-24',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 3,
          'uri': 'spotify:album:3UT1EXRpoX808v8dtCz172',
        }),
        'artists': list([
          dict({
            'artist_id': '0vTVU0KH0CVzijsoKGsTPl',
            'name': "Barry Can't Swim",
            'uri': 'spotify:artist:0vTVU0KH0CVzijsoKGsTPl',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 219152,
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/1DQYCwZG5DOXXSTXluYQam',
        }),
        'href': 'https://api.spotify.com/v1/tracks/1DQYCwZG5DOXXSTXluYQam',
        'is_local': False,
        'name': 'Still Riding',
        'track_id': '1DQYCwZG5DOXXSTXluYQam',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:1DQYCwZG5DOXXSTXluYQam',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 30, 46, 715000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '57MSBg5pBQZH5bfLVDmeuP',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
              'width': 64,
            }),
          ]),
          'name': 'In Waves',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
          dict({
            'artist_id': '2Q4FR4Ss0mh6EvbiQBHEOU',
            'name': 'Oona Doherty',
            'uri': 'spotify:artist:2Q4FR4Ss0mh6EvbiQBHEOU',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 337414,
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/08Jhu8OZ6gCIGWQn6vP3uI',
        }),
        'href': 'https://api.spotify.com/v1/tracks/08Jhu8OZ6gCIGWQn6vP3uI',
        'is_local': False,
        'name': 'Falling Together',
        'track_id': '08Jhu8OZ6gCIGWQn6vP3uI',
        'track_number': 12,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:08Jhu8OZ6gCIGWQn6vP3uI',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 25, 10, 544000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '57MSBg5pBQZH5bfLVDmeuP',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
              'width': 64,
            }),
          ]),
          'name': 'In Waves',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 71680,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/1wpcJ6TCrKpH6KdBmrp9yN',
        }),
        'href': 'https://api.spotify.com/v1/tracks/1wpcJ6TCrKpH6KdBmrp9yN',
        'is_local': False,
        'name': 'Every Single Weekend - Interlude',
        'track_id': '1wpcJ6TCrKpH6KdBmrp9yN',
        'track_number': 11,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:1wpcJ6TCrKpH6KdBmrp9yN',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 23, 57, 950000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '57MSBg5pBQZH5bfLVDmeuP',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
              'width': 64,
            }),
          ]),
          'name': 'In Waves',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
          dict({
            'artist_id': '3C8RpaI3Go0yFF9whvKoED',
            'name': 'The Avalanches',
            'uri': 'spotify:artist:3C8RpaI3Go0yFF9whvKoED',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 254142,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/3cfgisz6DhZmooQk08P4Eu',
        }),
        'href': 'https://api.spotify.com/v1/tracks/3cfgisz6DhZmooQk08P4Eu',
        'is_local': False,
        'name': 'All You Children',
        'track_id': '3cfgisz6DhZmooQk08P4Eu',
        'track_number': 10,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:3cfgisz6DhZmooQk08P4Eu',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 19, 43, 477000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '57MSBg5pBQZH5bfLVDmeuP',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
              'width': 64,
            }),
          ]),
          'name': 'In Waves',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 376918,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6pOzbdJKEr4hvXkX7VkfY6',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6pOzbdJKEr4hvXkX7VkfY6',
        'is_local': False,
        'name': 'Breather',
        'track_id': '6pOzbdJKEr4hvXkX7VkfY6',
        'track_number': 9,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:6pOzbdJKEr4hvXkX7VkfY6',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 13, 26, 609000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '57MSBg5pBQZH5bfLVDmeuP',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
              'width': 64,
            }),
          ]),
          'name': 'In Waves',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 222365,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/7gb0pekqHQYTGo6NWLBvT5',
        }),
        'href': 'https://api.spotify.com/v1/tracks/7gb0pekqHQYTGo6NWLBvT5',
        'is_local': False,
        'name': 'The Feeling I Get From You',
        'track_id': '7gb0pekqHQYTGo6NWLBvT5',
        'track_number': 8,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:7gb0pekqHQYTGo6NWLBvT5',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 9, 44, 240000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '57MSBg5pBQZH5bfLVDmeuP',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
              'width': 64,
            }),
          ]),
          'name': 'In Waves',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
          dict({
            'artist_id': '6UE7nl9mha6s8z0wFQFIZ2',
            'name': 'Robyn',
            'uri': 'spotify:artist:6UE7nl9mha6s8z0wFQFIZ2',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 202648,
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/0pMj03SiaZ9bkFlXQWNhtZ',
        }),
        'href': 'https://api.spotify.com/v1/tracks/0pMj03SiaZ9bkFlXQWNhtZ',
        'is_local': False,
        'name': 'Life',
        'track_id': '0pMj03SiaZ9bkFlXQWNhtZ',
        'track_number': 7,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:0pMj03SiaZ9bkFlXQWNhtZ',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 6, 21, 659000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '57MSBg5pBQZH5bfLVDmeuP',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
              'width': 64,
            }),
          ]),
          'name': 'In Waves',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 205638,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/27D9YN3uHPD3PTXvzNtbto',
        }),
        'href': 'https://api.spotify.com/v1/tracks/27D9YN3uHPD3PTXvzNtbto',
        'is_local': False,
        'name': 'Still Summer',
        'track_id': '27D9YN3uHPD3PTXvzNtbto',
        'track_number': 6,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:27D9YN3uHPD3PTXvzNtbto',
      }),
    }),
    dict({
      'context': dict({
        'context_type': <ContextType.ALBUM: 'album'>,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/album/57MSBg5pBQZH5bfLVDmeuP',
        }),
        'href': 'https://api.spotify.com/v1/albums/57MSBg5pBQZH5bfLVDmeuP',
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'played_at': datetime.datetime(2024, 10, 6, 17, 2, 56, 22000, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '57MSBg5pBQZH5bfLVDmeuP',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
              'width': 64,
            }),
          ]),
          'name': 'In Waves',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
          dict({
            'artist_id': '0fEfMW5bypHZ0A8eLnhwj5',
            'name': 'Kelsey Lu',
            'uri': 'spotify:artist:0fEfMW5bypHZ0A8eLnhwj5',
          }),
          dict({
            'artist_id': '0FNfiTQCR5o3ounOlWzm1d',
            'name': 'John Glacier',
            'uri': 'spotify:artist:0FNfiTQCR5o3ounOlWzm1d',
          }),
          dict({
            'artist_id': '1R84VlXnFFULOsWWV8IrCQ',
            'name': 'Panda Bear',
            'uri': 'spotify:artist:1R84VlXnFFULOsWWV8IrCQ',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 212339,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/1gRMKwvMvp6LcQVMpMXQg2',
        }),
        'href': 'https://api.spotify.com/v1/tracks/1gRMKwvMvp6LcQVMpMXQg2',
        'is_local': False,
        'name': 'Dafodil',
        'track_id': '1gRMKwvMvp6LcQVMpMXQg2',
        'track_number': 5,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:1gRMKwvMvp6LcQVMpMXQg2',
      }),
    }),
  ])
# ---
# name: test_get_saved_albums
  list([
    dict({
      'added_at': datetime.datetime(2024, 9, 19, 22, 0, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '57MSBg5pBQZH5bfLVDmeuP',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
            'width': 64,
          }),
        ]),
        'name': 'In Waves',
        'release_date': '2024-09-20',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 12,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 135835,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7uLBdV19ad7kAjU2oB1l6p',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7uLBdV19ad7kAjU2oB1l6p',
            'is_local': False,
            'name': 'Wanna',
            'track_id': '7uLBdV19ad7kAjU2oB1l6p',
            'track_number': 1,
            'uri': 'spotify:track:7uLBdV19ad7kAjU2oB1l6p',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 240580,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3pjX4hC8adabkXGu3X9GTC',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3pjX4hC8adabkXGu3X9GTC',
            'is_local': False,
            'name': 'Treat Each Other Right',
            'track_id': '3pjX4hC8adabkXGu3X9GTC',
            'track_number': 2,
            'uri': 'spotify:track:3pjX4hC8adabkXGu3X9GTC',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
              dict({
                'artist_id': '3X2DdnmoANw8Rg8luHyZQb',
                'name': 'Romy',
                'uri': 'spotify:artist:3X2DdnmoANw8Rg8luHyZQb',
              }),
              dict({
                'artist_id': '4KDu9uqzqseVCpQXMa8Pvm',
                'name': 'Oliver Sim',
                'uri': 'spotify:artist:4KDu9uqzqseVCpQXMa8Pvm',
              }),
              dict({
                'artist_id': '3iOvXCl6edW5Um0fXEBRXy',
                'name': 'The xx',
                'uri': 'spotify:artist:3iOvXCl6edW5Um0fXEBRXy',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 208334,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4gBniy3TwR9o2JDBx48TlD',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4gBniy3TwR9o2JDBx48TlD',
            'is_local': False,
            'name': 'Waited All Night',
            'track_id': '4gBniy3TwR9o2JDBx48TlD',
            'track_number': 3,
            'uri': 'spotify:track:4gBniy3TwR9o2JDBx48TlD',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
              dict({
                'artist_id': '0XfQBWgzisaS9ltDV9bXAS',
                'name': 'Honey Dijon',
                'uri': 'spotify:artist:0XfQBWgzisaS9ltDV9bXAS',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 222315,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/79gWc6dZ1dXH7rC67DTunz',
            }),
            'href': 'https://api.spotify.com/v1/tracks/79gWc6dZ1dXH7rC67DTunz',
            'is_local': False,
            'name': 'Baddy On The Floor',
            'track_id': '79gWc6dZ1dXH7rC67DTunz',
            'track_number': 4,
            'uri': 'spotify:track:79gWc6dZ1dXH7rC67DTunz',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
              dict({
                'artist_id': '0fEfMW5bypHZ0A8eLnhwj5',
                'name': 'Kelsey Lu',
                'uri': 'spotify:artist:0fEfMW5bypHZ0A8eLnhwj5',
              }),
              dict({
                'artist_id': '0FNfiTQCR5o3ounOlWzm1d',
                'name': 'John Glacier',
                'uri': 'spotify:artist:0FNfiTQCR5o3ounOlWzm1d',
              }),
              dict({
                'artist_id': '1R84VlXnFFULOsWWV8IrCQ',
                'name': 'Panda Bear',
                'uri': 'spotify:artist:1R84VlXnFFULOsWWV8IrCQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 212339,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1gRMKwvMvp6LcQVMpMXQg2',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1gRMKwvMvp6LcQVMpMXQg2',
            'is_local': False,
            'name': 'Dafodil',
            'track_id': '1gRMKwvMvp6LcQVMpMXQg2',
            'track_number': 5,
            'uri': 'spotify:track:1gRMKwvMvp6LcQVMpMXQg2',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 205638,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/27D9YN3uHPD3PTXvzNtbto',
            }),
            'href': 'https://api.spotify.com/v1/tracks/27D9YN3uHPD3PTXvzNtbto',
            'is_local': False,
            'name': 'Still Summer',
            'track_id': '27D9YN3uHPD3PTXvzNtbto',
            'track_number': 6,
            'uri': 'spotify:track:27D9YN3uHPD3PTXvzNtbto',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
              dict({
                'artist_id': '6UE7nl9mha6s8z0wFQFIZ2',
                'name': 'Robyn',
                'uri': 'spotify:artist:6UE7nl9mha6s8z0wFQFIZ2',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 202648,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0pMj03SiaZ9bkFlXQWNhtZ',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0pMj03SiaZ9bkFlXQWNhtZ',
            'is_local': False,
            'name': 'Life',
            'track_id': '0pMj03SiaZ9bkFlXQWNhtZ',
            'track_number': 7,
            'uri': 'spotify:track:0pMj03SiaZ9bkFlXQWNhtZ',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 222365,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7gb0pekqHQYTGo6NWLBvT5',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7gb0pekqHQYTGo6NWLBvT5',
            'is_local': False,
            'name': 'The Feeling I Get From You',
            'track_id': '7gb0pekqHQYTGo6NWLBvT5',
            'track_number': 8,
            'uri': 'spotify:track:7gb0pekqHQYTGo6NWLBvT5',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 376918,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6pOzbdJKEr4hvXkX7VkfY6',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6pOzbdJKEr4hvXkX7VkfY6',
            'is_local': False,
            'name': 'Breather',
            'track_id': '6pOzbdJKEr4hvXkX7VkfY6',
            'track_number': 9,
            'uri': 'spotify:track:6pOzbdJKEr4hvXkX7VkfY6',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
              dict({
                'artist_id': '3C8RpaI3Go0yFF9whvKoED',
                'name': 'The Avalanches',
                'uri': 'spotify:artist:3C8RpaI3Go0yFF9whvKoED',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 254142,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3cfgisz6DhZmooQk08P4Eu',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3cfgisz6DhZmooQk08P4Eu',
            'is_local': False,
            'name': 'All You Children',
            'track_id': '3cfgisz6DhZmooQk08P4Eu',
            'track_number': 10,
            'uri': 'spotify:track:3cfgisz6DhZmooQk08P4Eu',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 71680,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1wpcJ6TCrKpH6KdBmrp9yN',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1wpcJ6TCrKpH6KdBmrp9yN',
            'is_local': False,
            'name': 'Every Single Weekend - Interlude',
            'track_id': '1wpcJ6TCrKpH6KdBmrp9yN',
            'track_number': 11,
            'uri': 'spotify:track:1wpcJ6TCrKpH6KdBmrp9yN',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
                'name': 'Jamie xx',
                'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
              }),
              dict({
                'artist_id': '2Q4FR4Ss0mh6EvbiQBHEOU',
                'name': 'Oona Doherty',
                'uri': 'spotify:artist:2Q4FR4Ss0mh6EvbiQBHEOU',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 337414,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/08Jhu8OZ6gCIGWQn6vP3uI',
            }),
            'href': 'https://api.spotify.com/v1/tracks/08Jhu8OZ6gCIGWQn6vP3uI',
            'is_local': False,
            'name': 'Falling Together',
            'track_id': '08Jhu8OZ6gCIGWQn6vP3uI',
            'track_number': 12,
            'uri': 'spotify:track:08Jhu8OZ6gCIGWQn6vP3uI',
          }),
        ]),
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 5, 22, 0, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '3DQueEd1Ft9PHWgovDzPKh',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '4oLeXFyACqeem2VImYeBFe',
            'name': 'Fred again..',
            'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2736b8a4828e057b7dc1c4a4d39',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e026b8a4828e057b7dc1c4a4d39',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048516b8a4828e057b7dc1c4a4d39',
            'width': 64,
          }),
        ]),
        'name': 'ten days',
        'release_date': '2024-09-06',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 20,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 30857,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/00nDbqJkHBGUFdim9M0xGc',
            }),
            'href': 'https://api.spotify.com/v1/tracks/00nDbqJkHBGUFdim9M0xGc',
            'is_local': False,
            'name': '.one',
            'track_id': '00nDbqJkHBGUFdim9M0xGc',
            'track_number': 1,
            'uri': 'spotify:track:00nDbqJkHBGUFdim9M0xGc',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '6l7R1jntPahGxwJt7Tky8h',
                'name': 'Obongjayar',
                'uri': 'spotify:artist:6l7R1jntPahGxwJt7Tky8h',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 220653,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1rf4SX7dduNbrNnOmupLzi',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1rf4SX7dduNbrNnOmupLzi',
            'is_local': False,
            'name': 'adore u',
            'track_id': '1rf4SX7dduNbrNnOmupLzi',
            'track_number': 2,
            'uri': 'spotify:track:1rf4SX7dduNbrNnOmupLzi',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 10670,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0lt9clHEwYyheuC9rik9UH',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0lt9clHEwYyheuC9rik9UH',
            'is_local': False,
            'name': '.two',
            'track_id': '0lt9clHEwYyheuC9rik9UH',
            'track_number': 3,
            'uri': 'spotify:track:0lt9clHEwYyheuC9rik9UH',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '6Ja6zFB5d7XRihhfMo6KzY',
                'name': 'Jozzy',
                'uri': 'spotify:artist:6Ja6zFB5d7XRihhfMo6KzY',
              }),
              dict({
                'artist_id': '7IrBqZo6diq3hV3GpUhrs2',
                'name': 'Jim Legxacy',
                'uri': 'spotify:artist:7IrBqZo6diq3hV3GpUhrs2',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 181545,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6twB0uYXJYW9t5GHfYaQ3i',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6twB0uYXJYW9t5GHfYaQ3i',
            'is_local': False,
            'name': 'ten',
            'track_id': '6twB0uYXJYW9t5GHfYaQ3i',
            'track_number': 4,
            'uri': 'spotify:track:6twB0uYXJYW9t5GHfYaQ3i',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 15034,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6G7TRmzTt9tnrM0QqSVpJW',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6G7TRmzTt9tnrM0QqSVpJW',
            'is_local': False,
            'name': '.three',
            'track_id': '6G7TRmzTt9tnrM0QqSVpJW',
            'track_number': 5,
            'uri': 'spotify:track:6G7TRmzTt9tnrM0QqSVpJW',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '2WoVwexZuODvclzULjPQtm',
                'name': 'Sampha',
                'uri': 'spotify:artist:2WoVwexZuODvclzULjPQtm',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 214469,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4IHblO52meh2jwqES1BA7X',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4IHblO52meh2jwqES1BA7X',
            'is_local': False,
            'name': 'fear less',
            'track_id': '4IHblO52meh2jwqES1BA7X',
            'track_number': 6,
            'uri': 'spotify:track:4IHblO52meh2jwqES1BA7X',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 9856,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1wU9pfdw6ht8HKfxz6wMNq',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1wU9pfdw6ht8HKfxz6wMNq',
            'is_local': False,
            'name': '.four',
            'track_id': '1wU9pfdw6ht8HKfxz6wMNq',
            'track_number': 7,
            'uri': 'spotify:track:1wU9pfdw6ht8HKfxz6wMNq',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '4PLsMEk2DCRVlVL2a9aZAv',
                'name': 'SOAK',
                'uri': 'spotify:artist:4PLsMEk2DCRVlVL2a9aZAv',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 260997,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2D9a9CXeo3HFtVeaNlzp4a',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2D9a9CXeo3HFtVeaNlzp4a',
            'is_local': False,
            'name': 'just stand there',
            'track_id': '2D9a9CXeo3HFtVeaNlzp4a',
            'track_number': 8,
            'uri': 'spotify:track:2D9a9CXeo3HFtVeaNlzp4a',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 15254,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3vTHKAYJy0hY1OkVv1qLNM',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3vTHKAYJy0hY1OkVv1qLNM',
            'is_local': False,
            'name': '.five',
            'track_id': '3vTHKAYJy0hY1OkVv1qLNM',
            'track_number': 9,
            'uri': 'spotify:track:3vTHKAYJy0hY1OkVv1qLNM',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '3jK9MiCrA42lLAdMGUZpwa',
                'name': 'Anderson .Paak',
                'uri': 'spotify:artist:3jK9MiCrA42lLAdMGUZpwa',
              }),
              dict({
                'artist_id': '6UtYvUtXnmg5EtllDFlWp8',
                'name': 'CHIKA',
                'uri': 'spotify:artist:6UtYvUtXnmg5EtllDFlWp8',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 224073,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1qfJ6OvxrspQTmcvdIEoX6',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1qfJ6OvxrspQTmcvdIEoX6',
            'is_local': False,
            'name': 'places to be',
            'track_id': '1qfJ6OvxrspQTmcvdIEoX6',
            'track_number': 10,
            'uri': 'spotify:track:1qfJ6OvxrspQTmcvdIEoX6',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 28836,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/13H2XgH3k8SEptaoD5qeLG',
            }),
            'href': 'https://api.spotify.com/v1/tracks/13H2XgH3k8SEptaoD5qeLG',
            'is_local': False,
            'name': '.six',
            'track_id': '13H2XgH3k8SEptaoD5qeLG',
            'track_number': 11,
            'uri': 'spotify:track:13H2XgH3k8SEptaoD5qeLG',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '59MDSNIYoOY0WRYuodzJPD',
                'name': 'Duskus',
                'uri': 'spotify:artist:59MDSNIYoOY0WRYuodzJPD',
              }),
              dict({
                'artist_id': '7Eu1txygG6nJttLHbZdQOh',
                'name': 'Four Tet',
                'uri': 'spotify:artist:7Eu1txygG6nJttLHbZdQOh',
              }),
              dict({
                'artist_id': '3pK4EcflBpG1Kpmjk5LK2R',
                'name': 'Joy Anonymous',
                'uri': 'spotify:artist:3pK4EcflBpG1Kpmjk5LK2R',
              }),
              dict({
                'artist_id': '5he5w2lnU9x7JFhnwcekXX',
                'name': 'Skrillex',
                'uri': 'spotify:artist:5he5w2lnU9x7JFhnwcekXX',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 453068,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3i9QKRl5Ql3pgUfNdYBVTc',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3i9QKRl5Ql3pgUfNdYBVTc',
            'is_local': False,
            'name': 'glow',
            'track_id': '3i9QKRl5Ql3pgUfNdYBVTc',
            'track_number': 12,
            'uri': 'spotify:track:3i9QKRl5Ql3pgUfNdYBVTc',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 31749,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2OLH9ukOFDVBMuVUuy2sFW',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2OLH9ukOFDVBMuVUuy2sFW',
            'is_local': False,
            'name': '.seven',
            'track_id': '2OLH9ukOFDVBMuVUuy2sFW',
            'track_number': 13,
            'uri': 'spotify:track:2OLH9ukOFDVBMuVUuy2sFW',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 220656,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3DzWFxyzsAVblVNndiU9CW',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3DzWFxyzsAVblVNndiU9CW',
            'is_local': False,
            'name': 'i saw you',
            'track_id': '3DzWFxyzsAVblVNndiU9CW',
            'track_number': 14,
            'uri': 'spotify:track:3DzWFxyzsAVblVNndiU9CW',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 15037,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1aTcAf7K1ym8lBcuu8nmJA',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1aTcAf7K1ym8lBcuu8nmJA',
            'is_local': False,
            'name': '.eight',
            'track_id': '1aTcAf7K1ym8lBcuu8nmJA',
            'track_number': 15,
            'uri': 'spotify:track:1aTcAf7K1ym8lBcuu8nmJA',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '5s6TJEuHTr9GR894wc6VfP',
                'name': 'Emmylou Harris',
                'uri': 'spotify:artist:5s6TJEuHTr9GR894wc6VfP',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 200737,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4S05mkyTtAiWy5l4umch0X',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4S05mkyTtAiWy5l4umch0X',
            'is_local': False,
            'name': 'where will i be',
            'track_id': '4S05mkyTtAiWy5l4umch0X',
            'track_number': 16,
            'uri': 'spotify:track:4S05mkyTtAiWy5l4umch0X',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 19060,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5aNwAqN5Gk5oZIwW5KfhXN',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5aNwAqN5Gk5oZIwW5KfhXN',
            'is_local': False,
            'name': '.nine',
            'track_id': '5aNwAqN5Gk5oZIwW5KfhXN',
            'track_number': 17,
            'uri': 'spotify:track:5aNwAqN5Gk5oZIwW5KfhXN',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '3pK4EcflBpG1Kpmjk5LK2R',
                'name': 'Joy Anonymous',
                'uri': 'spotify:artist:3pK4EcflBpG1Kpmjk5LK2R',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 344068,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4A8tKYA7gwZzQ4jVwIv1sv',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4A8tKYA7gwZzQ4jVwIv1sv',
            'is_local': False,
            'name': 'peace u need',
            'track_id': '4A8tKYA7gwZzQ4jVwIv1sv',
            'track_number': 18,
            'uri': 'spotify:track:4A8tKYA7gwZzQ4jVwIv1sv',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 29540,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2feEZkLf7dZUueeVBNsdor',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2feEZkLf7dZUueeVBNsdor',
            'is_local': False,
            'name': '.ten',
            'track_id': '2feEZkLf7dZUueeVBNsdor',
            'track_number': 19,
            'uri': 'spotify:track:2feEZkLf7dZUueeVBNsdor',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4oLeXFyACqeem2VImYeBFe',
                'name': 'Fred again..',
                'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
              }),
              dict({
                'artist_id': '3IunaFjvNKj98JW89JYv9u',
                'name': 'The Japanese House',
                'uri': 'spotify:artist:3IunaFjvNKj98JW89JYv9u',
              }),
              dict({
                'artist_id': '6M98IZJK2tx6x2YVyHua9K',
                'name': 'Scott Hardkiss',
                'uri': 'spotify:artist:6M98IZJK2tx6x2YVyHua9K',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 314007,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/61pyjiweMDS1h930OgS0XO',
            }),
            'href': 'https://api.spotify.com/v1/tracks/61pyjiweMDS1h930OgS0XO',
            'is_local': False,
            'name': 'backseat',
            'track_id': '61pyjiweMDS1h930OgS0XO',
            'track_number': 20,
            'uri': 'spotify:track:61pyjiweMDS1h930OgS0XO',
          }),
        ]),
        'uri': 'spotify:album:3DQueEd1Ft9PHWgovDzPKh',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 8, 15, 22, 0, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '27ynHS80OjICdw3qLNMgQP',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
            'name': 'Foster The People',
            'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273f29bc92a6314f290b96ae829',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02f29bc92a6314f290b96ae829',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851f29bc92a6314f290b96ae829',
            'width': 64,
          }),
        ]),
        'name': 'Paradise State of Mind',
        'release_date': '2024-08-16',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 11,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 189099,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6qtGeawfnmQMUWyQ95LdIL',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6qtGeawfnmQMUWyQ95LdIL',
            'is_local': False,
            'name': 'See You In The Afterlife',
            'track_id': '6qtGeawfnmQMUWyQ95LdIL',
            'track_number': 1,
            'uri': 'spotify:track:6qtGeawfnmQMUWyQ95LdIL',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 259252,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6r9GzPEdq4bGp507oxt2iZ',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6r9GzPEdq4bGp507oxt2iZ',
            'is_local': False,
            'name': 'Lost In Space',
            'track_id': '6r9GzPEdq4bGp507oxt2iZ',
            'track_number': 2,
            'uri': 'spotify:track:6r9GzPEdq4bGp507oxt2iZ',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 153005,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0CUojUDoPZvjKqPPLHaOTm',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0CUojUDoPZvjKqPPLHaOTm',
            'is_local': False,
            'name': 'Take Me Back',
            'track_id': '0CUojUDoPZvjKqPPLHaOTm',
            'track_number': 3,
            'uri': 'spotify:track:0CUojUDoPZvjKqPPLHaOTm',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 274446,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/090Vhdep7tK2kXLy2M1vLj',
            }),
            'href': 'https://api.spotify.com/v1/tracks/090Vhdep7tK2kXLy2M1vLj',
            'is_local': False,
            'name': 'Let Go',
            'track_id': '090Vhdep7tK2kXLy2M1vLj',
            'track_number': 4,
            'uri': 'spotify:track:090Vhdep7tK2kXLy2M1vLj',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 219300,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6QHE0tQs8NFE3DGDldP1DJ',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6QHE0tQs8NFE3DGDldP1DJ',
            'is_local': False,
            'name': 'Feed Me',
            'track_id': '6QHE0tQs8NFE3DGDldP1DJ',
            'track_number': 5,
            'uri': 'spotify:track:6QHE0tQs8NFE3DGDldP1DJ',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 288544,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2cIP5wh1Ala2rWVwTOgg4n',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2cIP5wh1Ala2rWVwTOgg4n',
            'is_local': False,
            'name': 'Paradise State Of Mind',
            'track_id': '2cIP5wh1Ala2rWVwTOgg4n',
            'track_number': 6,
            'uri': 'spotify:track:2cIP5wh1Ala2rWVwTOgg4n',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 328024,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5gygubFSFXfLDhoMnpAhzP',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5gygubFSFXfLDhoMnpAhzP',
            'is_local': False,
            'name': 'Glitchzig',
            'track_id': '5gygubFSFXfLDhoMnpAhzP',
            'track_number': 7,
            'uri': 'spotify:track:5gygubFSFXfLDhoMnpAhzP',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 253257,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/08vuNWfV1WOndL3yMetfXd',
            }),
            'href': 'https://api.spotify.com/v1/tracks/08vuNWfV1WOndL3yMetfXd',
            'is_local': False,
            'name': 'The Holy Shangri-La',
            'track_id': '08vuNWfV1WOndL3yMetfXd',
            'track_number': 8,
            'uri': 'spotify:track:08vuNWfV1WOndL3yMetfXd',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 183139,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0wyQNzcMUYFec1B19hu6pK',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0wyQNzcMUYFec1B19hu6pK',
            'is_local': False,
            'name': 'Sometimes I Wanna Be Bad',
            'track_id': '0wyQNzcMUYFec1B19hu6pK',
            'track_number': 9,
            'uri': 'spotify:track:0wyQNzcMUYFec1B19hu6pK',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 204111,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1G2bNCn8x1WrbeIBBvfQZS',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1G2bNCn8x1WrbeIBBvfQZS',
            'is_local': False,
            'name': 'Chasing Low Vibrations',
            'track_id': '1G2bNCn8x1WrbeIBBvfQZS',
            'track_number': 10,
            'uri': 'spotify:track:1G2bNCn8x1WrbeIBBvfQZS',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
                'name': 'Foster The People',
                'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 264919,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/60BqMpaQjhET1YZhou4t2b',
            }),
            'href': 'https://api.spotify.com/v1/tracks/60BqMpaQjhET1YZhou4t2b',
            'is_local': False,
            'name': 'A Diamond To Be Born',
            'track_id': '60BqMpaQjhET1YZhou4t2b',
            'track_number': 11,
            'uri': 'spotify:track:60BqMpaQjhET1YZhou4t2b',
          }),
        ]),
        'uri': 'spotify:album:27ynHS80OjICdw3qLNMgQP',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 8, 15, 22, 0, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '33tDS6r9DQBx9LaYUY7wh1',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '68NOjWuVYBRXzYwhel3jAl',
            'name': 'SIAMES',
            'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273b7132ada01c73861b17c978a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02b7132ada01c73861b17c978a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851b7132ada01c73861b17c978a',
            'width': 64,
          }),
        ]),
        'name': 'Melodramatic',
        'release_date': '2024-08-16',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 9,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 233505,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0w13ZqgFrKq7BYgsc2EKvq',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0w13ZqgFrKq7BYgsc2EKvq',
            'is_local': False,
            'name': 'The Phoenix',
            'track_id': '0w13ZqgFrKq7BYgsc2EKvq',
            'track_number': 1,
            'uri': 'spotify:track:0w13ZqgFrKq7BYgsc2EKvq',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 190296,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/71u2sgaT6I05JY2n6aom85',
            }),
            'href': 'https://api.spotify.com/v1/tracks/71u2sgaT6I05JY2n6aom85',
            'is_local': False,
            'name': "Baby Don't Give Up!",
            'track_id': '71u2sgaT6I05JY2n6aom85',
            'track_number': 2,
            'uri': 'spotify:track:71u2sgaT6I05JY2n6aom85',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 157712,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3QuBIm40rJbw5asM9tGjim',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3QuBIm40rJbw5asM9tGjim',
            'is_local': False,
            'name': 'As Soon As I Discover',
            'track_id': '3QuBIm40rJbw5asM9tGjim',
            'track_number': 3,
            'uri': 'spotify:track:3QuBIm40rJbw5asM9tGjim',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 191740,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1AieqRevDfu4uQlhTIWJbv',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1AieqRevDfu4uQlhTIWJbv',
            'is_local': False,
            'name': 'My Little One',
            'track_id': '1AieqRevDfu4uQlhTIWJbv',
            'track_number': 4,
            'uri': 'spotify:track:1AieqRevDfu4uQlhTIWJbv',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 218015,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3MTbJM0UmqrgSr9thX1JwO',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3MTbJM0UmqrgSr9thX1JwO',
            'is_local': False,
            'name': 'Love Away',
            'track_id': '3MTbJM0UmqrgSr9thX1JwO',
            'track_number': 5,
            'uri': 'spotify:track:3MTbJM0UmqrgSr9thX1JwO',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 203419,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5B5l5KuDqLT73R3lgDI7H4',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5B5l5KuDqLT73R3lgDI7H4',
            'is_local': False,
            'name': 'Alone In The Darkness',
            'track_id': '5B5l5KuDqLT73R3lgDI7H4',
            'track_number': 6,
            'uri': 'spotify:track:5B5l5KuDqLT73R3lgDI7H4',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 180967,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4tkOZG1F6og5NZW1uD3z7Y',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4tkOZG1F6og5NZW1uD3z7Y',
            'is_local': False,
            'name': 'My Way',
            'track_id': '4tkOZG1F6og5NZW1uD3z7Y',
            'track_number': 7,
            'uri': 'spotify:track:4tkOZG1F6og5NZW1uD3z7Y',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 178997,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0CtfbRy4cB2FOEsP5WIZ2s',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0CtfbRy4cB2FOEsP5WIZ2s',
            'is_local': False,
            'name': 'I Promise Myself',
            'track_id': '0CtfbRy4cB2FOEsP5WIZ2s',
            'track_number': 8,
            'uri': 'spotify:track:0CtfbRy4cB2FOEsP5WIZ2s',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '68NOjWuVYBRXzYwhel3jAl',
                'name': 'SIAMES',
                'uri': 'spotify:artist:68NOjWuVYBRXzYwhel3jAl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 201119,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3FZwYiZufmIgKyfqgMnpPg',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3FZwYiZufmIgKyfqgMnpPg',
            'is_local': False,
            'name': 'Post Tour Depression',
            'track_id': '3FZwYiZufmIgKyfqgMnpPg',
            'track_number': 9,
            'uri': 'spotify:track:3FZwYiZufmIgKyfqgMnpPg',
          }),
        ]),
        'uri': 'spotify:album:33tDS6r9DQBx9LaYUY7wh1',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 7, 12, 11, 46, 14, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '0m14dyyJemQy44KVhsKnaj',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '5B7d27dL276bbzzQ360IYN',
            'name': 'the atriarchy',
            'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273f2c7ab344741360689e26032',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02f2c7ab344741360689e26032',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851f2c7ab344741360689e26032',
            'width': 64,
          }),
        ]),
        'name': 'PMO: An Atriarchy Experience',
        'release_date': '2024-07-11',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 17,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '7xplDB5Ftf0oECpcFlKE99',
                'name': 'Owen CMYK',
                'uri': 'spotify:artist:7xplDB5Ftf0oECpcFlKE99',
              }),
              dict({
                'artist_id': '3lrmsbi43nA5svDePADyHl',
                'name': 'froggman',
                'uri': 'spotify:artist:3lrmsbi43nA5svDePADyHl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 50572,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2QVz5Ndv0faqrTNyMbK6HG',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2QVz5Ndv0faqrTNyMbK6HG',
            'is_local': False,
            'name': 'Sea Shanty',
            'track_id': '2QVz5Ndv0faqrTNyMbK6HG',
            'track_number': 1,
            'uri': 'spotify:track:2QVz5Ndv0faqrTNyMbK6HG',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '0GONM3s2unLmwUiqNneycA',
                'name': 'M17',
                'uri': 'spotify:artist:0GONM3s2unLmwUiqNneycA',
              }),
              dict({
                'artist_id': '26z8iLfADGuSugsu63BW2s',
                'name': 'Confuzzled',
                'uri': 'spotify:artist:26z8iLfADGuSugsu63BW2s',
              }),
              dict({
                'artist_id': '3iRbwOUFx2CWZ4BRQcnP2I',
                'name': 'Beautiful Panda',
                'uri': 'spotify:artist:3iRbwOUFx2CWZ4BRQcnP2I',
              }),
              dict({
                'artist_id': '6HiHuFsJrutJGZT2GAwG4L',
                'name': 'itsAZ',
                'uri': 'spotify:artist:6HiHuFsJrutJGZT2GAwG4L',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 164383,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3yoGnoFkQLZa1rPbhycLgA',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3yoGnoFkQLZa1rPbhycLgA',
            'is_local': False,
            'name': 'Castle in the Sky',
            'track_id': '3yoGnoFkQLZa1rPbhycLgA',
            'track_number': 2,
            'uri': 'spotify:track:3yoGnoFkQLZa1rPbhycLgA',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '3lrmsbi43nA5svDePADyHl',
                'name': 'froggman',
                'uri': 'spotify:artist:3lrmsbi43nA5svDePADyHl',
              }),
              dict({
                'artist_id': '26z8iLfADGuSugsu63BW2s',
                'name': 'Confuzzled',
                'uri': 'spotify:artist:26z8iLfADGuSugsu63BW2s',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 115000,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/11CVrcm1dz0jKNHvFlbkOV',
            }),
            'href': 'https://api.spotify.com/v1/tracks/11CVrcm1dz0jKNHvFlbkOV',
            'is_local': False,
            'name': 'Boomer Wonderland',
            'track_id': '11CVrcm1dz0jKNHvFlbkOV',
            'track_number': 3,
            'uri': 'spotify:track:11CVrcm1dz0jKNHvFlbkOV',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '2RaLCgWRwHSBJySoMVZi1U',
                'name': 'JPecs',
                'uri': 'spotify:artist:2RaLCgWRwHSBJySoMVZi1U',
              }),
              dict({
                'artist_id': '49X16juWaNmVsSkftsPI9u',
                'name': 'javid74',
                'uri': 'spotify:artist:49X16juWaNmVsSkftsPI9u',
              }),
              dict({
                'artist_id': '6HiHuFsJrutJGZT2GAwG4L',
                'name': 'itsAZ',
                'uri': 'spotify:artist:6HiHuFsJrutJGZT2GAwG4L',
              }),
              dict({
                'artist_id': '3lrmsbi43nA5svDePADyHl',
                'name': 'froggman',
                'uri': 'spotify:artist:3lrmsbi43nA5svDePADyHl',
              }),
              dict({
                'artist_id': '3iRbwOUFx2CWZ4BRQcnP2I',
                'name': 'Beautiful Panda',
                'uri': 'spotify:artist:3iRbwOUFx2CWZ4BRQcnP2I',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 114622,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6nYAajfD6iXhHLTjXFV3NS',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6nYAajfD6iXhHLTjXFV3NS',
            'is_local': False,
            'name': '3rd Place',
            'track_id': '6nYAajfD6iXhHLTjXFV3NS',
            'track_number': 4,
            'uri': 'spotify:track:6nYAajfD6iXhHLTjXFV3NS',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '6CPBjEKtaoONitOOYJEPu9',
                'name': 'the_bardificer',
                'uri': 'spotify:artist:6CPBjEKtaoONitOOYJEPu9',
              }),
              dict({
                'artist_id': '1dxMexw9HIXRJX53LQZUOz',
                'name': 'Ash Artz',
                'uri': 'spotify:artist:1dxMexw9HIXRJX53LQZUOz',
              }),
              dict({
                'artist_id': '64zUEoPQHdOq7bYmLwZRSi',
                'name': 'Luna',
                'uri': 'spotify:artist:64zUEoPQHdOq7bYmLwZRSi',
              }),
              dict({
                'artist_id': '4PJ8Omgo9ObI7mb9COCfm8',
                'name': 'Hatmiss',
                'uri': 'spotify:artist:4PJ8Omgo9ObI7mb9COCfm8',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 234500,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5ZnK0HCoBv6fgdc2PMeAsV',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5ZnK0HCoBv6fgdc2PMeAsV',
            'is_local': False,
            'name': 'No Time Left To Lose',
            'track_id': '5ZnK0HCoBv6fgdc2PMeAsV',
            'track_number': 5,
            'uri': 'spotify:track:5ZnK0HCoBv6fgdc2PMeAsV',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '3iRbwOUFx2CWZ4BRQcnP2I',
                'name': 'Beautiful Panda',
                'uri': 'spotify:artist:3iRbwOUFx2CWZ4BRQcnP2I',
              }),
              dict({
                'artist_id': '4qsHDbno8XG3abDsyq8ztN',
                'name': 'mango',
                'uri': 'spotify:artist:4qsHDbno8XG3abDsyq8ztN',
              }),
              dict({
                'artist_id': '4PJ8Omgo9ObI7mb9COCfm8',
                'name': 'Hatmiss',
                'uri': 'spotify:artist:4PJ8Omgo9ObI7mb9COCfm8',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 36750,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2hyVHjnnm3KUO2a2Qg1eM9',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2hyVHjnnm3KUO2a2Qg1eM9',
            'is_local': False,
            'name': "It's 11pm And I Can't Stop Folding Paper Like We Used To Do",
            'track_id': '2hyVHjnnm3KUO2a2Qg1eM9',
            'track_number': 6,
            'uri': 'spotify:track:2hyVHjnnm3KUO2a2Qg1eM9',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '5rqsRqoG9bfilmZqxOOkek',
                'name': 'gRRiever',
                'uri': 'spotify:artist:5rqsRqoG9bfilmZqxOOkek',
              }),
              dict({
                'artist_id': '2STTnw4FJjSXRH6bItWl0F',
                'name': 'StoneEars',
                'uri': 'spotify:artist:2STTnw4FJjSXRH6bItWl0F',
              }),
              dict({
                'artist_id': '6QqFHkMOC59TL7W5hfOsiU',
                'name': 'SofiUH',
                'uri': 'spotify:artist:6QqFHkMOC59TL7W5hfOsiU',
              }),
              dict({
                'artist_id': '3iRbwOUFx2CWZ4BRQcnP2I',
                'name': 'Beautiful Panda',
                'uri': 'spotify:artist:3iRbwOUFx2CWZ4BRQcnP2I',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 170854,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/593aq2LX6veq1Ft0kHvrS9',
            }),
            'href': 'https://api.spotify.com/v1/tracks/593aq2LX6veq1Ft0kHvrS9',
            'is_local': False,
            'name': 'God Gamer',
            'track_id': '593aq2LX6veq1Ft0kHvrS9',
            'track_number': 7,
            'uri': 'spotify:track:593aq2LX6veq1Ft0kHvrS9',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '6RmWDtsKktRw2v9FP1SFni',
                'name': 'yubyub',
                'uri': 'spotify:artist:6RmWDtsKktRw2v9FP1SFni',
              }),
              dict({
                'artist_id': '3lrmsbi43nA5svDePADyHl',
                'name': 'froggman',
                'uri': 'spotify:artist:3lrmsbi43nA5svDePADyHl',
              }),
              dict({
                'artist_id': '190GSW42zDnQc16U5XgULT',
                'name': 'Jo the Forggie',
                'uri': 'spotify:artist:190GSW42zDnQc16U5XgULT',
              }),
              dict({
                'artist_id': '26z8iLfADGuSugsu63BW2s',
                'name': 'Confuzzled',
                'uri': 'spotify:artist:26z8iLfADGuSugsu63BW2s',
              }),
              dict({
                'artist_id': '1uLBqEv467ZgclJBIdWlCc',
                'name': 'fluentsynth',
                'uri': 'spotify:artist:1uLBqEv467ZgclJBIdWlCc',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 80000,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5WWShf7Lo5EBnIBGdbmKN5',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5WWShf7Lo5EBnIBGdbmKN5',
            'is_local': False,
            'name': 'Purple Streamer Battle',
            'track_id': '5WWShf7Lo5EBnIBGdbmKN5',
            'track_number': 8,
            'uri': 'spotify:track:5WWShf7Lo5EBnIBGdbmKN5',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '2roVEpafIk02cSCDrbhHAe',
                'name': 'RhysO',
                'uri': 'spotify:artist:2roVEpafIk02cSCDrbhHAe',
              }),
              dict({
                'artist_id': '3lrmsbi43nA5svDePADyHl',
                'name': 'froggman',
                'uri': 'spotify:artist:3lrmsbi43nA5svDePADyHl',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 99158,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/09WyoZ2RaNeAEcfZHtsXPR',
            }),
            'href': 'https://api.spotify.com/v1/tracks/09WyoZ2RaNeAEcfZHtsXPR',
            'is_local': False,
            'name': 'Lost at Sea',
            'track_id': '09WyoZ2RaNeAEcfZHtsXPR',
            'track_number': 9,
            'uri': 'spotify:track:09WyoZ2RaNeAEcfZHtsXPR',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '79Mo8yyzVDo0uyeAKimv7W',
                'name': 'RDCwest',
                'uri': 'spotify:artist:79Mo8yyzVDo0uyeAKimv7W',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 83750,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4cWh7YO5U0JBCcAU9JUhSs',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4cWh7YO5U0JBCcAU9JUhSs',
            'is_local': False,
            'name': '364 Interlude',
            'track_id': '4cWh7YO5U0JBCcAU9JUhSs',
            'track_number': 10,
            'uri': 'spotify:track:4cWh7YO5U0JBCcAU9JUhSs',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '78F4dqW3GJqRzy3EDzHfba',
                'name': 'Alphons',
                'uri': 'spotify:artist:78F4dqW3GJqRzy3EDzHfba',
              }),
              dict({
                'artist_id': '2qV9yNZiOt6UlbIYJgM7k2',
                'name': 'MyDog',
                'uri': 'spotify:artist:2qV9yNZiOt6UlbIYJgM7k2',
              }),
              dict({
                'artist_id': '2jTOWoCU8yUCNkHN1hzSNm',
                'name': 'badger',
                'uri': 'spotify:artist:2jTOWoCU8yUCNkHN1hzSNm',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 141500,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5Hypfslm17ws3wZhJCpMYg',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5Hypfslm17ws3wZhJCpMYg',
            'is_local': False,
            'name': 'MyDog Has Depression',
            'track_id': '5Hypfslm17ws3wZhJCpMYg',
            'track_number': 11,
            'uri': 'spotify:track:5Hypfslm17ws3wZhJCpMYg',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '3SCpPBu1VKguPSQRuVYrcA',
                'name': '17artisan',
                'uri': 'spotify:artist:3SCpPBu1VKguPSQRuVYrcA',
              }),
              dict({
                'artist_id': '2FljQuuxRfxfoltcyKZcoC',
                'name': 'REESE',
                'uri': 'spotify:artist:2FljQuuxRfxfoltcyKZcoC',
              }),
              dict({
                'artist_id': '4qsHDbno8XG3abDsyq8ztN',
                'name': 'mango',
                'uri': 'spotify:artist:4qsHDbno8XG3abDsyq8ztN',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 152000,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5xG9nNCZ3Wc2I8dpmrha8y',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5xG9nNCZ3Wc2I8dpmrha8y',
            'is_local': False,
            'name': 'All I Want is Paper Mario',
            'track_id': '5xG9nNCZ3Wc2I8dpmrha8y',
            'track_number': 12,
            'uri': 'spotify:track:5xG9nNCZ3Wc2I8dpmrha8y',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '2STTnw4FJjSXRH6bItWl0F',
                'name': 'StoneEars',
                'uri': 'spotify:artist:2STTnw4FJjSXRH6bItWl0F',
              }),
              dict({
                'artist_id': '5rqsRqoG9bfilmZqxOOkek',
                'name': 'gRRiever',
                'uri': 'spotify:artist:5rqsRqoG9bfilmZqxOOkek',
              }),
              dict({
                'artist_id': '6QqFHkMOC59TL7W5hfOsiU',
                'name': 'SofiUH',
                'uri': 'spotify:artist:6QqFHkMOC59TL7W5hfOsiU',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 146000,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/16VDwDiT4YNIVSyJ7RMXsv',
            }),
            'href': 'https://api.spotify.com/v1/tracks/16VDwDiT4YNIVSyJ7RMXsv',
            'is_local': False,
            'name': 'Confetti Line',
            'track_id': '16VDwDiT4YNIVSyJ7RMXsv',
            'track_number': 13,
            'uri': 'spotify:track:16VDwDiT4YNIVSyJ7RMXsv',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '3lrmsbi43nA5svDePADyHl',
                'name': 'froggman',
                'uri': 'spotify:artist:3lrmsbi43nA5svDePADyHl',
              }),
              dict({
                'artist_id': '6qLmutNfMLFolEujWZGO6p',
                'name': 'UneasyFlame',
                'uri': 'spotify:artist:6qLmutNfMLFolEujWZGO6p',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 141000,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6RG0t1o3B6nuzc5GegyY2v',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6RG0t1o3B6nuzc5GegyY2v',
            'is_local': False,
            'name': 'The Wedding Invite',
            'track_id': '6RG0t1o3B6nuzc5GegyY2v',
            'track_number': 14,
            'uri': 'spotify:track:6RG0t1o3B6nuzc5GegyY2v',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '78F4dqW3GJqRzy3EDzHfba',
                'name': 'Alphons',
                'uri': 'spotify:artist:78F4dqW3GJqRzy3EDzHfba',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 178285,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/15g1itLc4kYRXjHMY8aao6',
            }),
            'href': 'https://api.spotify.com/v1/tracks/15g1itLc4kYRXjHMY8aao6',
            'is_local': False,
            'name': 'Only a Legend',
            'track_id': '15g1itLc4kYRXjHMY8aao6',
            'track_number': 15,
            'uri': 'spotify:track:15g1itLc4kYRXjHMY8aao6',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '7xplDB5Ftf0oECpcFlKE99',
                'name': 'Owen CMYK',
                'uri': 'spotify:artist:7xplDB5Ftf0oECpcFlKE99',
              }),
              dict({
                'artist_id': '2jTOWoCU8yUCNkHN1hzSNm',
                'name': 'badger',
                'uri': 'spotify:artist:2jTOWoCU8yUCNkHN1hzSNm',
              }),
              dict({
                'artist_id': '60Y38Hh6PlzEjjpJno5P6p',
                'name': 'dropspindle',
                'uri': 'spotify:artist:60Y38Hh6PlzEjjpJno5P6p',
              }),
              dict({
                'artist_id': '6TgYktqPP6KLGoU6KxYq0s',
                'name': 'FiN',
                'uri': 'spotify:artist:6TgYktqPP6KLGoU6KxYq0s',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 93666,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/080DOCEfEIqct0qvHwKZRe',
            }),
            'href': 'https://api.spotify.com/v1/tracks/080DOCEfEIqct0qvHwKZRe',
            'is_local': False,
            'name': 'Paradise Found',
            'track_id': '080DOCEfEIqct0qvHwKZRe',
            'track_number': 16,
            'uri': 'spotify:track:080DOCEfEIqct0qvHwKZRe',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5B7d27dL276bbzzQ360IYN',
                'name': 'the atriarchy',
                'uri': 'spotify:artist:5B7d27dL276bbzzQ360IYN',
              }),
              dict({
                'artist_id': '0g4gQ5TcCB3HJH6ktWjKYC',
                'name': 'ask the storyteller',
                'uri': 'spotify:artist:0g4gQ5TcCB3HJH6ktWjKYC',
              }),
              dict({
                'artist_id': '49X16juWaNmVsSkftsPI9u',
                'name': 'javid74',
                'uri': 'spotify:artist:49X16juWaNmVsSkftsPI9u',
              }),
              dict({
                'artist_id': '3ehLuD3NDXoO0lmL8cZxSw',
                'name': 'MikesHardest',
                'uri': 'spotify:artist:3ehLuD3NDXoO0lmL8cZxSw',
              }),
              dict({
                'artist_id': '79Mo8yyzVDo0uyeAKimv7W',
                'name': 'RDCwest',
                'uri': 'spotify:artist:79Mo8yyzVDo0uyeAKimv7W',
              }),
              dict({
                'artist_id': '4QsvqI4nb9TpdwqOrbZcHQ',
                'name': 'Sio',
                'uri': 'spotify:artist:4QsvqI4nb9TpdwqOrbZcHQ',
              }),
              dict({
                'artist_id': '4qsHDbno8XG3abDsyq8ztN',
                'name': 'mango',
                'uri': 'spotify:artist:4qsHDbno8XG3abDsyq8ztN',
              }),
              dict({
                'artist_id': '26z8iLfADGuSugsu63BW2s',
                'name': 'Confuzzled',
                'uri': 'spotify:artist:26z8iLfADGuSugsu63BW2s',
              }),
              dict({
                'artist_id': '3lrmsbi43nA5svDePADyHl',
                'name': 'froggman',
                'uri': 'spotify:artist:3lrmsbi43nA5svDePADyHl',
              }),
              dict({
                'artist_id': '6HiHuFsJrutJGZT2GAwG4L',
                'name': 'itsAZ',
                'uri': 'spotify:artist:6HiHuFsJrutJGZT2GAwG4L',
              }),
              dict({
                'artist_id': '2RaLCgWRwHSBJySoMVZi1U',
                'name': 'JPecs',
                'uri': 'spotify:artist:2RaLCgWRwHSBJySoMVZi1U',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 703910,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3gTWK8IiRrXjbPGgz6KD55',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3gTWK8IiRrXjbPGgz6KD55',
            'is_local': False,
            'name': 'Revelations 5:22',
            'track_id': '3gTWK8IiRrXjbPGgz6KD55',
            'track_number': 17,
            'uri': 'spotify:track:3gTWK8IiRrXjbPGgz6KD55',
          }),
        ]),
        'uri': 'spotify:album:0m14dyyJemQy44KVhsKnaj',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 6, 6, 22, 0, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '0GpklLqjWNrhropGa4XRRD',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
            'name': 'Alfie Templeman',
            'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2734d05e22092c4c9920d2567ce',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e024d05e22092c4c9920d2567ce',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048514d05e22092c4c9920d2567ce',
            'width': 64,
          }),
        ]),
        'name': 'Radiosoul',
        'release_date': '2024-06-07',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 11,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 315327,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5YualyOibWHyram0jfyBsV',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5YualyOibWHyram0jfyBsV',
            'is_local': False,
            'name': 'Radiosoul',
            'track_id': '5YualyOibWHyram0jfyBsV',
            'track_number': 1,
            'uri': 'spotify:track:5YualyOibWHyram0jfyBsV',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 202033,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1eVzbEkjDGzxqeFNNNrgBm',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1eVzbEkjDGzxqeFNNNrgBm',
            'is_local': False,
            'name': 'Eyes Wide Shut',
            'track_id': '1eVzbEkjDGzxqeFNNNrgBm',
            'track_number': 2,
            'uri': 'spotify:track:1eVzbEkjDGzxqeFNNNrgBm',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 206484,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6Ttp9JrzcpNYG0upW6NKRO',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6Ttp9JrzcpNYG0upW6NKRO',
            'is_local': False,
            'name': 'This Is Just The Beginning',
            'track_id': '6Ttp9JrzcpNYG0upW6NKRO',
            'track_number': 3,
            'uri': 'spotify:track:6Ttp9JrzcpNYG0upW6NKRO',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 212302,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2M7SyIuOuPozGJY1c6xDXL',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2M7SyIuOuPozGJY1c6xDXL',
            'is_local': False,
            'name': 'Vultures',
            'track_id': '2M7SyIuOuPozGJY1c6xDXL',
            'track_number': 4,
            'uri': 'spotify:track:2M7SyIuOuPozGJY1c6xDXL',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 186991,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6n1VD2aPzgGbZWMvRdgSPA',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6n1VD2aPzgGbZWMvRdgSPA',
            'is_local': False,
            'name': 'Drag',
            'track_id': '6n1VD2aPzgGbZWMvRdgSPA',
            'track_number': 5,
            'uri': 'spotify:track:6n1VD2aPzgGbZWMvRdgSPA',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 211120,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0eFTxYwpRTxyefxYlBJq6L',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0eFTxYwpRTxyefxYlBJq6L',
            'is_local': False,
            'name': 'Hello Lonely',
            'track_id': '0eFTxYwpRTxyefxYlBJq6L',
            'track_number': 6,
            'uri': 'spotify:track:0eFTxYwpRTxyefxYlBJq6L',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
              dict({
                'artist_id': '3yDIp0kaq9EFKe07X1X2rz',
                'name': 'Nile Rodgers',
                'uri': 'spotify:artist:3yDIp0kaq9EFKe07X1X2rz',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 160932,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5I0qy4t38jwAPKsHS2WPnT',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5I0qy4t38jwAPKsHS2WPnT',
            'is_local': False,
            'name': 'Just A Dance',
            'track_id': '5I0qy4t38jwAPKsHS2WPnT',
            'track_number': 7,
            'uri': 'spotify:track:5I0qy4t38jwAPKsHS2WPnT',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 204074,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6zJPeOzroQHmIAbhQETa3S',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6zJPeOzroQHmIAbhQETa3S',
            'is_local': False,
            'name': 'Submarine',
            'track_id': '6zJPeOzroQHmIAbhQETa3S',
            'track_number': 8,
            'uri': 'spotify:track:6zJPeOzroQHmIAbhQETa3S',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 207430,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/19ZhBuPyYTzNChzoQslVTX',
            }),
            'href': 'https://api.spotify.com/v1/tracks/19ZhBuPyYTzNChzoQslVTX',
            'is_local': False,
            'name': 'Beckham',
            'track_id': '19ZhBuPyYTzNChzoQslVTX',
            'track_number': 9,
            'uri': 'spotify:track:19ZhBuPyYTzNChzoQslVTX',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 157458,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4wTOzQ92UzEBli1ubpcw3u',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4wTOzQ92UzEBli1ubpcw3u',
            'is_local': False,
            'name': 'Switch',
            'track_id': '4wTOzQ92UzEBli1ubpcw3u',
            'track_number': 10,
            'uri': 'spotify:track:4wTOzQ92UzEBli1ubpcw3u',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
                'name': 'Alfie Templeman',
                'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 263354,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/22sc5jdkR8FTgbGWTdOy7t',
            }),
            'href': 'https://api.spotify.com/v1/tracks/22sc5jdkR8FTgbGWTdOy7t',
            'is_local': False,
            'name': 'Run To Tomorrow',
            'track_id': '22sc5jdkR8FTgbGWTdOy7t',
            'track_number': 11,
            'uri': 'spotify:track:22sc5jdkR8FTgbGWTdOy7t',
          }),
        ]),
        'uri': 'spotify:album:0GpklLqjWNrhropGa4XRRD',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 5, 30, 22, 0, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '1Sr34Sc0yqB4SlxanOrit0',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
            'name': 'ODESZA',
            'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273668bf8454b34db4eb2b78dd3',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02668bf8454b34db4eb2b78dd3',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851668bf8454b34db4eb2b78dd3',
            'width': 64,
          }),
        ]),
        'name': 'The Last Goodbye Tour Live',
        'release_date': '2024-05-31',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 27,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 186400,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/24ainScgxd2UDayPsLzzm2',
            }),
            'href': 'https://api.spotify.com/v1/tracks/24ainScgxd2UDayPsLzzm2',
            'is_local': False,
            'name': 'This Version of You (Live)',
            'track_id': '24ainScgxd2UDayPsLzzm2',
            'track_number': 1,
            'uri': 'spotify:track:24ainScgxd2UDayPsLzzm2',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 189985,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4gKFQ6sGKfZr44NXw6wjym',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4gKFQ6sGKfZr44NXw6wjym',
            'is_local': False,
            'name': 'Behind the Sun (Live)',
            'track_id': '4gKFQ6sGKfZr44NXw6wjym',
            'track_number': 2,
            'uri': 'spotify:track:4gKFQ6sGKfZr44NXw6wjym',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 201954,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2W0IElS3uccgQUXKAwVyAt',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2W0IElS3uccgQUXKAwVyAt',
            'is_local': False,
            'name': 'All We Need (Live) (ODESZA VIP Remix)',
            'track_id': '2W0IElS3uccgQUXKAwVyAt',
            'track_number': 3,
            'uri': 'spotify:track:2W0IElS3uccgQUXKAwVyAt',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 267545,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4JK3JhyIl1icooy0uq37DA',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4JK3JhyIl1icooy0uq37DA',
            'is_local': False,
            'name': 'Love Letter (Live) (ODESZA VIP Remix)',
            'track_id': '4JK3JhyIl1icooy0uq37DA',
            'track_number': 4,
            'uri': 'spotify:track:4JK3JhyIl1icooy0uq37DA',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 176459,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1ZVmGzftncwotIcJzkiTQK',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1ZVmGzftncwotIcJzkiTQK',
            'is_local': False,
            'name': 'Say My Name x Late Night (Live)',
            'track_id': '1ZVmGzftncwotIcJzkiTQK',
            'track_number': 5,
            'uri': 'spotify:track:1ZVmGzftncwotIcJzkiTQK',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 151384,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2mOOT12V4TMB9O6p75Hehs',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2mOOT12V4TMB9O6p75Hehs',
            'is_local': False,
            'name': 'In the Rain (Live)',
            'track_id': '2mOOT12V4TMB9O6p75Hehs',
            'track_number': 6,
            'uri': 'spotify:track:2mOOT12V4TMB9O6p75Hehs',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '4iVhFmG8YCCEHANGeUUS9q',
                'name': 'Pretty Lights',
                'uri': 'spotify:artist:4iVhFmG8YCCEHANGeUUS9q',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 96053,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3mqmlOkyeU3hP1rERf6tjv',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3mqmlOkyeU3hP1rERf6tjv',
            'is_local': False,
            'name': "One Day They'll Know (Live) (ODESZA VIP Remix)",
            'track_id': '3mqmlOkyeU3hP1rERf6tjv',
            'track_number': 7,
            'uri': 'spotify:track:3mqmlOkyeU3hP1rERf6tjv',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '6BkSTbIWZrLZZK0sa2GehR',
                'name': 'Charlie Houston',
                'uri': 'spotify:artist:6BkSTbIWZrLZZK0sa2GehR',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 261978,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2A0cPJCmtGITjsKAIhzEfo',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2A0cPJCmtGITjsKAIhzEfo',
            'is_local': False,
            'name': 'Wide Awake (Live)',
            'track_id': '2A0cPJCmtGITjsKAIhzEfo',
            'track_number': 8,
            'uri': 'spotify:track:2A0cPJCmtGITjsKAIhzEfo',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 214092,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1a73OJypd6sgDkAwA75NDX',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1a73OJypd6sgDkAwA75NDX',
            'is_local': False,
            'name': 'Bloom (Live) (ODESZA VIP Remix)',
            'track_id': '1a73OJypd6sgDkAwA75NDX',
            'track_number': 9,
            'uri': 'spotify:track:1a73OJypd6sgDkAwA75NDX',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 268167,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4tL49ueZxBPJD5Z9pmNCAL',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4tL49ueZxBPJD5Z9pmNCAL',
            'is_local': False,
            'name': 'Equal x Boy (Live)',
            'track_id': '4tL49ueZxBPJD5Z9pmNCAL',
            'track_number': 10,
            'uri': 'spotify:track:4tL49ueZxBPJD5Z9pmNCAL',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 116759,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1ZJiqlxrcILMONjWo9wwaW',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1ZJiqlxrcILMONjWo9wwaW',
            'is_local': False,
            'name': 'All My Life (Live)',
            'track_id': '1ZJiqlxrcILMONjWo9wwaW',
            'track_number': 11,
            'uri': 'spotify:track:1ZJiqlxrcILMONjWo9wwaW',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '3NP4jJcW3R6qO6rbtnH0wn',
                'name': 'MARO',
                'uri': 'spotify:artist:3NP4jJcW3R6qO6rbtnH0wn',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 161641,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/59aWxauGOAbQycO8GNK7LE',
            }),
            'href': 'https://api.spotify.com/v1/tracks/59aWxauGOAbQycO8GNK7LE',
            'is_local': False,
            'name': 'Better Now (Live)',
            'track_id': '59aWxauGOAbQycO8GNK7LE',
            'track_number': 12,
            'uri': 'spotify:track:59aWxauGOAbQycO8GNK7LE',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '4qOzMSukiZoiSjPQw8Zs7s',
                'name': 'Mansionair',
                'uri': 'spotify:artist:4qOzMSukiZoiSjPQw8Zs7s',
              }),
              dict({
                'artist_id': '5EBlHXi71tDXnFtroEh7Rg',
                'name': 'Naomi Wild',
                'uri': 'spotify:artist:5EBlHXi71tDXnFtroEh7Rg',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 181843,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7q7B0VRgFKegcxO2Edzbi6',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7q7B0VRgFKegcxO2Edzbi6',
            'is_local': False,
            'name': 'Line Of Sight (Live)',
            'track_id': '7q7B0VRgFKegcxO2Edzbi6',
            'track_number': 13,
            'uri': 'spotify:track:7q7B0VRgFKegcxO2Edzbi6',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '6b5YOgXIliAozdo49vUCJQ',
                'name': 'Izzy Bizu',
                'uri': 'spotify:artist:6b5YOgXIliAozdo49vUCJQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 243413,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0PD6WTOfk9kBi6THqAaBKV',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0PD6WTOfk9kBi6THqAaBKV',
            'is_local': False,
            'name': 'Forgive Me (Live) (ODESZA VIP Remix)',
            'track_id': '0PD6WTOfk9kBi6THqAaBKV',
            'track_number': 14,
            'uri': 'spotify:track:0PD6WTOfk9kBi6THqAaBKV',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 105046,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5r06HL1g9lqxc5CAxBK7an',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5r06HL1g9lqxc5CAxBK7an',
            'is_local': False,
            'name': 'La Ciudad (Live) (ODESZA VIP Remix)',
            'track_id': '5r06HL1g9lqxc5CAxBK7an',
            'track_number': 15,
            'uri': 'spotify:track:5r06HL1g9lqxc5CAxBK7an',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '2MPHBxznH1fj59jbOWY38u',
                'name': 'Sudan Archives',
                'uri': 'spotify:artist:2MPHBxznH1fj59jbOWY38u',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 211440,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7rwME0L7zpCwQgHcIwzbvt',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7rwME0L7zpCwQgHcIwzbvt',
            'is_local': False,
            'name': 'Selfish Soul (Live) (ODESZA VIP Remix)',
            'track_id': '7rwME0L7zpCwQgHcIwzbvt',
            'track_number': 16,
            'uri': 'spotify:track:7rwME0L7zpCwQgHcIwzbvt',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '60yfafz0P3gqaUaOUIddae',
                'name': 'BRONSON',
                'uri': 'spotify:artist:60yfafz0P3gqaUaOUIddae',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 194464,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4UU6fudp68mcPuUFJf1sNA',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4UU6fudp68mcPuUFJf1sNA',
            'is_local': False,
            'name': 'TENSE (Live)',
            'track_id': '4UU6fudp68mcPuUFJf1sNA',
            'track_number': 17,
            'uri': 'spotify:track:4UU6fudp68mcPuUFJf1sNA',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '60yfafz0P3gqaUaOUIddae',
                'name': 'BRONSON',
                'uri': 'spotify:artist:60yfafz0P3gqaUaOUIddae',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 142423,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/41z8eydTUKN0IL0QZtRcIs',
            }),
            'href': 'https://api.spotify.com/v1/tracks/41z8eydTUKN0IL0QZtRcIs',
            'is_local': False,
            'name': 'KEEP MOVING (Live)',
            'track_id': '41z8eydTUKN0IL0QZtRcIs',
            'track_number': 18,
            'uri': 'spotify:track:41z8eydTUKN0IL0QZtRcIs',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 211750,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2hT93dtTBxGOVYQEa3u2pE',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2hT93dtTBxGOVYQEa3u2pE',
            'is_local': False,
            'name': 'Sun Models (Live) (ODESZA VIP Remix)',
            'track_id': '2hT93dtTBxGOVYQEa3u2pE',
            'track_number': 19,
            'uri': 'spotify:track:2hT93dtTBxGOVYQEa3u2pE',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 135054,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/69YWB2KVAMtIcjx01y2nAk',
            }),
            'href': 'https://api.spotify.com/v1/tracks/69YWB2KVAMtIcjx01y2nAk',
            'is_local': False,
            'name': 'Hopeful (Live)',
            'track_id': '69YWB2KVAMtIcjx01y2nAk',
            'track_number': 20,
            'uri': 'spotify:track:69YWB2KVAMtIcjx01y2nAk',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 275331,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1CxylMSGYankQropBSWDP3',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1CxylMSGYankQropBSWDP3',
            'is_local': False,
            'name': 'Across The Room x Falls (Live) (ODESZA VIP Remix)',
            'track_id': '1CxylMSGYankQropBSWDP3',
            'track_number': 21,
            'uri': 'spotify:track:1CxylMSGYankQropBSWDP3',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 216988,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6aocvw4IvUE1zmlAavNkcR',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6aocvw4IvUE1zmlAavNkcR',
            'is_local': False,
            'name': 'Loyal (Live)',
            'track_id': '6aocvw4IvUE1zmlAavNkcR',
            'track_number': 22,
            'uri': 'spotify:track:6aocvw4IvUE1zmlAavNkcR',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 163770,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5XWGvqsLKBAj0y47KpHmlF',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5XWGvqsLKBAj0y47KpHmlF',
            'is_local': False,
            'name': "Don't Stop (Live) (ODESZA VIP Remix)",
            'track_id': '5XWGvqsLKBAj0y47KpHmlF',
            'track_number': 23,
            'uri': 'spotify:track:5XWGvqsLKBAj0y47KpHmlF',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 45000,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2MA8Ep98eY5wRF28zCE5ec',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2MA8Ep98eY5wRF28zCE5ec',
            'is_local': False,
            'name': 'Just A Memory (Interlude) (Live)',
            'track_id': '2MA8Ep98eY5wRF28zCE5ec',
            'track_number': 24,
            'uri': 'spotify:track:2MA8Ep98eY5wRF28zCE5ec',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
              dict({
                'artist_id': '5EBlHXi71tDXnFtroEh7Rg',
                'name': 'Naomi Wild',
                'uri': 'spotify:artist:5EBlHXi71tDXnFtroEh7Rg',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 229816,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6v5Gc28XYQu2cDCmahhlBY',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6v5Gc28XYQu2cDCmahhlBY',
            'is_local': False,
            'name': 'Higher Ground (Live)',
            'track_id': '6v5Gc28XYQu2cDCmahhlBY',
            'track_number': 25,
            'uri': 'spotify:track:6v5Gc28XYQu2cDCmahhlBY',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 383750,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6nwtUZBvCUzWp8HhhGrDu8',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6nwtUZBvCUzWp8HhhGrDu8',
            'is_local': False,
            'name': 'A Moment Apart (Live) (ODESZA VIP Remix)',
            'track_id': '6nwtUZBvCUzWp8HhhGrDu8',
            'track_number': 26,
            'uri': 'spotify:track:6nwtUZBvCUzWp8HhhGrDu8',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '21mKp7DqtSNHhCAU2ugvUw',
                'name': 'ODESZA',
                'uri': 'spotify:artist:21mKp7DqtSNHhCAU2ugvUw',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 419555,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6y6vQOD1k3fBySGpjPmIkJ',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6y6vQOD1k3fBySGpjPmIkJ',
            'is_local': False,
            'name': 'The Last Goodbye (Live)',
            'track_id': '6y6vQOD1k3fBySGpjPmIkJ',
            'track_number': 27,
            'uri': 'spotify:track:6y6vQOD1k3fBySGpjPmIkJ',
          }),
        ]),
        'uri': 'spotify:album:1Sr34Sc0yqB4SlxanOrit0',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 5, 30, 22, 0, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '6YpuiWNRGcMEumvRbEuOvP',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
            'name': 'Becky Hill',
            'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2739af80bdb91f14c69a7b900cb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e029af80bdb91f14c69a7b900cb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048519af80bdb91f14c69a7b900cb',
            'width': 64,
          }),
        ]),
        'name': 'Believe Me Now?',
        'release_date': '2024-05-31',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 15,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '3K9muOlJVKLgH4SIwwZiDe',
                'name': 'Self Esteem',
                'uri': 'spotify:artist:3K9muOlJVKLgH4SIwwZiDe',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 231684,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6RtoIjw4BISeXqbju6b64E',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0djt8pab0Si1xC7B2ddfF4',
            'is_local': False,
            'name': 'True Colours (feat. Self Esteem)',
            'track_id': '0djt8pab0Si1xC7B2ddfF4',
            'track_number': 1,
            'uri': 'spotify:track:0djt8pab0Si1xC7B2ddfF4',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 197014,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6NysRdnw6s1e8v4WfjcdDg',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0rX4zPMMpg8IhCKElJp8lp',
            'is_local': False,
            'name': 'Darkest Hour',
            'track_id': '0rX4zPMMpg8IhCKElJp8lp',
            'track_number': 2,
            'uri': 'spotify:track:0rX4zPMMpg8IhCKElJp8lp',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 175628,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0IRZJ6G7fj0bvShvNkSOFR',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3LcXzMeyG4jy8ERxtzHGgP',
            'is_local': False,
            'name': 'Outside Of Love',
            'track_id': '3LcXzMeyG4jy8ERxtzHGgP',
            'track_number': 3,
            'uri': 'spotify:track:3LcXzMeyG4jy8ERxtzHGgP',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '39B7ChWwrWDs7zXlsu3MoP',
                'name': 'Sonny Fodera',
                'uri': 'spotify:artist:39B7ChWwrWDs7zXlsu3MoP',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 189087,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3pFe9dLAwfnwKt8gM6mqki',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3MLsgTj4GNyq6Nost2T5ya',
            'is_local': False,
            'name': 'Never Be Alone (feat. Sonny Fodera)',
            'track_id': '3MLsgTj4GNyq6Nost2T5ya',
            'track_number': 4,
            'uri': 'spotify:track:3MLsgTj4GNyq6Nost2T5ya',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 148135,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2MLkPm2w8hHjJbg4jpb5e4',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1VjvxoeHjF0DJhsmvLte8a',
            'is_local': False,
            'name': 'Multiply',
            'track_id': '1VjvxoeHjF0DJhsmvLte8a',
            'track_number': 5,
            'uri': 'spotify:track:1VjvxoeHjF0DJhsmvLte8a',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 212421,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2ZZK8s3J4YFFtuPVPEuBKL',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5Bnm9QxfBKxc1sNvZanTBT',
            'is_local': False,
            'name': 'Swim',
            'track_id': '5Bnm9QxfBKxc1sNvZanTBT',
            'track_number': 6,
            'uri': 'spotify:track:5Bnm9QxfBKxc1sNvZanTBT',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 178352,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0Gy9xulTAI3wQ7S2f4Fyg6',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2HYvYa9b8lASSBxgupn7H2',
            'is_local': False,
            'name': 'Man Of My Dreams',
            'track_id': '2HYvYa9b8lASSBxgupn7H2',
            'track_number': 7,
            'uri': 'spotify:track:2HYvYa9b8lASSBxgupn7H2',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 176661,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6rjezxiUUnvLoCxY3Tn0cP',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6yCLuQMWVBBfgwqLaTtks9',
            'is_local': False,
            'name': 'Linger',
            'track_id': '6yCLuQMWVBBfgwqLaTtks9',
            'track_number': 8,
            'uri': 'spotify:track:6yCLuQMWVBBfgwqLaTtks9',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 230657,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7pxYzLcArC8gnj67ebv4yh',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6HHONxXw6BXNg2YSELJn1R',
            'is_local': False,
            'name': 'Lonely Again',
            'track_id': '6HHONxXw6BXNg2YSELJn1R',
            'track_number': 9,
            'uri': 'spotify:track:6HHONxXw6BXNg2YSELJn1R',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '26OmQHradZrF0CS7DrgWDH',
                'name': 'Lewis Thompson',
                'uri': 'spotify:artist:26OmQHradZrF0CS7DrgWDH',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 153742,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2l3WaRRp8nKatWZDVysMUR',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2aAksX61WFBUxWayOhEDJn',
            'is_local': False,
            'name': 'Side Effects',
            'track_id': '2aAksX61WFBUxWayOhEDJn',
            'track_number': 10,
            'uri': 'spotify:track:2aAksX61WFBUxWayOhEDJn',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 156248,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4a4HS3GEdO6rHlvrYzztbh',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3m9uxUtp0P8dF3U0Uny0uY',
            'is_local': False,
            'name': 'Back Around',
            'track_id': '3m9uxUtp0P8dF3U0Uny0uY',
            'track_number': 11,
            'uri': 'spotify:track:3m9uxUtp0P8dF3U0Uny0uY',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 133289,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/43qScrbaWtfJZj9kvy2u2P',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7z7NUTBS73esdMiCtZ9pur',
            'is_local': False,
            'name': 'Keep Holding On',
            'track_id': '7z7NUTBS73esdMiCtZ9pur',
            'track_number': 12,
            'uri': 'spotify:track:7z7NUTBS73esdMiCtZ9pur',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '5spVyRrIk8Es1ZBi2ClEUU',
                'name': 'RILEASA',
                'uri': 'spotify:artist:5spVyRrIk8Es1ZBi2ClEUU',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 164005,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7otRU4xTCpu0QUKW3ekNd5',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5RgB1e7a1KHrXrfT3UuPCc',
            'is_local': False,
            'name': 'One Track Mind (feat. RILEASA)',
            'track_id': '5RgB1e7a1KHrXrfT3UuPCc',
            'track_number': 13,
            'uri': 'spotify:track:5RgB1e7a1KHrXrfT3UuPCc',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '3jNkaOXasoc7RsxdchvEVq',
                'name': 'Chase & Status',
                'uri': 'spotify:artist:3jNkaOXasoc7RsxdchvEVq',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 164914,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5IKc3FhDTzE6LvgLaB1Q6M',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3VFaV7Mw0di4XFE84eHnrC',
            'is_local': False,
            'name': 'Disconnect',
            'track_id': '3VFaV7Mw0di4XFE84eHnrC',
            'track_number': 14,
            'uri': 'spotify:track:3VFaV7Mw0di4XFE84eHnrC',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 179015,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/74EzvNoqJdoBwIap3o8Ycb',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0S9laeO22k8rgM1PqZtgAA',
            'is_local': False,
            'name': 'Right Here',
            'track_id': '0S9laeO22k8rgM1PqZtgAA',
            'track_number': 15,
            'uri': 'spotify:track:0S9laeO22k8rgM1PqZtgAA',
          }),
        ]),
        'uri': 'spotify:album:6YpuiWNRGcMEumvRbEuOvP',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2022, 11, 7, 16, 59, 34, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '1ZzRJDpsGzs8wkkI0w6F8G',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '5vmwWgrlwCfHm1P0vdDFbU',
            'name': 'Maan',
            'uri': 'spotify:artist:5vmwWgrlwCfHm1P0vdDFbU',
          }),
          dict({
            'artist_id': '6mS5GeFyhea6w9OKo8PO3p',
            'name': 'Goldband',
            'uri': 'spotify:artist:6mS5GeFyhea6w9OKo8PO3p',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273f9a6870f342d4e0db4428128',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02f9a6870f342d4e0db4428128',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851f9a6870f342d4e0db4428128',
            'width': 64,
          }),
        ]),
        'name': 'Stiekem ft. Goldband',
        'release_date': '2022-11-04',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '5vmwWgrlwCfHm1P0vdDFbU',
                'name': 'Maan',
                'uri': 'spotify:artist:5vmwWgrlwCfHm1P0vdDFbU',
              }),
              dict({
                'artist_id': '6mS5GeFyhea6w9OKo8PO3p',
                'name': 'Goldband',
                'uri': 'spotify:artist:6mS5GeFyhea6w9OKo8PO3p',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 203437,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1ulgMAx95xb3N33SMklfG3',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1ulgMAx95xb3N33SMklfG3',
            'is_local': False,
            'name': 'Stiekem',
            'track_id': '1ulgMAx95xb3N33SMklfG3',
            'track_number': 1,
            'uri': 'spotify:track:1ulgMAx95xb3N33SMklfG3',
          }),
        ]),
        'uri': 'spotify:album:1ZzRJDpsGzs8wkkI0w6F8G',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2021, 8, 6, 10, 7, 29, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '16mh2RvDOwlv2gw7BFElFf',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
            'name': 'Becky Hill',
            'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
          }),
          dict({
            'artist_id': '66TrUkUZ3RM29dqeDQRgyA',
            'name': 'Ella Eyre',
            'uri': 'spotify:artist:66TrUkUZ3RM29dqeDQRgyA',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273cce0465e13f5f9ff4fbf8590',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02cce0465e13f5f9ff4fbf8590',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851cce0465e13f5f9ff4fbf8590',
            'width': 64,
          }),
        ]),
        'name': 'Business (with Ella Eyre)',
        'release_date': '2021-08-06',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 4,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '66TrUkUZ3RM29dqeDQRgyA',
                'name': 'Ella Eyre',
                'uri': 'spotify:artist:66TrUkUZ3RM29dqeDQRgyA',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 197720,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7f3oSqQXBCUiWtR0m7ieRw',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7f3oSqQXBCUiWtR0m7ieRw',
            'is_local': False,
            'name': 'Business (with Ella Eyre)',
            'track_id': '7f3oSqQXBCUiWtR0m7ieRw',
            'track_number': 1,
            'uri': 'spotify:track:7f3oSqQXBCUiWtR0m7ieRw',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '1Cs0zKBU1kc0i8ypK3B9ai',
                'name': 'David Guetta',
                'uri': 'spotify:artist:1Cs0zKBU1kc0i8ypK3B9ai',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 161386,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6YkclKF41aboSB5Sf4p15l',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6YkclKF41aboSB5Sf4p15l',
            'is_local': False,
            'name': 'Remember (and David Guetta)',
            'track_id': '6YkclKF41aboSB5Sf4p15l',
            'track_number': 2,
            'uri': 'spotify:track:6YkclKF41aboSB5Sf4p15l',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '1IueXOQyABrMOprrzwQJWN',
                'name': 'Sigala',
                'uri': 'spotify:artist:1IueXOQyABrMOprrzwQJWN',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 193360,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2N8HEioDelArgvoInf5pkk',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2N8HEioDelArgvoInf5pkk',
            'is_local': False,
            'name': 'Heaven On My Mind (with Sigala)',
            'track_id': '2N8HEioDelArgvoInf5pkk',
            'track_number': 3,
            'uri': 'spotify:track:2N8HEioDelArgvoInf5pkk',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4EPJlUEBy49EX1wuFOvtjK',
                'name': 'Becky Hill',
                'uri': 'spotify:artist:4EPJlUEBy49EX1wuFOvtjK',
              }),
              dict({
                'artist_id': '26OrZl5U3VNGHU9qUj8EcM',
                'name': 'Shift K3Y',
                'uri': 'spotify:artist:26OrZl5U3VNGHU9qUj8EcM',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 198493,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4RJ9DfYp0sWhPWUjIXKJUx',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4RJ9DfYp0sWhPWUjIXKJUx',
            'is_local': False,
            'name': 'Better Off Without You (feat. Shift K3Y)',
            'track_id': '4RJ9DfYp0sWhPWUjIXKJUx',
            'track_number': 4,
            'uri': 'spotify:track:4RJ9DfYp0sWhPWUjIXKJUx',
          }),
        ]),
        'uri': 'spotify:album:16mh2RvDOwlv2gw7BFElFf',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2019, 9, 17, 7, 0, 48, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '1KPqoSV4Rs89YfgAwbLROr',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '1BAdSa5cdtCNLbvT7gWmtJ',
            'name': 'Conro',
            'uri': 'spotify:artist:1BAdSa5cdtCNLbvT7gWmtJ',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27393f89a7974f0302a2b50a53e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0293f89a7974f0302a2b50a53e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485193f89a7974f0302a2b50a53e',
            'width': 64,
          }),
        ]),
        'name': "What's Love",
        'release_date': '2019-09-17',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '1BAdSa5cdtCNLbvT7gWmtJ',
                'name': 'Conro',
                'uri': 'spotify:artist:1BAdSa5cdtCNLbvT7gWmtJ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 176727,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/21Z6lY56DuaKBZBkPKK4Nk',
            }),
            'href': 'https://api.spotify.com/v1/tracks/21Z6lY56DuaKBZBkPKK4Nk',
            'is_local': False,
            'name': "What's Love",
            'track_id': '21Z6lY56DuaKBZBkPKK4Nk',
            'track_number': 1,
            'uri': 'spotify:track:21Z6lY56DuaKBZBkPKK4Nk',
          }),
        ]),
        'uri': 'spotify:album:1KPqoSV4Rs89YfgAwbLROr',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2019, 4, 5, 7, 8, 25, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '6OSLjWXJHlMRfQwM0HkOhQ',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '1BAdSa5cdtCNLbvT7gWmtJ',
            'name': 'Conro',
            'uri': 'spotify:artist:1BAdSa5cdtCNLbvT7gWmtJ',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2735a76e5f8c200401442fbff3e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e025a76e5f8c200401442fbff3e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048515a76e5f8c200401442fbff3e',
            'width': 64,
          }),
        ]),
        'name': 'Remember You',
        'release_date': '2019-04-05',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '1BAdSa5cdtCNLbvT7gWmtJ',
                'name': 'Conro',
                'uri': 'spotify:artist:1BAdSa5cdtCNLbvT7gWmtJ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 189000,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/20psIOrg7j48rGrlpFXqTI',
            }),
            'href': 'https://api.spotify.com/v1/tracks/796JqxZ3o0ZH6OllNRDuTY',
            'is_local': False,
            'name': 'Remember You',
            'track_id': '796JqxZ3o0ZH6OllNRDuTY',
            'track_number': 1,
            'uri': 'spotify:track:796JqxZ3o0ZH6OllNRDuTY',
          }),
        ]),
        'uri': 'spotify:album:6OSLjWXJHlMRfQwM0HkOhQ',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2019, 3, 31, 2, 37, 47, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '79iwhS4dR28DeLyHZvuoSd',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
            'name': 'RONDÉ',
            'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273755e38d487f8ea2bb2a480b2',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02755e38d487f8ea2bb2a480b2',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851755e38d487f8ea2bb2a480b2',
            'width': 64,
          }),
        ]),
        'name': 'Flourish',
        'release_date': '2019-03-08',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 12,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 228354,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2IhMGMdJv5fBUnJCLksKj9',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2IhMGMdJv5fBUnJCLksKj9',
            'is_local': False,
            'name': 'Down',
            'track_id': '2IhMGMdJv5fBUnJCLksKj9',
            'track_number': 1,
            'uri': 'spotify:track:2IhMGMdJv5fBUnJCLksKj9',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 189711,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2bPB38GR1k2UxAjBzEi1DM',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2bPB38GR1k2UxAjBzEi1DM',
            'is_local': False,
            'name': 'Calling',
            'track_id': '2bPB38GR1k2UxAjBzEi1DM',
            'track_number': 2,
            'uri': 'spotify:track:2bPB38GR1k2UxAjBzEi1DM',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 227549,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6UeOqEdtIALSGkLPcw7Rl6',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6UeOqEdtIALSGkLPcw7Rl6',
            'is_local': False,
            'name': 'Fourteen',
            'track_id': '6UeOqEdtIALSGkLPcw7Rl6',
            'track_number': 3,
            'uri': 'spotify:track:6UeOqEdtIALSGkLPcw7Rl6',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 201566,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/21alqUkGOEr7DEJncHfQqM',
            }),
            'href': 'https://api.spotify.com/v1/tracks/21alqUkGOEr7DEJncHfQqM',
            'is_local': False,
            'name': 'Anyone',
            'track_id': '21alqUkGOEr7DEJncHfQqM',
            'track_number': 4,
            'uri': 'spotify:track:21alqUkGOEr7DEJncHfQqM',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 200662,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4PjkUwMvr7g1M45DSqlQkH',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4PjkUwMvr7g1M45DSqlQkH',
            'is_local': False,
            'name': 'Difference',
            'track_id': '4PjkUwMvr7g1M45DSqlQkH',
            'track_number': 5,
            'uri': 'spotify:track:4PjkUwMvr7g1M45DSqlQkH',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 215348,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0XZjcj8GUyWCEcnDgWDoTI',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0XZjcj8GUyWCEcnDgWDoTI',
            'is_local': False,
            'name': 'No Worries',
            'track_id': '0XZjcj8GUyWCEcnDgWDoTI',
            'track_number': 6,
            'uri': 'spotify:track:0XZjcj8GUyWCEcnDgWDoTI',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 244935,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4p0uwwMD4GIUlNZACqPJXO',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4p0uwwMD4GIUlNZACqPJXO',
            'is_local': False,
            'name': 'New Day',
            'track_id': '4p0uwwMD4GIUlNZACqPJXO',
            'track_number': 7,
            'uri': 'spotify:track:4p0uwwMD4GIUlNZACqPJXO',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 183355,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3suDoAXX6otxz0WBMHc6pp',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3suDoAXX6otxz0WBMHc6pp',
            'is_local': False,
            'name': 'We Got It',
            'track_id': '3suDoAXX6otxz0WBMHc6pp',
            'track_number': 8,
            'uri': 'spotify:track:3suDoAXX6otxz0WBMHc6pp',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 216855,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7GqsS485BuDKtkuKdAaiRq',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7GqsS485BuDKtkuKdAaiRq',
            'is_local': False,
            'name': 'Be Mine',
            'track_id': '7GqsS485BuDKtkuKdAaiRq',
            'track_number': 9,
            'uri': 'spotify:track:7GqsS485BuDKtkuKdAaiRq',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 255650,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/12o2tk8IhIDUiv9wargB8M',
            }),
            'href': 'https://api.spotify.com/v1/tracks/12o2tk8IhIDUiv9wargB8M',
            'is_local': False,
            'name': 'Underwater',
            'track_id': '12o2tk8IhIDUiv9wargB8M',
            'track_number': 10,
            'uri': 'spotify:track:12o2tk8IhIDUiv9wargB8M',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 206862,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4AHrbiyZ2bPgcYMMh9I7UV',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4AHrbiyZ2bPgcYMMh9I7UV',
            'is_local': False,
            'name': 'You And I',
            'track_id': '4AHrbiyZ2bPgcYMMh9I7UV',
            'track_number': 11,
            'uri': 'spotify:track:4AHrbiyZ2bPgcYMMh9I7UV',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4hj9dun9KpnBukLv7Hgfkr',
                'name': 'RONDÉ',
                'uri': 'spotify:artist:4hj9dun9KpnBukLv7Hgfkr',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 201932,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/725MTKVYYrxtenlGtLfAIa',
            }),
            'href': 'https://api.spotify.com/v1/tracks/725MTKVYYrxtenlGtLfAIa',
            'is_local': False,
            'name': 'All That Was Left',
            'track_id': '725MTKVYYrxtenlGtLfAIa',
            'track_number': 12,
            'uri': 'spotify:track:725MTKVYYrxtenlGtLfAIa',
          }),
        ]),
        'uri': 'spotify:album:79iwhS4dR28DeLyHZvuoSd',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2018, 10, 4, 21, 11, 2, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '7lsSj3qTDdmEqVvVLdoQWZ',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '5vBrKGOjN10BMwB0cJADj4',
            'name': 'bülow',
            'uri': 'spotify:artist:5vBrKGOjN10BMwB0cJADj4',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273be16261b5a920d5fc60e71f5',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02be16261b5a920d5fc60e71f5',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851be16261b5a920d5fc60e71f5',
            'width': 64,
          }),
        ]),
        'name': 'Not A Love Song (King Arthur Remix)',
        'release_date': '2018-02-16',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '5vBrKGOjN10BMwB0cJADj4',
                'name': 'bülow',
                'uri': 'spotify:artist:5vBrKGOjN10BMwB0cJADj4',
              }),
              dict({
                'artist_id': '2qPxiZiD34NtmokWN6RoP2',
                'name': 'King Topher',
                'uri': 'spotify:artist:2qPxiZiD34NtmokWN6RoP2',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 203706,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4wD34HA8cOSV32SlItkckN',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4wD34HA8cOSV32SlItkckN',
            'is_local': False,
            'name': 'Not A Love Song - King Arthur Remix',
            'track_id': '4wD34HA8cOSV32SlItkckN',
            'track_number': 1,
            'uri': 'spotify:track:4wD34HA8cOSV32SlItkckN',
          }),
        ]),
        'uri': 'spotify:album:7lsSj3qTDdmEqVvVLdoQWZ',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2018, 4, 16, 10, 43, 21, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '6RxUo05RvVNA06y5BVGoth',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
            'name': 'Youngr',
            'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273d68094b6d6985023d3ada305',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02d68094b6d6985023d3ada305',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851d68094b6d6985023d3ada305',
            'width': 64,
          }),
        ]),
        'name': 'This Is Not An Album',
        'release_date': '2018-01-05',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 10,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 169739,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3tpB406UcLxAKAZMXMHlpY',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3tpB406UcLxAKAZMXMHlpY',
            'is_local': False,
            'name': 'Ooh Lordy',
            'track_id': '3tpB406UcLxAKAZMXMHlpY',
            'track_number': 1,
            'uri': 'spotify:track:3tpB406UcLxAKAZMXMHlpY',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 203114,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1tmDa0FhMn8XSOpEJbVu25',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1tmDa0FhMn8XSOpEJbVu25',
            'is_local': False,
            'name': 'Out Of My System',
            'track_id': '1tmDa0FhMn8XSOpEJbVu25',
            'track_number': 2,
            'uri': 'spotify:track:1tmDa0FhMn8XSOpEJbVu25',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '4W48hZAnAHVOC2c8WH8pcq',
                'name': 'The Temper Trap',
                'uri': 'spotify:artist:4W48hZAnAHVOC2c8WH8pcq',
              }),
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 294005,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1QBOH8W1ZhRoTOoHvfaZn7',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1QBOH8W1ZhRoTOoHvfaZn7',
            'is_local': False,
            'name': 'Sweet Disposition - Bootleg',
            'track_id': '1QBOH8W1ZhRoTOoHvfaZn7',
            'track_number': 3,
            'uri': 'spotify:track:1QBOH8W1ZhRoTOoHvfaZn7',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 209152,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5zC1NaCQeETz5b0IysG5Ub',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5zC1NaCQeETz5b0IysG5Ub',
            'is_local': False,
            'name': "'93",
            'track_id': '5zC1NaCQeETz5b0IysG5Ub',
            'track_number': 4,
            'uri': 'spotify:track:5zC1NaCQeETz5b0IysG5Ub',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
              dict({
                'artist_id': '6F3vLfyutkUhpM50G84eMt',
                'name': 'Endor',
                'uri': 'spotify:artist:6F3vLfyutkUhpM50G84eMt',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 208665,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/44478ajpb5DPFaWVDbKSPp',
            }),
            'href': 'https://api.spotify.com/v1/tracks/44478ajpb5DPFaWVDbKSPp',
            'is_local': False,
            'name': 'Give It Up - Youngr x Endor',
            'track_id': '44478ajpb5DPFaWVDbKSPp',
            'track_number': 5,
            'uri': 'spotify:track:44478ajpb5DPFaWVDbKSPp',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 185334,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7MTsaNHz8evXD32xLjfjDu',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7MTsaNHz8evXD32xLjfjDu',
            'is_local': False,
            'name': "What's Next",
            'track_id': '7MTsaNHz8evXD32xLjfjDu',
            'track_number': 6,
            'uri': 'spotify:track:7MTsaNHz8evXD32xLjfjDu',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 212937,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1J7U9B8nPjKrLL7xDZ56F2',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1J7U9B8nPjKrLL7xDZ56F2',
            'is_local': False,
            'name': 'Monsters',
            'track_id': '1J7U9B8nPjKrLL7xDZ56F2',
            'track_number': 7,
            'uri': 'spotify:track:1J7U9B8nPjKrLL7xDZ56F2',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 162652,
            'explicit': True,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5Zp2xpSwgUyHVtGJZ31kZ1',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5Zp2xpSwgUyHVtGJZ31kZ1',
            'is_local': False,
            'name': 'Too Keen',
            'track_id': '5Zp2xpSwgUyHVtGJZ31kZ1',
            'track_number': 8,
            'uri': 'spotify:track:5Zp2xpSwgUyHVtGJZ31kZ1',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 241406,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5RQdeW1apwe934zbntXROv',
            }),
            'href': 'https://api.spotify.com/v1/tracks/5RQdeW1apwe934zbntXROv',
            'is_local': False,
            'name': 'September Sun',
            'track_id': '5RQdeW1apwe934zbntXROv',
            'track_number': 9,
            'uri': 'spotify:track:5RQdeW1apwe934zbntXROv',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '5TrkbV9x6OdTBlzWPJeBz5',
                'name': 'Youngr',
                'uri': 'spotify:artist:5TrkbV9x6OdTBlzWPJeBz5',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 219499,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4gD4ja2LvNDfCK8yeyXJwo',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4gD4ja2LvNDfCK8yeyXJwo',
            'is_local': False,
            'name': 'Disappear',
            'track_id': '4gD4ja2LvNDfCK8yeyXJwo',
            'track_number': 10,
            'uri': 'spotify:track:4gD4ja2LvNDfCK8yeyXJwo',
          }),
        ]),
        'uri': 'spotify:album:6RxUo05RvVNA06y5BVGoth',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2018, 3, 6, 23, 37, 54, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '0wZ3CJWOsyYAfM8q5eatk2',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '12x5fAPl1U05wUHCI5O0uq',
            'name': 'Right-O',
            'uri': 'spotify:artist:12x5fAPl1U05wUHCI5O0uq',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2736860f0c34271a7e09b4e4a79',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e026860f0c34271a7e09b4e4a79',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048516860f0c34271a7e09b4e4a79',
            'width': 64,
          }),
        ]),
        'name': 'Mind Control (feat. Tyler Sjöström)',
        'release_date': '2017-08-02',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '12x5fAPl1U05wUHCI5O0uq',
                'name': 'Right-O',
                'uri': 'spotify:artist:12x5fAPl1U05wUHCI5O0uq',
              }),
              dict({
                'artist_id': '3JRrxifzOpGOalOfGHEJNB',
                'name': 'Tyler Sjöström',
                'uri': 'spotify:artist:3JRrxifzOpGOalOfGHEJNB',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 216920,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2h07NImWicduAsv0P1YAJj',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2h07NImWicduAsv0P1YAJj',
            'is_local': False,
            'name': 'Mind Control (feat. Tyler Sjöström)',
            'track_id': '2h07NImWicduAsv0P1YAJj',
            'track_number': 1,
            'uri': 'spotify:track:2h07NImWicduAsv0P1YAJj',
          }),
        ]),
        'uri': 'spotify:album:0wZ3CJWOsyYAfM8q5eatk2',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2017, 10, 27, 6, 59, 9, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '5hXgjTSvzx1CtmTtRlCOTZ',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '3jsyANBBy6gOZUSQhiGclx',
            'name': 'Ninja Sex Party',
            'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27305988260c12c85212424cb2e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0205988260c12c85212424cb2e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485105988260c12c85212424cb2e',
            'width': 64,
          }),
        ]),
        'name': 'Under the Covers, Vol. II',
        'release_date': '2017-10-27',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 12,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 281845,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5IHEdF6MgXf40QE3RDHtzt',
            }),
            'href': 'https://api.spotify.com/v1/tracks/29ulX8eaHMuvvpxMypnbBf',
            'is_local': False,
            'name': 'Africa',
            'track_id': '29ulX8eaHMuvvpxMypnbBf',
            'track_number': 1,
            'uri': 'spotify:track:29ulX8eaHMuvvpxMypnbBf',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 267838,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2GN3Rt5qC68aZvw8zmtTkC',
            }),
            'href': 'https://api.spotify.com/v1/tracks/39DSj27ujl9BihMu43sTw1',
            'is_local': False,
            'name': 'More Than a Feeling',
            'track_id': '39DSj27ujl9BihMu43sTw1',
            'track_number': 2,
            'uri': 'spotify:track:39DSj27ujl9BihMu43sTw1',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 262142,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1kyZdBlUpvZFPZdhxQvsVj',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2sZs3rISCGPRyPREHlSE0z',
            'is_local': False,
            'name': 'Limelight',
            'track_id': '2sZs3rISCGPRyPREHlSE0z',
            'track_number': 3,
            'uri': 'spotify:track:2sZs3rISCGPRyPREHlSE0z',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 223300,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6QTuFdY6uZixx4NkRmVJi3',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7EPD53JTcYnIPFvopzpHFc',
            'is_local': False,
            'name': 'Pour Some Sugar on Me',
            'track_id': '7EPD53JTcYnIPFvopzpHFc',
            'track_number': 4,
            'uri': 'spotify:track:7EPD53JTcYnIPFvopzpHFc',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 262883,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1RSB4C6tFOrbRgQhklvETU',
            }),
            'href': 'https://api.spotify.com/v1/tracks/77IK5Sm5J7XWJNkUBsdGZi',
            'is_local': False,
            'name': 'Something About You',
            'track_id': '77IK5Sm5J7XWJNkUBsdGZi',
            'track_number': 5,
            'uri': 'spotify:track:77IK5Sm5J7XWJNkUBsdGZi',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 321158,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/43Mb0MmXn8tCa2WFnuG8Ll',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3m4Lf46zw4hgNGJFjlgOJt',
            'is_local': False,
            'name': 'In Your Eyes',
            'track_id': '3m4Lf46zw4hgNGJFjlgOJt',
            'track_number': 6,
            'uri': 'spotify:track:3m4Lf46zw4hgNGJFjlgOJt',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 203705,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3WQGwy4LNHMmeeb2PDfgWo',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6fIOFyrzPiuI6lC12cpUYo',
            'is_local': False,
            'name': 'Heat of the Moment',
            'track_id': '6fIOFyrzPiuI6lC12cpUYo',
            'track_number': 7,
            'uri': 'spotify:track:6fIOFyrzPiuI6lC12cpUYo',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 245947,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/7fX3wR67GCCvVOAf3G8KRE',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1U4pwphUiDnEY1Zk8tB74O',
            'is_local': False,
            'name': 'You Spin Me Round (Like a Record)',
            'track_id': '1U4pwphUiDnEY1Zk8tB74O',
            'track_number': 8,
            'uri': 'spotify:track:1U4pwphUiDnEY1Zk8tB74O',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 282929,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1UJIy63m1gIRwG8pnlwOuA',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2B2dzEwWOilmaUXaUeN7uk',
            'is_local': False,
            'name': "Don't Lose My Number",
            'track_id': '2B2dzEwWOilmaUXaUeN7uk',
            'track_number': 9,
            'uri': 'spotify:track:2B2dzEwWOilmaUXaUeN7uk',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 205357,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/6wgaV6DPkO3Gi2AmN1uYJn',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7vqBLy4AKm9k437P0Gy7g6',
            'is_local': False,
            'name': 'I Wish',
            'track_id': '7vqBLy4AKm9k437P0Gy7g6',
            'track_number': 10,
            'uri': 'spotify:track:7vqBLy4AKm9k437P0Gy7g6',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 233167,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3zWUeG4zGXdCrcHX5eGxId',
            }),
            'href': 'https://api.spotify.com/v1/tracks/39GgQ44f6TBKV4EhLfwi4Z',
            'is_local': False,
            'name': 'Your Wildest Dreams',
            'track_id': '39GgQ44f6TBKV4EhLfwi4Z',
            'track_number': 11,
            'uri': 'spotify:track:39GgQ44f6TBKV4EhLfwi4Z',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '3jsyANBBy6gOZUSQhiGclx',
                'name': 'Ninja Sex Party',
                'uri': 'spotify:artist:3jsyANBBy6gOZUSQhiGclx',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 250862,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/3lH4ASiSIFbmyivT3WD6Tp',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6xMWP3oKLuY2jkikQ54r4X',
            'is_local': False,
            'name': 'Rocket Man',
            'track_id': '6xMWP3oKLuY2jkikQ54r4X',
            'track_number': 12,
            'uri': 'spotify:track:6xMWP3oKLuY2jkikQ54r4X',
          }),
        ]),
        'uri': 'spotify:album:5hXgjTSvzx1CtmTtRlCOTZ',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2017, 9, 17, 20, 15, 3, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '6cyUcKNdyK1NRBQ7vjEwVY',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
            'name': 'Take That',
            'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2738719c1988fa08b227865e873',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e028719c1988fa08b227865e873',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048518719c1988fa08b227865e873',
            'width': 64,
          }),
        ]),
        'name': 'Wonderland (Deluxe)',
        'release_date': '2017-03-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 15,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 293266,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4KN1xC3IVZCA5c5h5yIHsH',
            }),
            'href': 'https://api.spotify.com/v1/tracks/4BlCSLODDzs7WObKGS8v0F',
            'is_local': False,
            'name': 'Wonderland',
            'track_id': '4BlCSLODDzs7WObKGS8v0F',
            'track_number': 1,
            'uri': 'spotify:track:4BlCSLODDzs7WObKGS8v0F',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 233613,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1GlyElASkmRfmPIEfxMlTC',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0dhMVWyuExZRNEDcSaxcpk',
            'is_local': False,
            'name': 'Giants',
            'track_id': '0dhMVWyuExZRNEDcSaxcpk',
            'track_number': 2,
            'uri': 'spotify:track:0dhMVWyuExZRNEDcSaxcpk',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 209720,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/66W3clk73gnkw3E1aflNrP',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3V3zCg3kqfeag16CRxyOOs',
            'is_local': False,
            'name': 'New Day',
            'track_id': '3V3zCg3kqfeag16CRxyOOs',
            'track_number': 3,
            'uri': 'spotify:track:3V3zCg3kqfeag16CRxyOOs',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 209106,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1F0ZBh5thKn3aL8oEk0eyJ',
            }),
            'href': 'https://api.spotify.com/v1/tracks/38Uy1sMppejotYXJUqPUYq',
            'is_local': False,
            'name': 'Lucky Stars',
            'track_id': '38Uy1sMppejotYXJUqPUYq',
            'track_number': 4,
            'uri': 'spotify:track:38Uy1sMppejotYXJUqPUYq',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 233906,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/2T2S4nzIZLr9wSiFbEntsW',
            }),
            'href': 'https://api.spotify.com/v1/tracks/7437sm1u9zsNAtFmH1ZE16',
            'is_local': False,
            'name': 'And The Band Plays',
            'track_id': '7437sm1u9zsNAtFmH1ZE16',
            'track_number': 5,
            'uri': 'spotify:track:7437sm1u9zsNAtFmH1ZE16',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 194106,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4hIimoY7T2xMWkVIlBzE9i',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2kIqgQtq2yHCwkTKS4Vs36',
            'is_local': False,
            'name': 'Superstar',
            'track_id': '2kIqgQtq2yHCwkTKS4Vs36',
            'track_number': 6,
            'uri': 'spotify:track:2kIqgQtq2yHCwkTKS4Vs36',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 224800,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5JTQ4h07j2UwgL32YFvkLf',
            }),
            'href': 'https://api.spotify.com/v1/tracks/1T5CW62fLSdOLsRT0BUir8',
            'is_local': False,
            'name': 'Hope',
            'track_id': '1T5CW62fLSdOLsRT0BUir8',
            'track_number': 7,
            'uri': 'spotify:track:1T5CW62fLSdOLsRT0BUir8',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 175040,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1stKEQ8sgdcYGlasyTNFRx',
            }),
            'href': 'https://api.spotify.com/v1/tracks/51jxNWFFT5WUXIErQzwiUY',
            'is_local': False,
            'name': 'River',
            'track_id': '51jxNWFFT5WUXIErQzwiUY',
            'track_number': 8,
            'uri': 'spotify:track:51jxNWFFT5WUXIErQzwiUY',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 196453,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4Agh7A8QEcK6ojtTTKONFK',
            }),
            'href': 'https://api.spotify.com/v1/tracks/018jJKmcAvODfvyNuBfcjm',
            'is_local': False,
            'name': 'The Last Poet',
            'track_id': '018jJKmcAvODfvyNuBfcjm',
            'track_number': 9,
            'uri': 'spotify:track:018jJKmcAvODfvyNuBfcjm',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 252760,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0EiDO4qFMDbaKe4ETIz0ur',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6RxdVdQS85HYIpXwJw1j6J',
            'is_local': False,
            'name': 'Every Revolution',
            'track_id': '6RxdVdQS85HYIpXwJw1j6J',
            'track_number': 10,
            'uri': 'spotify:track:6RxdVdQS85HYIpXwJw1j6J',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 269466,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4Lx8xU5DQOmnNNCpMOOaoz',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0ONIdjj0gIWoA8vOPlM9ST',
            'is_local': False,
            'name': "It's All For You",
            'track_id': '0ONIdjj0gIWoA8vOPlM9ST',
            'track_number': 11,
            'uri': 'spotify:track:0ONIdjj0gIWoA8vOPlM9ST',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 199386,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0Ucqe7Z74UP1DyNcGLiiEH',
            }),
            'href': 'https://api.spotify.com/v1/tracks/3eldJOi7FuF7LXoWRneab9',
            'is_local': False,
            'name': "Don't Give Up On Me",
            'track_id': '3eldJOi7FuF7LXoWRneab9',
            'track_number': 12,
            'uri': 'spotify:track:3eldJOi7FuF7LXoWRneab9',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 269733,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/1yu6lK4SPpvv1b9OtUZ50V',
            }),
            'href': 'https://api.spotify.com/v1/tracks/6yH5jYImETi3IZwAZY1gva',
            'is_local': False,
            'name': 'Up',
            'track_id': '6yH5jYImETi3IZwAZY1gva',
            'track_number': 13,
            'uri': 'spotify:track:6yH5jYImETi3IZwAZY1gva',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 261440,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/5cgPKFbHlpiC7OwNgRFp19',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0qStm2vt5sMGgzbp68dADd',
            'is_local': False,
            'name': 'Come On Love',
            'track_id': '0qStm2vt5sMGgzbp68dADd',
            'track_number': 14,
            'uri': 'spotify:track:0qStm2vt5sMGgzbp68dADd',
          }),
          dict({
            'artists': list([
              dict({
                'artist_id': '01pKrlgPJhm5dB4lneYAqS',
                'name': 'Sigma',
                'uri': 'spotify:artist:01pKrlgPJhm5dB4lneYAqS',
              }),
              dict({
                'artist_id': '1XgFuvRd7r5g0h844A5ZUQ',
                'name': 'Take That',
                'uri': 'spotify:artist:1XgFuvRd7r5g0h844A5ZUQ',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 197453,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/4zJIKsSumCbZgcbWz1UNPL',
            }),
            'href': 'https://api.spotify.com/v1/tracks/2ddfMbBXPXgq2gjWBe0Mth',
            'is_local': False,
            'name': 'Cry',
            'track_id': '2ddfMbBXPXgq2gjWBe0Mth',
            'track_number': 15,
            'uri': 'spotify:track:2ddfMbBXPXgq2gjWBe0Mth',
          }),
        ]),
        'uri': 'spotify:album:6cyUcKNdyK1NRBQ7vjEwVY',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2017, 8, 26, 22, 34, 42, tzinfo=datetime.timezone.utc),
      'album': dict({
        'album_id': '0fMJhuTXyqcPEP0B864j8T',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '7f5Zgnp2spUuuzKplmRkt7',
            'name': 'Lost Frequencies',
            'uri': 'spotify:artist:7f5Zgnp2spUuuzKplmRkt7',
          }),
          dict({
            'artist_id': '5TgQ66WuWkoQ2xYxaSTnVP',
            'name': 'Netsky',
            'uri': 'spotify:artist:5TgQ66WuWkoQ2xYxaSTnVP',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273d1686e9f897c253c8d72cc22',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02d1686e9f897c253c8d72cc22',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851d1686e9f897c253c8d72cc22',
            'width': 64,
          }),
        ]),
        'name': 'Here With You',
        'release_date': '2017-06-30',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'tracks': list([
          dict({
            'artists': list([
              dict({
                'artist_id': '7f5Zgnp2spUuuzKplmRkt7',
                'name': 'Lost Frequencies',
                'uri': 'spotify:artist:7f5Zgnp2spUuuzKplmRkt7',
              }),
              dict({
                'artist_id': '5TgQ66WuWkoQ2xYxaSTnVP',
                'name': 'Netsky',
                'uri': 'spotify:artist:5TgQ66WuWkoQ2xYxaSTnVP',
              }),
            ]),
            'disc_number': 1,
            'duration_ms': 159023,
            'explicit': False,
            'external_urls': dict({
              'spotify': 'https://open.spotify.com/track/0u6KLyKbuqAe3aiol9UV8F',
            }),
            'href': 'https://api.spotify.com/v1/tracks/0u6KLyKbuqAe3aiol9UV8F',
            'is_local': False,
            'name': 'Here With You',
            'track_id': '0u6KLyKbuqAe3aiol9UV8F',
            'track_number': 1,
            'uri': 'spotify:track:0u6KLyKbuqAe3aiol9UV8F',
          }),
        ]),
        'uri': 'spotify:album:0fMJhuTXyqcPEP0B864j8T',
      }),
    }),
  ])
# ---
# name: test_get_saved_audiobooks
  list([
    dict({
      'audiobook_id': '58cFIY8IT7yGqR3kHnKqzV',
      'authors': list([
        dict({
          'name': 'Anya Niewierra',
        }),
      ]),
      'description': '''
        Author(s): Anya Niewierra
        Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink<p>Na het succes van de bestsellers <i>Het bloemenmeisje</i> en <i>De Camino</i> komt Anya Niewierra met <i>De nomade</i>. Een aangrijpende thriller over vaderliefde en een verborgen verleden.</p><p>De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.</p><p>Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.</p><p>Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.</p>
        <br>
        <p>‘Anya Niewierra heeft met <i>De nomade</i> weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan <i>De Camino</i>.’<br>
        Heleen Spanjaard, <i>Margriet</i></p><p>‘Verrassend, meeslepend en bloedstollend. <i>De nomade</i> is een waardige opvolger van <i>De Camino</i>.’<br>
        Rob Cobben, cultuurverslaggever <i>Dagblad De Limburger</i></p>
      ''',
      'edition': 'Unabridged',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/show/58cFIY8IT7yGqR3kHnKqzV',
      }),
      'html_description': 'Author(s): Anya Niewierra<br/>Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink<br/>&lt;p&gt;Na het succes van de bestsellers &lt;i&gt;Het bloemenmeisje&lt;/i&gt; en &lt;i&gt;De Camino&lt;/i&gt; komt Anya Niewierra met &lt;i&gt;De nomade&lt;/i&gt;. Een aangrijpende thriller over vaderliefde en een verborgen verleden.&lt;/p&gt;<br/>&lt;p&gt;De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.&lt;/p&gt;<br/>&lt;p&gt;Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.&lt;/p&gt;<br/>&lt;p&gt;Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.&lt;/p&gt;<br/>&lt;br&gt;<br/>&lt;p&gt;‘Anya Niewierra heeft met &lt;i&gt;De nomade&lt;/i&gt; weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan &lt;i&gt;De Camino&lt;/i&gt;.’&lt;br&gt;<br/>Heleen Spanjaard, &lt;i&gt;Margriet&lt;/i&gt;&lt;/p&gt;<br/>&lt;p&gt;‘Verrassend, meeslepend en bloedstollend. &lt;i&gt;De nomade&lt;/i&gt; is een waardige opvolger van &lt;i&gt;De Camino&lt;/i&gt;.’&lt;br&gt;<br/>Rob Cobben, cultuurverslaggever &lt;i&gt;Dagblad De Limburger&lt;/i&gt;&lt;/p&gt;',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        'nl',
      ]),
      'name': 'De nomade',
      'narrators': list([
        dict({
          'name': 'Nienke Brinkhuis',
        }),
        dict({
          'name': 'Cees van Ede',
        }),
        dict({
          'name': 'Mattijn Hartemink',
        }),
      ]),
      'publisher': 'Anya Niewierra',
      'total_chapters': 49,
      'type': 'audiobook',
      'uri': 'spotify:show:58cFIY8IT7yGqR3kHnKqzV',
    }),
  ])
# ---
# name: test_get_saved_episodes
  list([
    dict({
      'added_at': datetime.datetime(2021, 4, 1, 23, 21, 46, tzinfo=datetime.timezone.utc),
      'episode': dict({
        'description': "This week on the podcast Ed is joined by actor, writer and Series 10 contestant, Katherine Parkinson. As well as discussing the new line up and this week's tasks they go back to Series 10 and talk about Katherine's time on the show - expect chat about clay masks, marble runs, spiders and THAT fart noise. You can watch Series 11 of Taskmaster each Thursday on Channel 4 at 9pm.Watch Taskmaster Bleeped on All 4Get in touch with Ed and future guests:taskmasterpodcast@gmail.com\xa0Visit the Taskmaster Youtube channelwww.youtube.com/taskmaster\xa0For all your Taskmaster goodies visit\xa0www.taskmasterstore.com\xa0\xa0Taskmaster the podcast is produced by Daisy Knight for Avalon Television Ltd",
        'duration_ms': 3724303,
        'episode_id': '0x25dVaCtjWMmcjDJyuMM5',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0x25dVaCtjWMmcjDJyuMM5',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0x25dVaCtjWMmcjDJyuMM5',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8aee2ef0ad038698401b200131',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fee2ef0ad038698401b200131',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dee2ef0ad038698401b200131',
            'width': 64,
          }),
        ]),
        'name': 'Ep 26. Katherine Parkinson - S11 Ep.3',
        'release_date': '2021-04-01',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'show': dict({
          'description': 'This is the official Taskmaster podcast, hosted by former champion and chickpea lover, Ed Gamble. Each week, released straight after the show is broadcast on Channel 4, Ed will be joined by a special guest to dissect and discuss the latest episode. Past contestants, little Alex Horne, and even the Taskmaster himself will feature in this brand-new podcast from the producers of the BAFTA-winning comedy show.',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/show/4BZc9sOdNilJJ8irsuOzdg',
          }),
          'href': 'https://api.spotify.com/v1/shows/4BZc9sOdNilJJ8irsuOzdg',
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab6765630000ba8a940dfd502920d407436baca2',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67656300005f1f940dfd502920d407436baca2',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab6765630000f68d940dfd502920d407436baca2',
              'width': 64,
            }),
          ]),
          'name': 'Taskmaster The Podcast',
          'publisher': 'Avalon ',
          'show_id': '4BZc9sOdNilJJ8irsuOzdg',
          'total_episodes': 200,
          'uri': 'spotify:show:4BZc9sOdNilJJ8irsuOzdg',
        }),
        'type': <ItemType.EPISODE: 'episode'>,
        'uri': 'spotify:episode:0x25dVaCtjWMmcjDJyuMM5',
      }),
    }),
  ])
# ---
# name: test_get_saved_shows
  list([
    dict({
      'added_at': datetime.datetime(2023, 8, 10, 8, 17, 9, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': 'We’ll all giggle along at naughty jokes, your dating horror stories and give questionable recommendations on movies, food and relationships. This podcast is hot, fun garbage and we (Toni Lodge and Ryan Jon here in Melbourne, Australia) would love you to climb aboard and be our friends. Hosted on Acast. See acast.com/privacy for more information.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/5OzkclFjD6iAjtAuo7aIYt',
        }),
        'href': 'https://api.spotify.com/v1/shows/5OzkclFjD6iAjtAuo7aIYt',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68db5f65a943ef4f707bf79949b',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fb5f65a943ef4f707bf79949b',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ab5f65a943ef4f707bf79949b',
            'width': 640,
          }),
        ]),
        'name': 'Toni and Ryan',
        'publisher': 'Toni Lodge and Ryan Jon',
        'show_id': '5OzkclFjD6iAjtAuo7aIYt',
        'total_episodes': 741,
        'uri': 'spotify:show:5OzkclFjD6iAjtAuo7aIYt',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2022, 9, 15, 23, 48, 23, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': 'Welcome to BLAST Push To Talk, Counter-Strike like you’ve never heard it before.Join our host Moses and our field reporters Scrawny and Launders as they interview pro players, share their hot takes on the latest and greatest news in the CS world courtesy of EPOS.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6XYRres0KZtnTqKcLavWR2',
        }),
        'href': 'https://api.spotify.com/v1/shows/6XYRres0KZtnTqKcLavWR2',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d5fccb05c5685c081d5c2ad9c',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f5fccb05c5685c081d5c2ad9c',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a5fccb05c5685c081d5c2ad9c',
            'width': 640,
          }),
        ]),
        'name': 'BLAST Push To Talk',
        'publisher': 'BLAST Premier',
        'show_id': '6XYRres0KZtnTqKcLavWR2',
        'total_episodes': 19,
        'uri': 'spotify:show:6XYRres0KZtnTqKcLavWR2',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2022, 8, 14, 11, 59, 6, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': "In the top 0.5% of podcasts globally and the most popular Fallout podcast, this series fills in all the details about the Fallout world beginning with the Great War in 2077 and progressing through major world events, factions, creatures, technology, and each vault. We'll explore what we know, and speculate about what might be. This show begins as a solo production, detailing specific topics, and grows into so much more. Get awesome rewards & support the show: patreon.com/falloutlorecast Watch live at youtube.com/c/robotsradio Advertise with us & business inquiries: robotsnetwork@gmail.comSponsored by:Unknown 9: Awakening releases on October 18, 2024 for PS4, PS5, Xbox One, Xbox Series X and S, and PC. Pre-order your copy today and learn more about the Unknown 9 universe at\xa0unknown9.com/{YOUR SHOW CODE}.",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/0e30iIgSffe6xJhFKe35Db',
        }),
        'href': 'https://api.spotify.com/v1/shows/0e30iIgSffe6xJhFKe35Db',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d16322099db1ec89c2f6107b2',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f16322099db1ec89c2f6107b2',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a16322099db1ec89c2f6107b2',
            'width': 640,
          }),
        ]),
        'name': 'Fallout Lorecast - The Fallout Video Game & TV Lore Podcast',
        'publisher': 'Robots Radio',
        'show_id': '0e30iIgSffe6xJhFKe35Db',
        'total_episodes': 323,
        'uri': 'spotify:show:0e30iIgSffe6xJhFKe35Db',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2021, 3, 7, 14, 12, 29, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': 'This is the official Taskmaster podcast, hosted by former champion and chickpea lover, Ed Gamble. Each week, released straight after the show is broadcast on Channel 4, Ed will be joined by a special guest to dissect and discuss the latest episode. Past contestants, little Alex Horne, and even the Taskmaster himself will feature in this brand-new podcast from the producers of the BAFTA-winning comedy show.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/4BZc9sOdNilJJ8irsuOzdg',
        }),
        'href': 'https://api.spotify.com/v1/shows/4BZc9sOdNilJJ8irsuOzdg',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d940dfd502920d407436baca2',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f940dfd502920d407436baca2',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a940dfd502920d407436baca2',
            'width': 640,
          }),
        ]),
        'name': 'Taskmaster The Podcast',
        'publisher': 'Avalon ',
        'show_id': '4BZc9sOdNilJJ8irsuOzdg',
        'total_episodes': 181,
        'uri': 'spotify:show:4BZc9sOdNilJJ8irsuOzdg',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2021, 3, 6, 0, 14, 9, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': "Comedians Ed Gamble and James Acaster invite special guests into their magical restaurant to each choose their favourite starter, main course, side dish, dessert and drink. Ever wanted to eat your dream meal? It's time to order Off Menu. Hosted on Acast. See acast.com/privacy for more information.",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/0azMejb7zrmAqctVsUSAdq',
        }),
        'href': 'https://api.spotify.com/v1/shows/0azMejb7zrmAqctVsUSAdq',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d35641b80c9d83f6717c2452c',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f35641b80c9d83f6717c2452c',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a35641b80c9d83f6717c2452c',
            'width': 640,
          }),
        ]),
        'name': 'Off Menu with Ed Gamble and James Acaster',
        'publisher': 'Plosive',
        'show_id': '0azMejb7zrmAqctVsUSAdq',
        'total_episodes': 298,
        'uri': 'spotify:show:0azMejb7zrmAqctVsUSAdq',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2021, 3, 6, 0, 13, 55, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': 'Ed & Matthew (aka Crunch & Crumble) are bringing top quality comedy to your Sunday mornings (8am - 11am). Tune in for film reviews, sports news, phone-ins, excuses, puns, quizzes, facts about catfish, and an education in heavy metal. No, really. It’s like a proper weekend breakfast show, but presented by two comedians with relatively little radio experience. But it’s better than it sounds.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/4CNsZjGkK371UAnyQgX9jV',
        }),
        'href': 'https://api.spotify.com/v1/shows/4CNsZjGkK371UAnyQgX9jV',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d2a9c9d9ffd893edf7a43c758',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f2a9c9d9ffd893edf7a43c758',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a2a9c9d9ffd893edf7a43c758',
            'width': 640,
          }),
        ]),
        'name': 'Ed Gamble & Matthew Crosby on Radio X',
        'publisher': 'Global',
        'show_id': '4CNsZjGkK371UAnyQgX9jV',
        'total_episodes': 286,
        'uri': 'spotify:show:4CNsZjGkK371UAnyQgX9jV',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2020, 12, 29, 1, 21, 38, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': "We're your new best friends. In our weekly podcast we dive into female friendships, current events, and what's going on in our lives. Come sit with us, and enjoy!",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6xglolTDhKYA8OKyM8IgZQ',
        }),
        'href': 'https://api.spotify.com/v1/shows/6xglolTDhKYA8OKyM8IgZQ',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68db30e55906de336b15c499308',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fb30e55906de336b15c499308',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ab30e55906de336b15c499308',
            'width': 640,
          }),
        ]),
        'name': 'You Can Sit With Us',
        'publisher': 'The Try Guys & Ramble',
        'show_id': '6xglolTDhKYA8OKyM8IgZQ',
        'total_episodes': 222,
        'uri': 'spotify:show:6xglolTDhKYA8OKyM8IgZQ',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2020, 12, 29, 1, 21, 21, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': 'The Try Guys have swam with sharks, survived in the wild, shocked themselves with birthing simulators, and risked their lives for their videos. In this weekly podcast they dissect their experiences as internet creators and best friends who have made a living failing upwards.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/3qCNuzujMoeNsMHp8c79dJ',
        }),
        'href': 'https://api.spotify.com/v1/shows/3qCNuzujMoeNsMHp8c79dJ',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68de7770dd365b1590f761809fe',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fe7770dd365b1590f761809fe',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ae7770dd365b1590f761809fe',
            'width': 640,
          }),
        ]),
        'name': 'The TryPod',
        'publisher': 'The Try Guys & Ramble',
        'show_id': '3qCNuzujMoeNsMHp8c79dJ',
        'total_episodes': 287,
        'uri': 'spotify:show:3qCNuzujMoeNsMHp8c79dJ',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2020, 11, 6, 13, 38, 49, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': 'The Office co-stars and best friends, Jenna Fischer and Angela Kinsey, are doing the ultimate The Office re-watch podcast for you. Each week Jenna and Angela will break down an episode of The Office and give exclusive behind the scene stories that only two people who were there, can tell you.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/3OHCFs84lqizjkL4C9bNTA',
        }),
        'href': 'https://api.spotify.com/v1/shows/3OHCFs84lqizjkL4C9bNTA',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68db227bbd2d93a8882a8ebb1b0',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fb227bbd2d93a8882a8ebb1b0',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ab227bbd2d93a8882a8ebb1b0',
            'width': 640,
          }),
        ]),
        'name': 'Office Ladies',
        'publisher': 'Audacy & Jenna Fischer and Angela Kinsey',
        'show_id': '3OHCFs84lqizjkL4C9bNTA',
        'total_episodes': 264,
        'uri': 'spotify:show:3OHCFs84lqizjkL4C9bNTA',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2020, 8, 20, 6, 52, 51, tzinfo=datetime.timezone.utc),
      'show': dict({
        'description': 'Welkom bij Wat een week, de podcast van Maxim Hartman en Willem Treur. Hier posten we iedere donderdag een nieuwe aflevering, om je te helpen om het nieuws van afgelopen week te verteren, zonder er aan onderdoor te gaan. In samenwerking met Dag en Nacht Media.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6AeemTu3AwFDGkM50OtnbI',
        }),
        'href': 'https://api.spotify.com/v1/shows/6AeemTu3AwFDGkM50OtnbI',
        'images': list([
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68db94dc44503877dcac0a5df9f',
            'width': 64,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fb94dc44503877dcac0a5df9f',
            'width': 300,
          }),
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ab94dc44503877dcac0a5df9f',
            'width': 640,
          }),
        ]),
        'name': 'Wat een week!',
        'publisher': 'Maxim Hartman & Willem Treur',
        'show_id': '6AeemTu3AwFDGkM50OtnbI',
        'total_episodes': 404,
        'uri': 'spotify:show:6AeemTu3AwFDGkM50OtnbI',
      }),
    }),
  ])
# ---
# name: test_get_saved_tracks
  list([
    dict({
      'added_at': datetime.datetime(2024, 10, 6, 11, 35, 2, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '3BYf1IG8EqDbhzdpljcFWY',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '7zrkALJ9ayRjzysp4QYoEg',
              'name': 'Maribou State',
              'uri': 'spotify:artist:7zrkALJ9ayRjzysp4QYoEg',
            }),
            dict({
              'artist_id': '5vssQp6TyMHsx4mihKVAsC',
              'name': 'Holly Walker',
              'uri': 'spotify:artist:5vssQp6TyMHsx4mihKVAsC',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273ac9dd449e38e5e8952fd22ad',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02ac9dd449e38e5e8952fd22ad',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851ac9dd449e38e5e8952fd22ad',
              'width': 64,
            }),
          ]),
          'name': 'Otherside',
          'release_date': '2024-10-02',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 2,
          'uri': 'spotify:album:3BYf1IG8EqDbhzdpljcFWY',
        }),
        'artists': list([
          dict({
            'artist_id': '7zrkALJ9ayRjzysp4QYoEg',
            'name': 'Maribou State',
            'uri': 'spotify:artist:7zrkALJ9ayRjzysp4QYoEg',
          }),
          dict({
            'artist_id': '5vssQp6TyMHsx4mihKVAsC',
            'name': 'Holly Walker',
            'uri': 'spotify:artist:5vssQp6TyMHsx4mihKVAsC',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 233211,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/2pj2A25YQK4uMxhZheNx7R',
        }),
        'href': 'https://api.spotify.com/v1/tracks/2pj2A25YQK4uMxhZheNx7R',
        'is_local': False,
        'name': 'Otherside',
        'track_id': '2pj2A25YQK4uMxhZheNx7R',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:2pj2A25YQK4uMxhZheNx7R',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 10, 6, 7, 37, 53, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '1ElP3WFqq5sgMcc3ScIR4l',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '0HHa7ZJZxUQlg5l2mB0N0f',
              'name': 'Marlon Hoffstadt',
              'uri': 'spotify:artist:0HHa7ZJZxUQlg5l2mB0N0f',
            }),
            dict({
              'artist_id': '68sTQgQtPe9e4Bb7OtoqET',
              'name': 'Crybaby',
              'uri': 'spotify:artist:68sTQgQtPe9e4Bb7OtoqET',
            }),
            dict({
              'artist_id': '4lBSzo2LS8asEzoePv6VLM',
              'name': 'DJ Daddy Trance',
              'uri': 'spotify:artist:4lBSzo2LS8asEzoePv6VLM',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2733d710ab088ff797e80cc5aed',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e023d710ab088ff797e80cc5aed',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048513d710ab088ff797e80cc5aed',
              'width': 64,
            }),
          ]),
          'name': 'I Think I Need A DJ',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:1ElP3WFqq5sgMcc3ScIR4l',
        }),
        'artists': list([
          dict({
            'artist_id': '0HHa7ZJZxUQlg5l2mB0N0f',
            'name': 'Marlon Hoffstadt',
            'uri': 'spotify:artist:0HHa7ZJZxUQlg5l2mB0N0f',
          }),
          dict({
            'artist_id': '68sTQgQtPe9e4Bb7OtoqET',
            'name': 'Crybaby',
            'uri': 'spotify:artist:68sTQgQtPe9e4Bb7OtoqET',
          }),
          dict({
            'artist_id': '4lBSzo2LS8asEzoePv6VLM',
            'name': 'DJ Daddy Trance',
            'uri': 'spotify:artist:4lBSzo2LS8asEzoePv6VLM',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 155000,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/2lKOI1nwP5qZtZC7TGQVY8',
        }),
        'href': 'https://api.spotify.com/v1/tracks/2lKOI1nwP5qZtZC7TGQVY8',
        'is_local': False,
        'name': 'I Think I Need A DJ',
        'track_id': '2lKOI1nwP5qZtZC7TGQVY8',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:2lKOI1nwP5qZtZC7TGQVY8',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 10, 6, 7, 14, 7, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '5aKEa6uPolubhdjPpBujA4',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '0EdUwJSqkMmsH6Agg3G8Ls',
              'name': 'Marten Hørger',
              'uri': 'spotify:artist:0EdUwJSqkMmsH6Agg3G8Ls',
            }),
            dict({
              'artist_id': '2nm38smINjms1LtczR0Cei',
              'name': 'Goodboys',
              'uri': 'spotify:artist:2nm38smINjms1LtczR0Cei',
            }),
            dict({
              'artist_id': '4STmXOXUF3UieHU46NWLVt',
              'name': 'Poppy Baskcomb',
              'uri': 'spotify:artist:4STmXOXUF3UieHU46NWLVt',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273ab8c14282c2b7335f647f714',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02ab8c14282c2b7335f647f714',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851ab8c14282c2b7335f647f714',
              'width': 64,
            }),
          ]),
          'name': 'Keep On Pushing',
          'release_date': '2024-10-04',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:5aKEa6uPolubhdjPpBujA4',
        }),
        'artists': list([
          dict({
            'artist_id': '0EdUwJSqkMmsH6Agg3G8Ls',
            'name': 'Marten Hørger',
            'uri': 'spotify:artist:0EdUwJSqkMmsH6Agg3G8Ls',
          }),
          dict({
            'artist_id': '2nm38smINjms1LtczR0Cei',
            'name': 'Goodboys',
            'uri': 'spotify:artist:2nm38smINjms1LtczR0Cei',
          }),
          dict({
            'artist_id': '4STmXOXUF3UieHU46NWLVt',
            'name': 'Poppy Baskcomb',
            'uri': 'spotify:artist:4STmXOXUF3UieHU46NWLVt',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 191818,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/3hxESOoUq0tc9NrI3yfKaE',
        }),
        'href': 'https://api.spotify.com/v1/tracks/3hxESOoUq0tc9NrI3yfKaE',
        'is_local': False,
        'name': 'Keep On Pushing',
        'track_id': '3hxESOoUq0tc9NrI3yfKaE',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:3hxESOoUq0tc9NrI3yfKaE',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 10, 5, 12, 38, 37, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '1fIhC9q6hrlU3TUIKcUEVD',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '17IDrizGUiveZm4P77Kkio',
              'name': 'Icarus',
              'uri': 'spotify:artist:17IDrizGUiveZm4P77Kkio',
            }),
            dict({
              'artist_id': '6F5RA03n6HZYIWB7SsqCtI',
              'name': 'Quelle T',
              'uri': 'spotify:artist:6F5RA03n6HZYIWB7SsqCtI',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2737b49ecd18eb7dbe560b64fae',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e027b49ecd18eb7dbe560b64fae',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048517b49ecd18eb7dbe560b64fae',
              'width': 64,
            }),
          ]),
          'name': 'Gravity',
          'release_date': '2024-09-17',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 3,
          'uri': 'spotify:album:1fIhC9q6hrlU3TUIKcUEVD',
        }),
        'artists': list([
          dict({
            'artist_id': '17IDrizGUiveZm4P77Kkio',
            'name': 'Icarus',
            'uri': 'spotify:artist:17IDrizGUiveZm4P77Kkio',
          }),
          dict({
            'artist_id': '6F5RA03n6HZYIWB7SsqCtI',
            'name': 'Quelle T',
            'uri': 'spotify:artist:6F5RA03n6HZYIWB7SsqCtI',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 192129,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/4ikKo7qGunFFuTKhWNQm8f',
        }),
        'href': 'https://api.spotify.com/v1/tracks/4ikKo7qGunFFuTKhWNQm8f',
        'is_local': False,
        'name': 'Gravity',
        'track_id': '4ikKo7qGunFFuTKhWNQm8f',
        'track_number': 2,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:4ikKo7qGunFFuTKhWNQm8f',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 10, 1, 11, 23, 15, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '7dPYE1Uoic9mBMFgwcqPaR',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '7uGeDBa1LJ7T1X4fpl8mwk',
              'name': 'Bad Computer',
              'uri': 'spotify:artist:7uGeDBa1LJ7T1X4fpl8mwk',
            }),
            dict({
              'artist_id': '22TzutcnmM3B1e7mWLY0f7',
              'name': 'Ryan Coss',
              'uri': 'spotify:artist:22TzutcnmM3B1e7mWLY0f7',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273b53ceefc28ae70e4189fbcdc',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02b53ceefc28ae70e4189fbcdc',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851b53ceefc28ae70e4189fbcdc',
              'width': 64,
            }),
          ]),
          'name': '4D',
          'release_date': '2024-01-08',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:7dPYE1Uoic9mBMFgwcqPaR',
        }),
        'artists': list([
          dict({
            'artist_id': '7uGeDBa1LJ7T1X4fpl8mwk',
            'name': 'Bad Computer',
            'uri': 'spotify:artist:7uGeDBa1LJ7T1X4fpl8mwk',
          }),
          dict({
            'artist_id': '22TzutcnmM3B1e7mWLY0f7',
            'name': 'Ryan Coss',
            'uri': 'spotify:artist:22TzutcnmM3B1e7mWLY0f7',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 176250,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/2v4bGopODBEOQqWzg31R2s',
        }),
        'href': 'https://api.spotify.com/v1/tracks/2v4bGopODBEOQqWzg31R2s',
        'is_local': False,
        'name': '4D',
        'track_id': '2v4bGopODBEOQqWzg31R2s',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:2v4bGopODBEOQqWzg31R2s',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 29, 9, 59, 34, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '6V1NUr8mrDpCPNinJeyNfZ',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '2oAPxiUkLs3EdFAtYX4Qr5',
              'name': 'Clarke 99',
              'uri': 'spotify:artist:2oAPxiUkLs3EdFAtYX4Qr5',
            }),
            dict({
              'artist_id': '0aUMVkR8QV0LSdv9VZOATn',
              'name': 'TEKKNO',
              'uri': 'spotify:artist:0aUMVkR8QV0LSdv9VZOATn',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273ef63fb7204e1c55217b8a74c',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02ef63fb7204e1c55217b8a74c',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851ef63fb7204e1c55217b8a74c',
              'width': 64,
            }),
          ]),
          'name': 'ART DECO - TEKKNO',
          'release_date': '2024-04-16',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:6V1NUr8mrDpCPNinJeyNfZ',
        }),
        'artists': list([
          dict({
            'artist_id': '2oAPxiUkLs3EdFAtYX4Qr5',
            'name': 'Clarke 99',
            'uri': 'spotify:artist:2oAPxiUkLs3EdFAtYX4Qr5',
          }),
          dict({
            'artist_id': '0aUMVkR8QV0LSdv9VZOATn',
            'name': 'TEKKNO',
            'uri': 'spotify:artist:0aUMVkR8QV0LSdv9VZOATn',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 198400,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5wr2qcL5WxTMQyiEzQvANe',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5wr2qcL5WxTMQyiEzQvANe',
        'is_local': False,
        'name': 'ART DECO - (TEKKNO)',
        'track_id': '5wr2qcL5WxTMQyiEzQvANe',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:5wr2qcL5WxTMQyiEzQvANe',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 24, 17, 32, 9, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '6IgSZ5VJ7m1dP5zeaWBUWh',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '33KABng8GO42ojFJVcABxQ',
              'name': 'Eefje de Visser',
              'uri': 'spotify:artist:33KABng8GO42ojFJVcABxQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27350a44227286817c71bb97caa',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0250a44227286817c71bb97caa',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485150a44227286817c71bb97caa',
              'width': 64,
            }),
          ]),
          'name': 'Heimwee',
          'release_date': '2024-09-13',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:6IgSZ5VJ7m1dP5zeaWBUWh',
        }),
        'artists': list([
          dict({
            'artist_id': '33KABng8GO42ojFJVcABxQ',
            'name': 'Eefje de Visser',
            'uri': 'spotify:artist:33KABng8GO42ojFJVcABxQ',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 224341,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5vs5pCSQ8tzS94nsTwKcrL',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5vs5pCSQ8tzS94nsTwKcrL',
        'is_local': False,
        'name': 'Weekenden',
        'track_id': '5vs5pCSQ8tzS94nsTwKcrL',
        'track_number': 4,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:5vs5pCSQ8tzS94nsTwKcrL',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 24, 15, 30, 27, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '7CRD6yQGeaAmA5AVXluBul',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '59oA5WbbQvomJz2BuRG071',
              'name': 'Jungle',
              'uri': 'spotify:artist:59oA5WbbQvomJz2BuRG071',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27315ecd6926b2b357a546b02fc',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0215ecd6926b2b357a546b02fc',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485115ecd6926b2b357a546b02fc',
              'width': 64,
            }),
          ]),
          'name': "Let's Go Back",
          'release_date': '2024-09-04',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:7CRD6yQGeaAmA5AVXluBul',
        }),
        'artists': list([
          dict({
            'artist_id': '59oA5WbbQvomJz2BuRG071',
            'name': 'Jungle',
            'uri': 'spotify:artist:59oA5WbbQvomJz2BuRG071',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 169651,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/3fvZo45Y28ly1QBo05pujJ',
        }),
        'href': 'https://api.spotify.com/v1/tracks/3fvZo45Y28ly1QBo05pujJ',
        'is_local': False,
        'name': "Let's Go Back",
        'track_id': '3fvZo45Y28ly1QBo05pujJ',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:3fvZo45Y28ly1QBo05pujJ',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 23, 20, 29, 47, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '1jWcipGHDLJ94RMB2XUhgK',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '2WBJQGf1bT1kxuoqziH5g4',
              'name': 'Purple Disco Machine',
              'uri': 'spotify:artist:2WBJQGf1bT1kxuoqziH5g4',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273fffecb767fcfa6c02c6987f3',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02fffecb767fcfa6c02c6987f3',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851fffecb767fcfa6c02c6987f3',
              'width': 64,
            }),
          ]),
          'name': 'Paradise',
          'release_date': '2024-09-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 15,
          'uri': 'spotify:album:1jWcipGHDLJ94RMB2XUhgK',
        }),
        'artists': list([
          dict({
            'artist_id': '2WBJQGf1bT1kxuoqziH5g4',
            'name': 'Purple Disco Machine',
            'uri': 'spotify:artist:2WBJQGf1bT1kxuoqziH5g4',
          }),
          dict({
            'artist_id': '4WUGQykLBGFfsl0Qjl6TDM',
            'name': 'The Magician',
            'uri': 'spotify:artist:4WUGQykLBGFfsl0Qjl6TDM',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 202935,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6NOlVkuAFtqTiBInHuqlrs',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6NOlVkuAFtqTiBInHuqlrs',
        'is_local': False,
        'name': 'All My Life',
        'track_id': '6NOlVkuAFtqTiBInHuqlrs',
        'track_number': 14,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:6NOlVkuAFtqTiBInHuqlrs',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 19, 15, 55, 57, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '3NusFNH0u0wmIiKZqoHt6p',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '0bUZrFj7rstq07E4iAJHgZ',
              'name': 'KC Lights',
              'uri': 'spotify:artist:0bUZrFj7rstq07E4iAJHgZ',
            }),
            dict({
              'artist_id': '4hlzEVQyBgze0kLOLwTV2r',
              'name': 'Welt',
              'uri': 'spotify:artist:4hlzEVQyBgze0kLOLwTV2r',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273f792f45a66a0193016e5843f',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02f792f45a66a0193016e5843f',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851f792f45a66a0193016e5843f',
              'width': 64,
            }),
          ]),
          'name': 'Fly',
          'release_date': '2024-07-12',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 2,
          'uri': 'spotify:album:3NusFNH0u0wmIiKZqoHt6p',
        }),
        'artists': list([
          dict({
            'artist_id': '0bUZrFj7rstq07E4iAJHgZ',
            'name': 'KC Lights',
            'uri': 'spotify:artist:0bUZrFj7rstq07E4iAJHgZ',
          }),
          dict({
            'artist_id': '4hlzEVQyBgze0kLOLwTV2r',
            'name': 'Welt',
            'uri': 'spotify:artist:4hlzEVQyBgze0kLOLwTV2r',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 168189,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/4hB6Riwyg06VWFVgOTiKWz',
        }),
        'href': 'https://api.spotify.com/v1/tracks/4hB6Riwyg06VWFVgOTiKWz',
        'is_local': False,
        'name': 'Fly',
        'track_id': '4hB6Riwyg06VWFVgOTiKWz',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:4hB6Riwyg06VWFVgOTiKWz',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 14, 15, 19, 51, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '1Mo92916G2mmG7ajpmSVrc',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '6M2wZ9GZgrQXHCFfjv46we',
              'name': 'Dua Lipa',
              'uri': 'spotify:artist:6M2wZ9GZgrQXHCFfjv46we',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273778c1e4660aa23f6728b32a1',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02778c1e4660aa23f6728b32a1',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851778c1e4660aa23f6728b32a1',
              'width': 64,
            }),
          ]),
          'name': 'Radical Optimism',
          'release_date': '2024-05-03',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 11,
          'uri': 'spotify:album:1Mo92916G2mmG7ajpmSVrc',
        }),
        'artists': list([
          dict({
            'artist_id': '6M2wZ9GZgrQXHCFfjv46we',
            'name': 'Dua Lipa',
            'uri': 'spotify:artist:6M2wZ9GZgrQXHCFfjv46we',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 198198,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6bAkr9wkQyPM4IDrP4tuwR',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6bAkr9wkQyPM4IDrP4tuwR',
        'is_local': False,
        'name': 'Whatcha Doing',
        'track_id': '6bAkr9wkQyPM4IDrP4tuwR',
        'track_number': 5,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:6bAkr9wkQyPM4IDrP4tuwR',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 13, 13, 8, 40, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '4wCx7hQCIOVtuN3DkNGhYm',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '1l9d7B8W0IHy3LqWsxP2SH',
              'name': 'Phantogram',
              'uri': 'spotify:artist:1l9d7B8W0IHy3LqWsxP2SH',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27356f72c3ee8aca5233000f7b0',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0256f72c3ee8aca5233000f7b0',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485156f72c3ee8aca5233000f7b0',
              'width': 64,
            }),
          ]),
          'name': 'Come Alive',
          'release_date': '2024-08-23',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:4wCx7hQCIOVtuN3DkNGhYm',
        }),
        'artists': list([
          dict({
            'artist_id': '1l9d7B8W0IHy3LqWsxP2SH',
            'name': 'Phantogram',
            'uri': 'spotify:artist:1l9d7B8W0IHy3LqWsxP2SH',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 253698,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/2TvwhdrUqEDUg0Z7LOmUOd',
        }),
        'href': 'https://api.spotify.com/v1/tracks/2TvwhdrUqEDUg0Z7LOmUOd',
        'is_local': False,
        'name': 'Come Alive',
        'track_id': '2TvwhdrUqEDUg0Z7LOmUOd',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:2TvwhdrUqEDUg0Z7LOmUOd',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 9, 20, 10, 14, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '3QcgmERUy859oM1YDj9hAT',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '7dupCiguCFkYZRisA3foPu',
              'name': 'Monie Love',
              'uri': 'spotify:artist:7dupCiguCFkYZRisA3foPu',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b27320729e6b97543c7aff4545b0',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e0220729e6b97543c7aff4545b0',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d0000485120729e6b97543c7aff4545b0',
              'width': 64,
            }),
          ]),
          'name': 'Down to Earth',
          'release_date': '1990-10-20',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 18,
          'uri': 'spotify:album:3QcgmERUy859oM1YDj9hAT',
        }),
        'artists': list([
          dict({
            'artist_id': '7dupCiguCFkYZRisA3foPu',
            'name': 'Monie Love',
            'uri': 'spotify:artist:7dupCiguCFkYZRisA3foPu',
          }),
          dict({
            'artist_id': '5rWgwZwzlVQb3Ltn6NnIVj',
            'name': 'True Image',
            'uri': 'spotify:artist:5rWgwZwzlVQb3Ltn6NnIVj',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 222840,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6ir6C7AHGMVLGQN7hv7gTA',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6ir6C7AHGMVLGQN7hv7gTA',
        'is_local': False,
        'name': "It's a Shame (My Sister)",
        'track_id': '6ir6C7AHGMVLGQN7hv7gTA',
        'track_number': 2,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:6ir6C7AHGMVLGQN7hv7gTA',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 8, 14, 24, 25, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '7Gsu8XlxWUsQbFZGajdxdC',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '2CpLIMBoE2ZzyY3ZBCRZ7j',
              'name': 'BUNT.',
              'uri': 'spotify:artist:2CpLIMBoE2ZzyY3ZBCRZ7j',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273de9b66fc971d8d7d2fea4fb2',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02de9b66fc971d8d7d2fea4fb2',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851de9b66fc971d8d7d2fea4fb2',
              'width': 64,
            }),
          ]),
          'name': 'Crown',
          'release_date': '2024-08-30',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:7Gsu8XlxWUsQbFZGajdxdC',
        }),
        'artists': list([
          dict({
            'artist_id': '2CpLIMBoE2ZzyY3ZBCRZ7j',
            'name': 'BUNT.',
            'uri': 'spotify:artist:2CpLIMBoE2ZzyY3ZBCRZ7j',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 240937,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/48HjuSOCti5mGKg6rUjAfB',
        }),
        'href': 'https://api.spotify.com/v1/tracks/48HjuSOCti5mGKg6rUjAfB',
        'is_local': False,
        'name': 'Crown',
        'track_id': '48HjuSOCti5mGKg6rUjAfB',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:48HjuSOCti5mGKg6rUjAfB',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 8, 14, 6, 7, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '5mBSawja8ThkqKHqMagoCk',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
              'name': 'Jamie xx',
              'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2736d59f0706b0e4a8fbc0908fe',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e026d59f0706b0e4a8fbc0908fe',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048516d59f0706b0e4a8fbc0908fe',
              'width': 64,
            }),
          ]),
          'name': 'All You Children',
          'release_date': '2024-07-30',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 3,
          'uri': 'spotify:album:5mBSawja8ThkqKHqMagoCk',
        }),
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
          dict({
            'artist_id': '3C8RpaI3Go0yFF9whvKoED',
            'name': 'The Avalanches',
            'uri': 'spotify:artist:3C8RpaI3Go0yFF9whvKoED',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 254142,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/1zYuc5YFYlFfSSq6IslHVY',
        }),
        'href': 'https://api.spotify.com/v1/tracks/1zYuc5YFYlFfSSq6IslHVY',
        'is_local': False,
        'name': 'All You Children',
        'track_id': '1zYuc5YFYlFfSSq6IslHVY',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:1zYuc5YFYlFfSSq6IslHVY',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 8, 13, 24, 33, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '3DQueEd1Ft9PHWgovDzPKh',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '4oLeXFyACqeem2VImYeBFe',
              'name': 'Fred again..',
              'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b2736b8a4828e057b7dc1c4a4d39',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e026b8a4828e057b7dc1c4a4d39',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d000048516b8a4828e057b7dc1c4a4d39',
              'width': 64,
            }),
          ]),
          'name': 'ten days',
          'release_date': '2024-09-06',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 20,
          'uri': 'spotify:album:3DQueEd1Ft9PHWgovDzPKh',
        }),
        'artists': list([
          dict({
            'artist_id': '4oLeXFyACqeem2VImYeBFe',
            'name': 'Fred again..',
            'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
          }),
          dict({
            'artist_id': '3IunaFjvNKj98JW89JYv9u',
            'name': 'The Japanese House',
            'uri': 'spotify:artist:3IunaFjvNKj98JW89JYv9u',
          }),
          dict({
            'artist_id': '6M98IZJK2tx6x2YVyHua9K',
            'name': 'Scott Hardkiss',
            'uri': 'spotify:artist:6M98IZJK2tx6x2YVyHua9K',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 314007,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/61pyjiweMDS1h930OgS0XO',
        }),
        'href': 'https://api.spotify.com/v1/tracks/61pyjiweMDS1h930OgS0XO',
        'is_local': False,
        'name': 'backseat',
        'track_id': '61pyjiweMDS1h930OgS0XO',
        'track_number': 20,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:61pyjiweMDS1h930OgS0XO',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 8, 13, 6, 11, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '0K7hOcNhAGs54ANFnXw6uM',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '1np8xozf7ATJZDi9JX8Dx5',
              'name': 'salute',
              'uri': 'spotify:artist:1np8xozf7ATJZDi9JX8Dx5',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273f38ea35a4cbce6ef51f2a176',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02f38ea35a4cbce6ef51f2a176',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851f38ea35a4cbce6ef51f2a176',
              'width': 64,
            }),
          ]),
          'name': 'TRUE MAGIC',
          'release_date': '2024-07-12',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 14,
          'uri': 'spotify:album:0K7hOcNhAGs54ANFnXw6uM',
        }),
        'artists': list([
          dict({
            'artist_id': '1np8xozf7ATJZDi9JX8Dx5',
            'name': 'salute',
            'uri': 'spotify:artist:1np8xozf7ATJZDi9JX8Dx5',
          }),
          dict({
            'artist_id': '2KEqzdPS7M5YwGmiuPTdr5',
            'name': 'Rina Sawayama',
            'uri': 'spotify:artist:2KEqzdPS7M5YwGmiuPTdr5',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 210785,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5s54Ts1rJwUwaxQqoTC4jQ',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5s54Ts1rJwUwaxQqoTC4jQ',
        'is_local': False,
        'name': 'saving flowers',
        'track_id': '5s54Ts1rJwUwaxQqoTC4jQ',
        'track_number': 2,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:5s54Ts1rJwUwaxQqoTC4jQ',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 8, 11, 56, 12, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '5D3qYKt4IFBEQENqzzlh1Y',
          'album_type': <AlbumType.SINGLE: 'single'>,
          'artists': list([
            dict({
              'artist_id': '5nki7yRhxgM509M5ADlN1p',
              'name': 'Oliver Heldens',
              'uri': 'spotify:artist:5nki7yRhxgM509M5ADlN1p',
            }),
            dict({
              'artist_id': '1Cs0zKBU1kc0i8ypK3B9ai',
              'name': 'David Guetta',
              'uri': 'spotify:artist:1Cs0zKBU1kc0i8ypK3B9ai',
            }),
            dict({
              'artist_id': '56Qz2XwGj7FxnNKrfkWjnb',
              'name': 'FAST BOY',
              'uri': 'spotify:artist:56Qz2XwGj7FxnNKrfkWjnb',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273a37595d03e9df79b71a9640f',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02a37595d03e9df79b71a9640f',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851a37595d03e9df79b71a9640f',
              'width': 64,
            }),
          ]),
          'name': 'Chills (Feel My Love)',
          'release_date': '2024-07-26',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 1,
          'uri': 'spotify:album:5D3qYKt4IFBEQENqzzlh1Y',
        }),
        'artists': list([
          dict({
            'artist_id': '5nki7yRhxgM509M5ADlN1p',
            'name': 'Oliver Heldens',
            'uri': 'spotify:artist:5nki7yRhxgM509M5ADlN1p',
          }),
          dict({
            'artist_id': '1Cs0zKBU1kc0i8ypK3B9ai',
            'name': 'David Guetta',
            'uri': 'spotify:artist:1Cs0zKBU1kc0i8ypK3B9ai',
          }),
          dict({
            'artist_id': '56Qz2XwGj7FxnNKrfkWjnb',
            'name': 'FAST BOY',
            'uri': 'spotify:artist:56Qz2XwGj7FxnNKrfkWjnb',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 163399,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/0jjE8w7Rtu3NCImWhKKX8x',
        }),
        'href': 'https://api.spotify.com/v1/tracks/0jjE8w7Rtu3NCImWhKKX8x',
        'is_local': False,
        'name': 'Chills (Feel My Love)',
        'track_id': '0jjE8w7Rtu3NCImWhKKX8x',
        'track_number': 1,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:0jjE8w7Rtu3NCImWhKKX8x',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 8, 11, 22, 23, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '5iEtQfZATfimid3Ogvce5m',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '67hb7towEyKvt5Z8Bx306c',
              'name': 'Empire Of The Sun',
              'uri': 'spotify:artist:67hb7towEyKvt5Z8Bx306c',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273539b85bf093856207373e138',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02539b85bf093856207373e138',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851539b85bf093856207373e138',
              'width': 64,
            }),
          ]),
          'name': 'Ask That God',
          'release_date': '2024-07-26',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 12,
          'uri': 'spotify:album:5iEtQfZATfimid3Ogvce5m',
        }),
        'artists': list([
          dict({
            'artist_id': '67hb7towEyKvt5Z8Bx306c',
            'name': 'Empire Of The Sun',
            'uri': 'spotify:artist:67hb7towEyKvt5Z8Bx306c',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 207587,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/7eqIZPAPLQhkjSVTzBT7UR',
        }),
        'href': 'https://api.spotify.com/v1/tracks/7eqIZPAPLQhkjSVTzBT7UR',
        'is_local': False,
        'name': 'Cherry Blossom',
        'track_id': '7eqIZPAPLQhkjSVTzBT7UR',
        'track_number': 2,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:7eqIZPAPLQhkjSVTzBT7UR',
      }),
    }),
    dict({
      'added_at': datetime.datetime(2024, 9, 6, 20, 46, 53, tzinfo=datetime.timezone.utc),
      'track': dict({
        'album': dict({
          'album_id': '6DExt1eX4lflLacVjHHbOs',
          'album_type': <AlbumType.ALBUM: 'album'>,
          'artists': list([
            dict({
              'artist_id': '4MVyzYMgTwdP7Z49wAZHx0',
              'name': 'Lynyrd Skynyrd',
              'uri': 'spotify:artist:4MVyzYMgTwdP7Z49wAZHx0',
            }),
          ]),
          'images': list([
            dict({
              'height': 640,
              'url': 'https://i.scdn.co/image/ab67616d0000b273128450651c9f0442780d8eb8',
              'width': 640,
            }),
            dict({
              'height': 300,
              'url': 'https://i.scdn.co/image/ab67616d00001e02128450651c9f0442780d8eb8',
              'width': 300,
            }),
            dict({
              'height': 64,
              'url': 'https://i.scdn.co/image/ab67616d00004851128450651c9f0442780d8eb8',
              'width': 64,
            }),
          ]),
          'name': "Pronounced' Leh-'Nerd 'Skin-'Nerd",
          'release_date': '1973-01-01',
          'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
          'total_tracks': 8,
          'uri': 'spotify:album:6DExt1eX4lflLacVjHHbOs',
        }),
        'artists': list([
          dict({
            'artist_id': '4MVyzYMgTwdP7Z49wAZHx0',
            'name': 'Lynyrd Skynyrd',
            'uri': 'spotify:artist:4MVyzYMgTwdP7Z49wAZHx0',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 547106,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5EWPGh7jbTNO2wakv8LjUI',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5EWPGh7jbTNO2wakv8LjUI',
        'is_local': False,
        'name': 'Free Bird',
        'track_id': '5EWPGh7jbTNO2wakv8LjUI',
        'track_number': 8,
        'type': <ItemType.TRACK: 'track'>,
        'uri': 'spotify:track:5EWPGh7jbTNO2wakv8LjUI',
      }),
    }),
  ])
# ---
# name: test_get_several_artists
  list([
    dict({
      'artist_id': '2CIMQHirSU0MQqyYHq0eOx',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb89ffabe57a25cedeca3309e7',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab6761610000517489ffabe57a25cedeca3309e7',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f17889ffabe57a25cedeca3309e7',
          'width': 160,
        }),
      ]),
      'name': 'deadmau5',
      'uri': 'spotify:artist:2CIMQHirSU0MQqyYHq0eOx',
    }),
    dict({
      'artist_id': '57dN52uHvrHOxijzpIgu3E',
      'images': list([
        dict({
          'height': 693,
          'url': 'https://i.scdn.co/image/2f0c6c465a83cd196e651e3d4e7625ba799a6f60',
          'width': 1000,
        }),
        dict({
          'height': 444,
          'url': 'https://i.scdn.co/image/4e3e13c8b993bde9898e49509fb9ae121636e05f',
          'width': 640,
        }),
        dict({
          'height': 139,
          'url': 'https://i.scdn.co/image/dc68dd24b45b74ecce9d4ed486423673d683ced3',
          'width': 200,
        }),
        dict({
          'height': 44,
          'url': 'https://i.scdn.co/image/4e55ca05d4f336a2fa0e3062a7ec9778a201e8bc',
          'width': 63,
        }),
      ]),
      'name': 'Ratatat',
      'uri': 'spotify:artist:57dN52uHvrHOxijzpIgu3E',
    }),
    dict({
      'artist_id': '1vCWHaC5f2uS3yhpwWbIA6',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebae07171f989fb39736674113',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174ae07171f989fb39736674113',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178ae07171f989fb39736674113',
          'width': 160,
        }),
      ]),
      'name': 'Avicii',
      'uri': 'spotify:artist:1vCWHaC5f2uS3yhpwWbIA6',
    }),
  ])
# ---
# name: test_get_several_chapters
  list([
    dict({
      'audiobook': dict({
        'audiobook_id': '58cFIY8IT7yGqR3kHnKqzV',
        'authors': list([
          dict({
            'name': 'Anya Niewierra',
          }),
        ]),
        'description': '''
          Author(s): Anya Niewierra
          Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink<p>Na het succes van de bestsellers <i>Het bloemenmeisje</i> en <i>De Camino</i> komt Anya Niewierra met <i>De nomade</i>. Een aangrijpende thriller over vaderliefde en een verborgen verleden.</p><p>De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.</p><p>Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.</p><p>Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.</p>
          <br>
          <p>‘Anya Niewierra heeft met <i>De nomade</i> weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan <i>De Camino</i>.’<br>
          Heleen Spanjaard, <i>Margriet</i></p><p>‘Verrassend, meeslepend en bloedstollend. <i>De nomade</i> is een waardige opvolger van <i>De Camino</i>.’<br>
          Rob Cobben, cultuurverslaggever <i>Dagblad De Limburger</i></p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/58cFIY8IT7yGqR3kHnKqzV',
        }),
        'html_description': 'Author(s): Anya Niewierra<br/>Narrator(s): Nienke Brinkhuis, Cees van Ede, Mattijn Hartemink<br/>&lt;p&gt;Na het succes van de bestsellers &lt;i&gt;Het bloemenmeisje&lt;/i&gt; en &lt;i&gt;De Camino&lt;/i&gt; komt Anya Niewierra met &lt;i&gt;De nomade&lt;/i&gt;. Een aangrijpende thriller over vaderliefde en een verborgen verleden.&lt;/p&gt;<br/>&lt;p&gt;De 37-jarige documentairemaker Olga Liebke woont met haar zonderlinge vader in het Harz-gebergte. Olga heeft een innige band met de inmiddels dementerende man. Haar moeder stierf in het kraambed en ze heeft verder geen familie. Tenminste, zo is het verhaal.&lt;/p&gt;<br/>&lt;p&gt;Maar dan vertelt haar vader herinneringen die niet rijmen met de geschiedenis zoals zij die kent. Ze gaat twijfelen over haar achtergrond en ontdekt documenten uit de voormalige Sovjet-Unie.&lt;/p&gt;<br/>&lt;p&gt;Olga reist naar de driehoek Polen, Litouwen en Belarus en stuit op een huiveringwekkend geheim.&lt;/p&gt;<br/>&lt;br&gt;<br/>&lt;p&gt;‘Anya Niewierra heeft met &lt;i&gt;De nomade&lt;/i&gt; weer een magnifiek boek afgeleverd, dat mogelijk nog indrukwekkender is dan &lt;i&gt;De Camino&lt;/i&gt;.’&lt;br&gt;<br/>Heleen Spanjaard, &lt;i&gt;Margriet&lt;/i&gt;&lt;/p&gt;<br/>&lt;p&gt;‘Verrassend, meeslepend en bloedstollend. &lt;i&gt;De nomade&lt;/i&gt; is een waardige opvolger van &lt;i&gt;De Camino&lt;/i&gt;.’&lt;br&gt;<br/>Rob Cobben, cultuurverslaggever &lt;i&gt;Dagblad De Limburger&lt;/i&gt;&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'De nomade',
        'narrators': list([
          dict({
            'name': 'Nienke Brinkhuis',
          }),
          dict({
            'name': 'Cees van Ede',
          }),
          dict({
            'name': 'Mattijn Hartemink',
          }),
        ]),
        'publisher': 'Anya Niewierra',
        'total_chapters': 49,
        'type': 'audiobook',
        'uri': 'spotify:show:58cFIY8IT7yGqR3kHnKqzV',
      }),
      'chapter_id': '3NW4BmIOG0qzQZgtLgsydR',
      'chapter_number': 0,
      'duration_ms': 249652,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/3NW4BmIOG0qzQZgtLgsydR',
      }),
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab676663000022a8ecf13d909d494c02ba057feb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab6766630000db5becf13d909d494c02ba057feb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6766630000703becf13d909d494c02ba057feb',
          'width': 64,
        }),
      ]),
      'languages': list([
        'nl',
      ]),
      'name': 'Track 1',
      'type': 'chapter',
      'uri': 'spotify:episode:3NW4BmIOG0qzQZgtLgsydR',
    }),
  ])
# ---
# name: test_get_show
  dict({
    'description': 'Safety Third is a weekly show hosted by William Osman, NileRed, The Backyard Scientist, Allen Pan, and a couple other YouTube "Scientists". Sometimes we have guests, sometimes it\'s just us, but always: safety is our number three priority.',
    'episodes': list([
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3690161,
        'episode_id': '3o0RYoo5iOMKSmEbunsbvW',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3o0RYoo5iOMKSmEbunsbvW',
        }),
        'href': 'https://api.spotify.com/v1/episodes/3o0RYoo5iOMKSmEbunsbvW',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'My Squirrel Has Brain Damage - Safety Third 119',
        'release_date': '2024-07-26',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:3o0RYoo5iOMKSmEbunsbvW',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5690591,
        'episode_id': '7CbsFHQq8ljztiUSGw46Fj',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/7CbsFHQq8ljztiUSGw46Fj',
        }),
        'href': 'https://api.spotify.com/v1/episodes/7CbsFHQq8ljztiUSGw46Fj',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Math Haters vs Math Nerd - Safety Third 118',
        'release_date': '2024-07-18',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:7CbsFHQq8ljztiUSGw46Fj',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5808720,
        'episode_id': '7I6SU4lQbmxipsRNN5hGGk',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/7I6SU4lQbmxipsRNN5hGGk',
        }),
        'href': 'https://api.spotify.com/v1/episodes/7I6SU4lQbmxipsRNN5hGGk',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Dr. Disrespect is Not Beating The Drake Allegations - Safety Third 117',
        'release_date': '2024-07-11',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:7I6SU4lQbmxipsRNN5hGGk',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5290728,
        'episode_id': '5RTOrKLydGUJxiebaBbEbe',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5RTOrKLydGUJxiebaBbEbe',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5RTOrKLydGUJxiebaBbEbe',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': "NileRed's Most Important Employee - Safety Third 116",
        'release_date': '2024-07-04',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5RTOrKLydGUJxiebaBbEbe',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 6685800,
        'episode_id': '2cxiMfCIlOPiMQhsdRMKG0',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2cxiMfCIlOPiMQhsdRMKG0',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2cxiMfCIlOPiMQhsdRMKG0',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'How Real Engineering Got Fired - Safety Third 115',
        'release_date': '2024-06-27',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2cxiMfCIlOPiMQhsdRMKG0',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5509825,
        'episode_id': '2jALMGr63flWEdRl8NxvQR',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2jALMGr63flWEdRl8NxvQR',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2jALMGr63flWEdRl8NxvQR',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Thin Mint Zyns - Safety Third 114',
        'release_date': '2024-06-20',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2jALMGr63flWEdRl8NxvQR',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 2731702,
        'episode_id': '0Rr3sI7wj3VaNQFPhalCVj',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0Rr3sI7wj3VaNQFPhalCVj',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0Rr3sI7wj3VaNQFPhalCVj',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Live from Open Sauce 2023 - Safety Third 113',
        'release_date': '2024-06-13',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0Rr3sI7wj3VaNQFPhalCVj',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5192437,
        'episode_id': '3XKOIVuGVzzEPNnlyz7PX4',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3XKOIVuGVzzEPNnlyz7PX4',
        }),
        'href': 'https://api.spotify.com/v1/episodes/3XKOIVuGVzzEPNnlyz7PX4',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'He Tried Hiring a Child Bartender - Safety Third 112',
        'release_date': '2024-06-06',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:3XKOIVuGVzzEPNnlyz7PX4',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4338191,
        'episode_id': '5qGMPBYEW5Izdm9W5F7PSb',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5qGMPBYEW5Izdm9W5F7PSb',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5qGMPBYEW5Izdm9W5F7PSb',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Ted Nivison Has a Disgusting Keyboard - Safety Third 111',
        'release_date': '2024-05-30',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5qGMPBYEW5Izdm9W5F7PSb',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5367528,
        'episode_id': '7G5CGTUvtSpLP67O4cYAWq',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/7G5CGTUvtSpLP67O4cYAWq',
        }),
        'href': 'https://api.spotify.com/v1/episodes/7G5CGTUvtSpLP67O4cYAWq',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'The Worst Parts of Dating a Mad Scientist - Safety Third 110',
        'release_date': '2024-05-23',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:7G5CGTUvtSpLP67O4cYAWq',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 6502817,
        'episode_id': '3cJk5Cfvpkrdf9hxY5Hi3p',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3cJk5Cfvpkrdf9hxY5Hi3p',
        }),
        'href': 'https://api.spotify.com/v1/episodes/3cJk5Cfvpkrdf9hxY5Hi3p',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Confronting His Old Boss - Safety Third 109',
        'release_date': '2024-05-16',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:3cJk5Cfvpkrdf9hxY5Hi3p',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5386488,
        'episode_id': '0OV7VAkyKacrcmBEsBtyWJ',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0OV7VAkyKacrcmBEsBtyWJ',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0OV7VAkyKacrcmBEsBtyWJ',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Is the Nuclear Power in Fallout Realistic? ft. Kyle Hill - Safety Third 108',
        'release_date': '2024-05-09',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0OV7VAkyKacrcmBEsBtyWJ',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5431056,
        'episode_id': '6QzBsbaokkbGKee5Y19KHR',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6QzBsbaokkbGKee5Y19KHR',
        }),
        'href': 'https://api.spotify.com/v1/episodes/6QzBsbaokkbGKee5Y19KHR',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'What’s the Fastest Way to Melt Butter - Safety Third 107',
        'release_date': '2024-05-02',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:6QzBsbaokkbGKee5Y19KHR',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5152800,
        'episode_id': '4gl883BUIWA8KolJGzefMp',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4gl883BUIWA8KolJGzefMp',
        }),
        'href': 'https://api.spotify.com/v1/episodes/4gl883BUIWA8KolJGzefMp',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Science Used to Be Weird - Safety Third 106',
        'release_date': '2024-04-25',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:4gl883BUIWA8KolJGzefMp',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3784803,
        'episode_id': '0am1OCbZW8AbxRI8eqHVhc',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0am1OCbZW8AbxRI8eqHVhc',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0am1OCbZW8AbxRI8eqHVhc',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Bill Nye Stole Your Mom - Safety Third 105',
        'release_date': '2024-04-18',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0am1OCbZW8AbxRI8eqHVhc',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 6872842,
        'episode_id': '6EDbQAIcNbDEIylf2LADzi',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6EDbQAIcNbDEIylf2LADzi',
        }),
        'href': 'https://api.spotify.com/v1/episodes/6EDbQAIcNbDEIylf2LADzi',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Trolling Chevron with DougDoug - Safety Third 104',
        'release_date': '2024-04-11',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:6EDbQAIcNbDEIylf2LADzi',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 6336360,
        'episode_id': '0XKM3iy8JuMpaW5ohU3zUu',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0XKM3iy8JuMpaW5ohU3zUu',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0XKM3iy8JuMpaW5ohU3zUu',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'How Allen Sneaks Knives Past TSA - Safety Third 103',
        'release_date': '2024-04-04',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0XKM3iy8JuMpaW5ohU3zUu',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4120560,
        'episode_id': '2LQerIBzWHRSVuRFLYLC0s',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2LQerIBzWHRSVuRFLYLC0s',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2LQerIBzWHRSVuRFLYLC0s',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Mythbusters vs Killdozer - Safety Third 102',
        'release_date': '2024-03-28',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2LQerIBzWHRSVuRFLYLC0s',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4992470,
        'episode_id': '0Ybbd43X9KtiZKL3I2f6df',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0Ybbd43X9KtiZKL3I2f6df',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0Ybbd43X9KtiZKL3I2f6df',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Uncle Roger Roasts - Safety Third 101',
        'release_date': '2024-03-21',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0Ybbd43X9KtiZKL3I2f6df',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5745263,
        'episode_id': '4mcoLIatd3aofPnkTcfB2a',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4mcoLIatd3aofPnkTcfB2a',
        }),
        'href': 'https://api.spotify.com/v1/episodes/4mcoLIatd3aofPnkTcfB2a',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'We Kidnapped NileRed - Safety Third 100',
        'release_date': '2024-03-07',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:4mcoLIatd3aofPnkTcfB2a',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3589056,
        'episode_id': '1ghUYVMZwHiManmG68lbwP',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1ghUYVMZwHiManmG68lbwP',
        }),
        'href': 'https://api.spotify.com/v1/episodes/1ghUYVMZwHiManmG68lbwP',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Making Salt Out of Blood - Safety Third 99',
        'release_date': '2024-02-29',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:1ghUYVMZwHiManmG68lbwP',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4496928,
        'episode_id': '5Rbsn0a8lCjrXMvOnMNkHb',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5Rbsn0a8lCjrXMvOnMNkHb',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5Rbsn0a8lCjrXMvOnMNkHb',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Eating a Giant Ostrich Egg - Safety Third 98',
        'release_date': '2024-02-22',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5Rbsn0a8lCjrXMvOnMNkHb',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5378591,
        'episode_id': '0T9S0GAx8XMrRcOhY93ywy',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0T9S0GAx8XMrRcOhY93ywy',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0T9S0GAx8XMrRcOhY93ywy',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'We’re in New Zealand - Safety Third 97',
        'release_date': '2024-02-16',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0T9S0GAx8XMrRcOhY93ywy',
      }),
      dict({
        'description': 'Patreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4408398,
        'episode_id': '402Qeru3caMcL8EF4fKVGd',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/402Qeru3caMcL8EF4fKVGd',
        }),
        'href': 'https://api.spotify.com/v1/episodes/402Qeru3caMcL8EF4fKVGd',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': '9 Boys 1 House - Safety Third 96',
        'release_date': '2024-02-08',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:402Qeru3caMcL8EF4fKVGd',
      }),
      dict({
        'description': "Jabrils' Site: https://www.haxware.io/ubearlyPatreon: https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy",
        'duration_ms': 4754016,
        'episode_id': '0YFLBqCKdPEhaz7RGdCC71',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0YFLBqCKdPEhaz7RGdCC71',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0YFLBqCKdPEhaz7RGdCC71',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'We’re Obsessed With Cookie Clicker - Safety Third 95',
        'release_date': '2024-02-02',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0YFLBqCKdPEhaz7RGdCC71',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 6086582,
        'episode_id': '6n1pJAaVA5BZeiQeGO5ERh',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6n1pJAaVA5BZeiQeGO5ERh',
        }),
        'href': 'https://api.spotify.com/v1/episodes/6n1pJAaVA5BZeiQeGO5ERh',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Becoming Radioactive With Hank Green - Safety Third 94',
        'release_date': '2024-01-25',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:6n1pJAaVA5BZeiQeGO5ERh',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5252597,
        'episode_id': '4QokmiQDvlRx6NGKNEW9xZ',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4QokmiQDvlRx6NGKNEW9xZ',
        }),
        'href': 'https://api.spotify.com/v1/episodes/4QokmiQDvlRx6NGKNEW9xZ',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Micha - Safety Third 93',
        'release_date': '2024-01-18',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:4QokmiQDvlRx6NGKNEW9xZ',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3821113,
        'episode_id': '0aA6a1o0GlNjp8hvBBEWp2',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0aA6a1o0GlNjp8hvBBEWp2',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0aA6a1o0GlNjp8hvBBEWp2',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Hacking Into Billionaire Discord Groups - Safety Third 92',
        'release_date': '2024-01-11',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0aA6a1o0GlNjp8hvBBEWp2',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5902236,
        'episode_id': '24DaIDj7RU30dBwi2AlVVz',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/24DaIDj7RU30dBwi2AlVVz',
        }),
        'href': 'https://api.spotify.com/v1/episodes/24DaIDj7RU30dBwi2AlVVz',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Building a Sexy Robot Therapist - Safety Third 91',
        'release_date': '2024-01-04',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:24DaIDj7RU30dBwi2AlVVz',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4540003,
        'episode_id': '3jarlp7UfYZG5K1MVuOly9',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3jarlp7UfYZG5K1MVuOly9',
        }),
        'href': 'https://api.spotify.com/v1/episodes/3jarlp7UfYZG5K1MVuOly9',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Mythbusters Are Upset With Allen - Safety Third 90',
        'release_date': '2023-12-28',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:3jarlp7UfYZG5K1MVuOly9',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3922680,
        'episode_id': '4ms1xU3AOGTPBqoOHU0krv',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4ms1xU3AOGTPBqoOHU0krv',
        }),
        'href': 'https://api.spotify.com/v1/episodes/4ms1xU3AOGTPBqoOHU0krv',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'The Internet Is Cursed With Tom Scott - Safety Third 89',
        'release_date': '2023-12-21',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:4ms1xU3AOGTPBqoOHU0krv',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3879209,
        'episode_id': '26T6rILJ0HfpXDLabPsmFF',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/26T6rILJ0HfpXDLabPsmFF',
        }),
        'href': 'https://api.spotify.com/v1/episodes/26T6rILJ0HfpXDLabPsmFF',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Podcast in a Ball Pit - Safety Third 88',
        'release_date': '2023-12-14',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:26T6rILJ0HfpXDLabPsmFF',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4298448,
        'episode_id': '4BwSypd7qt2yItrj4lQAzM',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4BwSypd7qt2yItrj4lQAzM',
        }),
        'href': 'https://api.spotify.com/v1/episodes/4BwSypd7qt2yItrj4lQAzM',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Trapped in a Room With a Combat Robot - Safety Third 87',
        'release_date': '2023-12-07',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:4BwSypd7qt2yItrj4lQAzM',
      }),
      dict({
        'description': 'Watch us fight our robot live at NHRL Havoc All-Stars, three pulsating nights of robot combat with NHRL stars.Livestream - https://bit.ly/WatchNHRLAllStarsTickets - https://bit.ly/HavocAllStarsTicketsDec 5th, 6th, 7th4pm-7pm PacificPatreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5365629,
        'episode_id': '5YYkQuJVOT6tKUJPTTUJDA',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5YYkQuJVOT6tKUJPTTUJDA',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5YYkQuJVOT6tKUJPTTUJDA',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Does Ball Lightning Actually Exist - Safety Third 86',
        'release_date': '2023-11-30',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5YYkQuJVOT6tKUJPTTUJDA',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5767653,
        'episode_id': '2xhUEr1zUZVtjHnd4xVLaC',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2xhUEr1zUZVtjHnd4xVLaC',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2xhUEr1zUZVtjHnd4xVLaC',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Living Off Grid in LA - Safety Third 85',
        'release_date': '2023-11-23',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2xhUEr1zUZVtjHnd4xVLaC',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5213910,
        'episode_id': '3MZaSUfsw9fxo6pGlgdIYS',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3MZaSUfsw9fxo6pGlgdIYS',
        }),
        'href': 'https://api.spotify.com/v1/episodes/3MZaSUfsw9fxo6pGlgdIYS',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Baiting Rats With Milk Duds - Safety Third 84',
        'release_date': '2023-11-17',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:3MZaSUfsw9fxo6pGlgdIYS',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4436532,
        'episode_id': '5VhmbKirE6qtU383S1eU5E',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5VhmbKirE6qtU383S1eU5E',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5VhmbKirE6qtU383S1eU5E',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Don’t Listen to YouTube Scientists - Safety Third 83',
        'release_date': '2023-11-09',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5VhmbKirE6qtU383S1eU5E',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4394657,
        'episode_id': '0h89PlADXgTCT9vuaqYUmV',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0h89PlADXgTCT9vuaqYUmV',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0h89PlADXgTCT9vuaqYUmV',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Murdering Children for XP - Safety Third 82',
        'release_date': '2023-11-02',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0h89PlADXgTCT9vuaqYUmV',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4442640,
        'episode_id': '1Foe3FZd7BvRs38I8dH7Sq',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1Foe3FZd7BvRs38I8dH7Sq',
        }),
        'href': 'https://api.spotify.com/v1/episodes/1Foe3FZd7BvRs38I8dH7Sq',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Mark Rober Makes a Lot of Money - Safety Third 81',
        'release_date': '2023-10-26',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:1Foe3FZd7BvRs38I8dH7Sq',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5048320,
        'episode_id': '08fFiLgTzEZrbFIvAoeQQf',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/08fFiLgTzEZrbFIvAoeQQf',
        }),
        'href': 'https://api.spotify.com/v1/episodes/08fFiLgTzEZrbFIvAoeQQf',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Cooking Burgers With Lasers - Safety Third 80',
        'release_date': '2023-10-05',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:08fFiLgTzEZrbFIvAoeQQf',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4946599,
        'episode_id': '3eq79MRpzfuGB7Grixux8R',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3eq79MRpzfuGB7Grixux8R',
        }),
        'href': 'https://api.spotify.com/v1/episodes/3eq79MRpzfuGB7Grixux8R',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Building the World’s Largest Bear Trap - Safety Third 79',
        'release_date': '2023-09-28',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:3eq79MRpzfuGB7Grixux8R',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4390817,
        'episode_id': '6iRGwNvFSwTI9HqOiBBm3Q',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6iRGwNvFSwTI9HqOiBBm3Q',
        }),
        'href': 'https://api.spotify.com/v1/episodes/6iRGwNvFSwTI9HqOiBBm3Q',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Making a Tesla Boat - Safety Third 78',
        'release_date': '2023-09-14',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:6iRGwNvFSwTI9HqOiBBm3Q',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4180609,
        'episode_id': '1OKJ9A9sAzEaZMLY8acimk',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1OKJ9A9sAzEaZMLY8acimk',
        }),
        'href': 'https://api.spotify.com/v1/episodes/1OKJ9A9sAzEaZMLY8acimk',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Code Bullet - Safety Third 77',
        'release_date': '2023-09-07',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:1OKJ9A9sAzEaZMLY8acimk',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4458292,
        'episode_id': '2I1GcL68euLDaxLu3GU5AP',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2I1GcL68euLDaxLu3GU5AP',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2I1GcL68euLDaxLu3GU5AP',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Getting Rejected by MIT - Safety Third 76',
        'release_date': '2023-08-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2I1GcL68euLDaxLu3GU5AP',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 5523905,
        'episode_id': '23FWMozdgC4ypzyFJAew3Y',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/23FWMozdgC4ypzyFJAew3Y',
        }),
        'href': 'https://api.spotify.com/v1/episodes/23FWMozdgC4ypzyFJAew3Y',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Nigel - Safety Third 75',
        'release_date': '2023-06-26',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:23FWMozdgC4ypzyFJAew3Y',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4153025,
        'episode_id': '4raWEAFTONzYXt8ghbvmNd',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4raWEAFTONzYXt8ghbvmNd',
        }),
        'href': 'https://api.spotify.com/v1/episodes/4raWEAFTONzYXt8ghbvmNd',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': "The Mother's Day Podcast - Safety Third 74",
        'release_date': '2023-06-26',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:4raWEAFTONzYXt8ghbvmNd',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYouTube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3716702,
        'episode_id': '34dyUuqVHVxMdttDNHnxb8',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/34dyUuqVHVxMdttDNHnxb8',
        }),
        'href': 'https://api.spotify.com/v1/episodes/34dyUuqVHVxMdttDNHnxb8',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'We Got Moist! - Safety Third 73',
        'release_date': '2023-06-26',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:34dyUuqVHVxMdttDNHnxb8',
      }),
      dict({
        'description': 'Open Sauce tickets on sale NOW: https://opensauce.liveAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 4187926,
        'episode_id': '41IkE6whRLBBzZPLkvH67x',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/41IkE6whRLBBzZPLkvH67x',
        }),
        'href': 'https://api.spotify.com/v1/episodes/41IkE6whRLBBzZPLkvH67x',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Eating Illegal German Candy - Safety Third 72',
        'release_date': '2023-04-27',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:41IkE6whRLBBzZPLkvH67x',
      }),
      dict({
        'description': 'https://www.patreon.com/safetythirdAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3597049,
        'episode_id': '3xH6uxYcVMKrajKi394Ii1',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/3xH6uxYcVMKrajKi394Ii1',
        }),
        'href': 'https://api.spotify.com/v1/episodes/3xH6uxYcVMKrajKi394Ii1',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': "Kevin's VRChat Mistake - Safety Third 71",
        'release_date': '2023-04-14',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:3xH6uxYcVMKrajKi394Ii1',
      }),
      dict({
        'description': 'Patreon:\xa0https://www.patreon.com/safetythirdMerch: https://safetythird.shopYoutube: https://www.youtube.com/@safetythird/Advertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
        'duration_ms': 3905724,
        'episode_id': '1hNvtZECICRmbEjjFqgk3O',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1hNvtZECICRmbEjjFqgk3O',
        }),
        'href': 'https://api.spotify.com/v1/episodes/1hNvtZECICRmbEjjFqgk3O',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
            'width': 64,
          }),
        ]),
        'name': 'Who Can Open Their Mouth the Biggest? - Safety Third 70',
        'release_date': '2023-04-06',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:1hNvtZECICRmbEjjFqgk3O',
      }),
    ]),
    'external_urls': dict({
      'spotify': 'https://open.spotify.com/show/1Y9ExMgMxoBVrgrfU7u0nD',
    }),
    'href': 'https://api.spotify.com/v1/shows/1Y9ExMgMxoBVrgrfU7u0nD?locale=en-US%2Cen%3Bq%3D0.5',
    'images': list([
      dict({
        'height': 640,
        'url': 'https://i.scdn.co/image/ab6765630000ba8ac7bedd27a4413b1abf926d8a',
        'width': 640,
      }),
      dict({
        'height': 300,
        'url': 'https://i.scdn.co/image/ab67656300005f1fc7bedd27a4413b1abf926d8a',
        'width': 300,
      }),
      dict({
        'height': 64,
        'url': 'https://i.scdn.co/image/ab6765630000f68dc7bedd27a4413b1abf926d8a',
        'width': 64,
      }),
    ]),
    'name': 'Safety Third',
    'publisher': 'Safety Third ',
    'show_id': '1Y9ExMgMxoBVrgrfU7u0nD',
    'total_episodes': 120,
    'uri': 'spotify:show:1Y9ExMgMxoBVrgrfU7u0nD',
  })
# ---
# name: test_get_show_episodes
  list([
    dict({
      'description': 'The Great War of 2077 and how the Fallout world diverged from our own.Sponsors: Patreon: Become a patron! https://patreon.com/falloutlorecastBuy cool stuff and support the show!Fallout 76: https://amzn.to/3h99B3UFallout Cookbook: https://amzn.to/3aGjeodFallout Boardgame: https://amzn.to/2EgmBq3The Art of Fallout 4: https://amzn.to/3gfQST3Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zGFallout Funco Pop Figures: https://amzn.to/3gcYsOcLinks: Live Shows every Monday Night and game streams: twitch.tv/robotsradioFallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hubTalk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhMStay plugged in on Twitter: twitter.com/falloutlorecastRobots Radio Youtube: youtube.com/c/r0b0tsSend me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2117616,
      'episode_id': '3ssmxnilHYaKhwRWoBGMbU',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/3ssmxnilHYaKhwRWoBGMbU',
      }),
      'href': 'https://api.spotify.com/v1/episodes/3ssmxnilHYaKhwRWoBGMbU',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8af44e9ef63c2d6fb44cb0c9bf',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1ff44e9ef63c2d6fb44cb0c9bf',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68df44e9ef63c2d6fb44cb0c9bf',
          'width': 64,
        }),
      ]),
      'name': 'The Great War - Fallout Lorecast EP 1',
      'release_date': '2019-01-09',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:3ssmxnilHYaKhwRWoBGMbU',
    }),
    dict({
      'description': 'Support the show to keep it going, plus get great rewards at patreon.com/falloutlorecast Sponsors: Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2376881,
      'episode_id': '1bbj9aqeeZ3UMUlcWN0S03',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/1bbj9aqeeZ3UMUlcWN0S03',
      }),
      'href': 'https://api.spotify.com/v1/episodes/1bbj9aqeeZ3UMUlcWN0S03',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a655b54a66471089d27dbb03f',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f655b54a66471089d27dbb03f',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d655b54a66471089d27dbb03f',
          'width': 64,
        }),
      ]),
      'name': 'Who Dropped the First Bomb?',
      'release_date': '2019-01-15',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:1bbj9aqeeZ3UMUlcWN0S03',
    }),
    dict({
      'description': 'The lore behind Vault-Tec Corporation. Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2163252,
      'episode_id': '4zui8zWBisCfnTkZ1vgIc0',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/4zui8zWBisCfnTkZ1vgIc0',
      }),
      'href': 'https://api.spotify.com/v1/episodes/4zui8zWBisCfnTkZ1vgIc0',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8ac2181d67c5a5072353f70cc5',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1fc2181d67c5a5072353f70cc5',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68dc2181d67c5a5072353f70cc5',
          'width': 64,
        }),
      ]),
      'name': 'Vault-Tec Corporation',
      'release_date': '2019-01-22',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:4zui8zWBisCfnTkZ1vgIc0',
    }),
    dict({
      'description': 'Support the show to keep it going, plus get great rewards at patreon.com/falloutlorecast Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 499968,
      'episode_id': '7wH4iaoceRIympxiLVZPHF',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/7wH4iaoceRIympxiLVZPHF',
      }),
      'href': 'https://api.spotify.com/v1/episodes/7wH4iaoceRIympxiLVZPHF',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a7c3370eabc0c6db7b2936fe2',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f7c3370eabc0c6db7b2936fe2',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d7c3370eabc0c6db7b2936fe2',
          'width': 64,
        }),
      ]),
      'name': 'Vault 3 A Fiendish Finish',
      'release_date': '2019-01-24',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:7wH4iaoceRIympxiLVZPHF',
    }),
    dict({
      'description': 'The lore behind Vault 8 and Vault City.\xa0Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 713586,
      'episode_id': '4Z2MUOz9GBHzHsEIAc5Ltl',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/4Z2MUOz9GBHzHsEIAc5Ltl',
      }),
      'href': 'https://api.spotify.com/v1/episodes/4Z2MUOz9GBHzHsEIAc5Ltl',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8ab3e39f9b402368fc2698dedb',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1fb3e39f9b402368fc2698dedb',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68db3e39f9b402368fc2698dedb',
          'width': 64,
        }),
      ]),
      'name': 'Vault 8 & Vault City',
      'release_date': '2019-01-26',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:4Z2MUOz9GBHzHsEIAc5Ltl',
    }),
    dict({
      'description': 'The origins of the Brotherhood of Steel and Roger Maxson.\xa0Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2211631,
      'episode_id': '24IzdUok36xLkgQEjOjS6V',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/24IzdUok36xLkgQEjOjS6V',
      }),
      'href': 'https://api.spotify.com/v1/episodes/24IzdUok36xLkgQEjOjS6V',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a7cc679b360d6c0b7088890c5',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f7cc679b360d6c0b7088890c5',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d7cc679b360d6c0b7088890c5',
          'width': 64,
        }),
      ]),
      'name': 'The Brotherhood of Steel (Origin)',
      'release_date': '2019-01-28',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:24IzdUok36xLkgQEjOjS6V',
    }),
    dict({
      'description': 'The lore behind Vault 11 and the dilemma of self-preservation versus morality.\xa0Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 737593,
      'episode_id': '6fUziggVu74s6JwZ0lsIjX',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/6fUziggVu74s6JwZ0lsIjX',
      }),
      'href': 'https://api.spotify.com/v1/episodes/6fUziggVu74s6JwZ0lsIjX',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a302e925456f7ac2727bc1d63',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f302e925456f7ac2727bc1d63',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d302e925456f7ac2727bc1d63',
          'width': 64,
        }),
      ]),
      'name': 'Vault 11 The Sacrifice',
      'release_date': '2019-01-31',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:6fUziggVu74s6JwZ0lsIjX',
    }),
    dict({
      'description': 'The lore behind Vault 12 and the origins of a ghoulish city.\xa0Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 529606,
      'episode_id': '1pYEeMveLHGbbIo10G34dx',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/1pYEeMveLHGbbIo10G34dx',
      }),
      'href': 'https://api.spotify.com/v1/episodes/1pYEeMveLHGbbIo10G34dx',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a3e610ca700324f3bef0a48cc',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f3e610ca700324f3bef0a48cc',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d3e610ca700324f3bef0a48cc',
          'width': 64,
        }),
      ]),
      'name': 'Vault 12 A Ghoulish Experience',
      'release_date': '2019-02-02',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:1pYEeMveLHGbbIo10G34dx',
    }),
    dict({
      'description': 'The origins and ideology of the Enclave.\xa0Sponsors: Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 1996538,
      'episode_id': '1h69SINnBwMCqfEXjPAVIl',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/1h69SINnBwMCqfEXjPAVIl',
      }),
      'href': 'https://api.spotify.com/v1/episodes/1h69SINnBwMCqfEXjPAVIl',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a848643fae2be31bac82cc05a',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f848643fae2be31bac82cc05a',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d848643fae2be31bac82cc05a',
          'width': 64,
        }),
      ]),
      'name': 'The Enclave (Origin)',
      'release_date': '2019-02-04',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:1h69SINnBwMCqfEXjPAVIl',
    }),
    dict({
      'description': 'The lore behind Vault 13 and an invasion by intelligent deathclaws.\xa0Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 930638,
      'episode_id': '33UquUg4oftJ4ereH4nrNO',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/33UquUg4oftJ4ereH4nrNO',
      }),
      'href': 'https://api.spotify.com/v1/episodes/33UquUg4oftJ4ereH4nrNO',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a87fd9a8d362fd30aaab4e9d5',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f87fd9a8d362fd30aaab4e9d5',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d87fd9a8d362fd30aaab4e9d5',
          'width': 64,
        }),
      ]),
      'name': 'Vault 13 & Intelligent Deathclaws',
      'release_date': '2019-02-07',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:33UquUg4oftJ4ereH4nrNO',
    }),
    dict({
      'description': 'Get an early listen to the 1st episode of the upcoming Elder Scrolls Lorecast! Brought to you by: Storyblocks.com: Storyblocks.com/robotsradio Gamefly Game Rentals FREE for 30 Days! Click here: https://www.dpbolvw.net/click-100173810-10495782?sid=flore 15% off Loot Crate click: https://www.dpbolvw.net/click-100173810-13902093?sid=flore and use coupon code: ROBOTSRADIO Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/esolorecast Check out live streams most evenings on Twitch: twitch.tv/robotsradio Send me a note! Email: elderscrollslorecast@gmail.com Get a cool shirt, hat, or sticker, and support the show.\xa0Merch: https://robotsradio.net/store/ Dsicover more Robots Radio shows at robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2282187,
      'episode_id': '5nkbQDDCKSH4CwYalm62er',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/5nkbQDDCKSH4CwYalm62er',
      }),
      'href': 'https://api.spotify.com/v1/episodes/5nkbQDDCKSH4CwYalm62er',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8ab123bf90e3b34c113ab95837',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1fb123bf90e3b34c113ab95837',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68db123bf90e3b34c113ab95837',
          'width': 64,
        }),
      ]),
      'name': '[SNEAK PEEK] - Elder Scrolls Lorecast First Episode',
      'release_date': '2019-02-11',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:5nkbQDDCKSH4CwYalm62er',
    }),
    dict({
      'description': 'Duke from Out of the Vault joins me to discuss our thoughts on Power Armor. www.outofthevaultshow.com\xa0Sponsors: Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 4648594,
      'episode_id': '18tLLTavfPIPoJxau3xDQJ',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/18tLLTavfPIPoJxau3xDQJ',
      }),
      'href': 'https://api.spotify.com/v1/episodes/18tLLTavfPIPoJxau3xDQJ',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a28474d982684a3bd43d68198',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f28474d982684a3bd43d68198',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d28474d982684a3bd43d68198',
          'width': 64,
        }),
      ]),
      'name': 'Power Armor w/ Duke from Out of the Vault',
      'release_date': '2019-02-13',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:18tLLTavfPIPoJxau3xDQJ',
    }),
    dict({
      'description': "The lore behind Vault 15 and it's connection to Shady Sands and 3 of the most vile groups of raiders in the wasteland.\xa0Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy",
      'duration_ms': 716591,
      'episode_id': '1EQ6z4eaCRs6kJeVXjWIcm',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/1EQ6z4eaCRs6kJeVXjWIcm',
      }),
      'href': 'https://api.spotify.com/v1/episodes/1EQ6z4eaCRs6kJeVXjWIcm',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a7d1afb3118607dba3602faff',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f7d1afb3118607dba3602faff',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d7d1afb3118607dba3602faff',
          'width': 64,
        }),
      ]),
      'name': 'Vault 15 The Origin of The Khans',
      'release_date': '2019-02-16',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:1EQ6z4eaCRs6kJeVXjWIcm',
    }),
    dict({
      'description': 'In this episode, we discuss the origin, research, and importance of West Tek.\xa0Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2103248,
      'episode_id': '5ia7J0CaNRhuxsB0yVxdcn',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/5ia7J0CaNRhuxsB0yVxdcn',
      }),
      'href': 'https://api.spotify.com/v1/episodes/5ia7J0CaNRhuxsB0yVxdcn',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8af2608bb76816d3baffba9fd1',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1ff2608bb76816d3baffba9fd1',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68df2608bb76816d3baffba9fd1',
          'width': 64,
        }),
      ]),
      'name': 'West Tek - FEV & Power Armor',
      'release_date': '2019-02-20',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:5ia7J0CaNRhuxsB0yVxdcn',
    }),
    dict({
      'description': 'In this minisode we discuss the lore behind Vault 19 and the psychology of tribalism.\xa0Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 786625,
      'episode_id': '1rzpxakE5YSwvSX6rXlG1V',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/1rzpxakE5YSwvSX6rXlG1V',
      }),
      'href': 'https://api.spotify.com/v1/episodes/1rzpxakE5YSwvSX6rXlG1V',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a7f0006d898957db4dacc948b',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f7f0006d898957db4dacc948b',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d7f0006d898957db4dacc948b',
          'width': 64,
        }),
      ]),
      'name': 'Vault 19 Red vs Blue (or On Tribalism)',
      'release_date': '2019-02-25',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:1rzpxakE5YSwvSX6rXlG1V',
    }),
    dict({
      'description': 'Super Mutants. Nuff said. Sponsors: Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2156747,
      'episode_id': '1PI4CPzbfD5HFEMWlaNQAV',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/1PI4CPzbfD5HFEMWlaNQAV',
      }),
      'href': 'https://api.spotify.com/v1/episodes/1PI4CPzbfD5HFEMWlaNQAV',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a30f58504d487e1f3bb5a9595',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f30f58504d487e1f3bb5a9595',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d30f58504d487e1f3bb5a9595',
          'width': 64,
        }),
      ]),
      'name': 'Super Mutants',
      'release_date': '2019-02-27',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:1PI4CPzbfD5HFEMWlaNQAV',
    }),
    dict({
      'description': 'Welcome Dave from the Vault Boys WV to the show. We chat about Fallout 76, West Virginia, and what got him into the series. Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2779715,
      'episode_id': '4CZKdqqXWP5ez2rOzT5eL6',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/4CZKdqqXWP5ez2rOzT5eL6',
      }),
      'href': 'https://api.spotify.com/v1/episodes/4CZKdqqXWP5ez2rOzT5eL6',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a9c2656a3e5f340dfa5f7e82c',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f9c2656a3e5f340dfa5f7e82c',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d9c2656a3e5f340dfa5f7e82c',
          'width': 64,
        }),
      ]),
      'name': 'West Virginia and Fallout 76 w/ Dave from Vault Boys WV',
      'release_date': '2019-03-06',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:4CZKdqqXWP5ez2rOzT5eL6',
    }),
    dict({
      'description': 'This episode we discuss Ghouls! Sponsors: Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2051500,
      'episode_id': '1SOZlOQl3FYwatj6Zvfrsj',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/1SOZlOQl3FYwatj6Zvfrsj',
      }),
      'href': 'https://api.spotify.com/v1/episodes/1SOZlOQl3FYwatj6Zvfrsj',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a3a68fdbc55e15ba2b6a720b6',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f3a68fdbc55e15ba2b6a720b6',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d3a68fdbc55e15ba2b6a720b6',
          'width': 64,
        }),
      ]),
      'name': 'Ghouls!',
      'release_date': '2019-03-13',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:1SOZlOQl3FYwatj6Zvfrsj',
    }),
    dict({
      'description': 'Vault 21, where everything was determined randomly. Sponsors: Storyblocks.com: Storyblocks.com/robotsradio Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 1923134,
      'episode_id': '16hX5oaM52mREneUOHdBiA',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/16hX5oaM52mREneUOHdBiA',
      }),
      'href': 'https://api.spotify.com/v1/episodes/16hX5oaM52mREneUOHdBiA',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a605e65537b9b382e2161d602',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f605e65537b9b382e2161d602',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d605e65537b9b382e2161d602',
          'width': 64,
        }),
      ]),
      'name': 'Vault 21 - A Roll of the Dice',
      'release_date': '2019-03-20',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:16hX5oaM52mREneUOHdBiA',
    }),
    dict({
      'description': 'This episode is all about Deathclaws, plus a great question from our Patron Emily G. and reviews. Sponsors: Patreon: Become a patron! https://patreon.com/falloutlorecast Audiobooks.com - Get 3 FREE Audiobooks! https://www.dpbolvw.net/click-100173810-11099382?sid=flore Gamefly - Want 2 months of rentals for the price of 1 at Gamefly? https://www.dpbolvw.net/click-100173810-10495782?sid=flore Loot Crate - 15% off Loot Crate. Click the link and use coupon code: ROBOTSRADIO https://www.dpbolvw.net/click-100173810-13902093?sid=flore GreenMan Gaming - Get awesome discounts on games. https://www.dpbolvw.net/click-100173810-13764551?sid=flore NordVPN - Stay Safe on the Internet and get 68% off. https://www.dpbolvw.net/click-100173810-12814552?sid=flore Buy cool stuff and support the show! Fallout 76: https://amzn.to/3h99B3U Fallout Cookbook: https://amzn.to/3aGjeod Fallout Boardgame: https://amzn.to/2EgmBq3 The Art of Fallout 4: https://amzn.to/3gfQST3 Get a REAL Nuca-Cola Quantum! https://amzn.to/322O3zG Fallout Funco Pop Figures: https://amzn.to/3gcYsOc Links: Live Shows every Monday Night and game streams: twitch.tv/robotsradio Fallout Hub Podcast w/ Tom & others:\xa0https://anchor.fm/the-fallout-hub Talk Fallout and join the Robots Radio fam:\xa0Discord: discord.gg/JXKfVhM Stay plugged in on Twitter: twitter.com/falloutlorecast Robots Radio Youtube: youtube.com/c/r0b0ts Send me a note! Email: falloutlorecast@gmail.com www.robotsradio.netOur Sponsors:* Check out  Bandai Namco: unknown9.com/FALLOUTLOREAdvertising Inquiries: https://redcircle.com/brandsPrivacy & Opt-Out: https://redcircle.com/privacy',
      'duration_ms': 2674024,
      'episode_id': '2qvIReQpMaGK9OEeuW47VS',
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/episode/2qvIReQpMaGK9OEeuW47VS',
      }),
      'href': 'https://api.spotify.com/v1/episodes/2qvIReQpMaGK9OEeuW47VS',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6765630000ba8a2a75dc2b800ef5d83571ac27',
          'width': 640,
        }),
        dict({
          'height': 300,
          'url': 'https://i.scdn.co/image/ab67656300005f1f2a75dc2b800ef5d83571ac27',
          'width': 300,
        }),
        dict({
          'height': 64,
          'url': 'https://i.scdn.co/image/ab6765630000f68d2a75dc2b800ef5d83571ac27',
          'width': 64,
        }),
      ]),
      'name': 'Deathclaws',
      'release_date': '2019-03-28',
      'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
      'uri': 'spotify:episode:2qvIReQpMaGK9OEeuW47VS',
    }),
  ])
# ---
# name: test_get_top_artists
  list([
    dict({
      'artist_id': '74Yus6IHfa3tWZzXXAYtS2',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebf749f53f8bb5ffccf6105ce3',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174f749f53f8bb5ffccf6105ce3',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178f749f53f8bb5ffccf6105ce3',
          'width': 160,
        }),
      ]),
      'name': 'Onkruid',
      'uri': 'spotify:artist:74Yus6IHfa3tWZzXXAYtS2',
    }),
    dict({
      'artist_id': '6s5ubAp65wXoTZefE01RNR',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb8e750249623067fe3c557cf0',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051748e750249623067fe3c557cf0',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1788e750249623067fe3c557cf0',
          'width': 160,
        }),
      ]),
      'name': 'Joost',
      'uri': 'spotify:artist:6s5ubAp65wXoTZefE01RNR',
    }),
    dict({
      'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb5b2ba819fa89b17d6ae81567',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051745b2ba819fa89b17d6ae81567',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1785b2ba819fa89b17d6ae81567',
          'width': 160,
        }),
      ]),
      'name': 'Jamie xx',
      'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
    }),
    dict({
      'artist_id': '6mS5GeFyhea6w9OKo8PO3p',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb1844d25e43cbfb017a74ca77',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051741844d25e43cbfb017a74ca77',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1781844d25e43cbfb017a74ca77',
          'width': 160,
        }),
      ]),
      'name': 'Goldband',
      'uri': 'spotify:artist:6mS5GeFyhea6w9OKo8PO3p',
    }),
    dict({
      'artist_id': '4oLeXFyACqeem2VImYeBFe',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb2302e6ba3091fcbc6fd5bb54',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051742302e6ba3091fcbc6fd5bb54',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1782302e6ba3091fcbc6fd5bb54',
          'width': 160,
        }),
      ]),
      'name': 'Fred again..',
      'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
    }),
    dict({
      'artist_id': '0bLxXoUrh0kANKQMWts8KV',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb03c950304cd6fce910de8c59',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab6761610000517403c950304cd6fce910de8c59',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f17803c950304cd6fce910de8c59',
          'width': 160,
        }),
      ]),
      'name': 'Felicia Lu',
      'uri': 'spotify:artist:0bLxXoUrh0kANKQMWts8KV',
    }),
    dict({
      'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb7f3519b082ec961f35be7a44',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051747f3519b082ec961f35be7a44',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1787f3519b082ec961f35be7a44',
          'width': 160,
        }),
      ]),
      'name': 'Alfie Templeman',
      'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
    }),
    dict({
      'artist_id': '0PCCGZ0wGLizHt2KZ7hhA2',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb597f1c8c92c4a82734e3af43',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174597f1c8c92c4a82734e3af43',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178597f1c8c92c4a82734e3af43',
          'width': 160,
        }),
      ]),
      'name': 'Artemas',
      'uri': 'spotify:artist:0PCCGZ0wGLizHt2KZ7hhA2',
    }),
    dict({
      'artist_id': '3X2DdnmoANw8Rg8luHyZQb',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebef66595edf6f913e0f7c5b93',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174ef66595edf6f913e0f7c5b93',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178ef66595edf6f913e0f7c5b93',
          'width': 160,
        }),
      ]),
      'name': 'Romy',
      'uri': 'spotify:artist:3X2DdnmoANw8Rg8luHyZQb',
    }),
    dict({
      'artist_id': '0Lwn2PjwIw7QaoN7gHyqCA',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb659cb7ca4d5e02f48a2ef9f0',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174659cb7ca4d5e02f48a2ef9f0',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178659cb7ca4d5e02f48a2ef9f0',
          'width': 160,
        }),
      ]),
      'name': 'Wolf Saga',
      'uri': 'spotify:artist:0Lwn2PjwIw7QaoN7gHyqCA',
    }),
    dict({
      'artist_id': '7gP3bB2nilZXLfPHJhMdvc',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb22b8e662f0cfdddac8ab22bb',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab6761610000517422b8e662f0cfdddac8ab22bb',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f17822b8e662f0cfdddac8ab22bb',
          'width': 160,
        }),
      ]),
      'name': 'Foster The People',
      'uri': 'spotify:artist:7gP3bB2nilZXLfPHJhMdvc',
    }),
    dict({
      'artist_id': '3hE8S8ohRErocpkY7uJW4a',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebd7fd83f3a54ab822936034b6',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174d7fd83f3a54ab822936034b6',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178d7fd83f3a54ab822936034b6',
          'width': 160,
        }),
      ]),
      'name': 'Within Temptation',
      'uri': 'spotify:artist:3hE8S8ohRErocpkY7uJW4a',
    }),
    dict({
      'artist_id': '3jULn43a6xfzqleyeFjPIq',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb4c4e09e55e5b83bb9f35e3dc',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051744c4e09e55e5b83bb9f35e3dc',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1784c4e09e55e5b83bb9f35e3dc',
          'width': 160,
        }),
      ]),
      'name': 'Area 11',
      'uri': 'spotify:artist:3jULn43a6xfzqleyeFjPIq',
    }),
    dict({
      'artist_id': '2WBJQGf1bT1kxuoqziH5g4',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebbd1cb147996bda17ecc97dd7',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174bd1cb147996bda17ecc97dd7',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178bd1cb147996bda17ecc97dd7',
          'width': 160,
        }),
      ]),
      'name': 'Purple Disco Machine',
      'uri': 'spotify:artist:2WBJQGf1bT1kxuoqziH5g4',
    }),
    dict({
      'artist_id': '6M2wZ9GZgrQXHCFfjv46we',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb0c68f6c95232e716f0abee8d',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051740c68f6c95232e716f0abee8d',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1780c68f6c95232e716f0abee8d',
          'width': 160,
        }),
      ]),
      'name': 'Dua Lipa',
      'uri': 'spotify:artist:6M2wZ9GZgrQXHCFfjv46we',
    }),
    dict({
      'artist_id': '2Ndq6RparrhEoceel7LC4Z',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebf44a22ddf0de309ddf0ae8a9',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174f44a22ddf0de309ddf0ae8a9',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178f44a22ddf0de309ddf0ae8a9',
          'width': 160,
        }),
      ]),
      'name': 'Anna Yvette',
      'uri': 'spotify:artist:2Ndq6RparrhEoceel7LC4Z',
    }),
    dict({
      'artist_id': '3oKRxpszQKUjjaHz388fVA',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5ebd178e3af6da2eef262630ee2',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174d178e3af6da2eef262630ee2',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178d178e3af6da2eef262630ee2',
          'width': 160,
        }),
      ]),
      'name': 'Parcels',
      'uri': 'spotify:artist:3oKRxpszQKUjjaHz388fVA',
    }),
    dict({
      'artist_id': '0RwXnFrEoI8tltFvYpJgP6',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb8cb8fe9483451962ad649d16',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab676161000051748cb8fe9483451962ad649d16',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f1788cb8fe9483451962ad649d16',
          'width': 160,
        }),
      ]),
      'name': 'Confidence Man',
      'uri': 'spotify:artist:0RwXnFrEoI8tltFvYpJgP6',
    }),
    dict({
      'artist_id': '3PyJHH2wyfQK3WZrk9rpmP',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb200914459687748118b36954',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174200914459687748118b36954',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178200914459687748118b36954',
          'width': 160,
        }),
      ]),
      'name': 'Ashnikko',
      'uri': 'spotify:artist:3PyJHH2wyfQK3WZrk9rpmP',
    }),
    dict({
      'artist_id': '5nPOO9iTcrs9k6yFffPxjH',
      'images': list([
        dict({
          'height': 640,
          'url': 'https://i.scdn.co/image/ab6761610000e5eb804f352e162347a18f6401fa',
          'width': 640,
        }),
        dict({
          'height': 320,
          'url': 'https://i.scdn.co/image/ab67616100005174804f352e162347a18f6401fa',
          'width': 320,
        }),
        dict({
          'height': 160,
          'url': 'https://i.scdn.co/image/ab6761610000f178804f352e162347a18f6401fa',
          'width': 160,
        }),
      ]),
      'name': 'Röyksopp',
      'uri': 'spotify:artist:5nPOO9iTcrs9k6yFffPxjH',
    }),
  ])
# ---
# name: test_get_top_tracks
  list([
    dict({
      'album': dict({
        'album_id': '45Qix7gFNajr6IofEIhhE4',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '0PCCGZ0wGLizHt2KZ7hhA2',
            'name': 'Artemas',
            'uri': 'spotify:artist:0PCCGZ0wGLizHt2KZ7hhA2',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273c88e6a4447087f41eb388b14',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02c88e6a4447087f41eb388b14',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851c88e6a4447087f41eb388b14',
            'width': 64,
          }),
        ]),
        'name': 'i like the way you kiss me (burnt)',
        'release_date': '2024-03-26',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 2,
        'uri': 'spotify:album:45Qix7gFNajr6IofEIhhE4',
      }),
      'artists': list([
        dict({
          'artist_id': '0PCCGZ0wGLizHt2KZ7hhA2',
          'name': 'Artemas',
          'uri': 'spotify:artist:0PCCGZ0wGLizHt2KZ7hhA2',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 142514,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/3oRoMXsP2NRzm51lldj1RO',
      }),
      'href': 'https://api.spotify.com/v1/tracks/3oRoMXsP2NRzm51lldj1RO',
      'is_local': False,
      'name': 'i like the way you kiss me',
      'track_id': '3oRoMXsP2NRzm51lldj1RO',
      'track_number': 2,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:3oRoMXsP2NRzm51lldj1RO',
    }),
    dict({
      'album': dict({
        'album_id': '3pjMBXbDLg2oGL7HtVxWgY',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '4YLtscXsxbVgi031ovDDdh',
            'name': 'Chris Stapleton',
            'uri': 'spotify:artist:4YLtscXsxbVgi031ovDDdh',
          }),
          dict({
            'artist_id': '6M2wZ9GZgrQXHCFfjv46we',
            'name': 'Dua Lipa',
            'uri': 'spotify:artist:6M2wZ9GZgrQXHCFfjv46we',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27386f028311a5a746aa46b412f',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0286f028311a5a746aa46b412f',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485186f028311a5a746aa46b412f',
            'width': 64,
          }),
        ]),
        'name': "Think I'm In Love With You (With Dua Lipa) (Live From The 59th ACM Awards)",
        'release_date': '2024-05-01',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:3pjMBXbDLg2oGL7HtVxWgY',
      }),
      'artists': list([
        dict({
          'artist_id': '4YLtscXsxbVgi031ovDDdh',
          'name': 'Chris Stapleton',
          'uri': 'spotify:artist:4YLtscXsxbVgi031ovDDdh',
        }),
        dict({
          'artist_id': '6M2wZ9GZgrQXHCFfjv46we',
          'name': 'Dua Lipa',
          'uri': 'spotify:artist:6M2wZ9GZgrQXHCFfjv46we',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 277066,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/69zgu5rlAie3IPZOEXLxyS',
      }),
      'href': 'https://api.spotify.com/v1/tracks/69zgu5rlAie3IPZOEXLxyS',
      'is_local': False,
      'name': "Think I'm In Love With You (With Dua Lipa) (Live From The 59th ACM Awards)",
      'track_id': '69zgu5rlAie3IPZOEXLxyS',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:69zgu5rlAie3IPZOEXLxyS',
    }),
    dict({
      'album': dict({
        'album_id': '0X9CpcnwoPgzznLDDGx8PI',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0RwXnFrEoI8tltFvYpJgP6',
            'name': 'Confidence Man',
            'uri': 'spotify:artist:0RwXnFrEoI8tltFvYpJgP6',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273f9f4f5a25c823292baed3ae1',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02f9f4f5a25c823292baed3ae1',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851f9f4f5a25c823292baed3ae1',
            'width': 64,
          }),
        ]),
        'name': 'TILT',
        'release_date': '2022-04-01',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 12,
        'uri': 'spotify:album:0X9CpcnwoPgzznLDDGx8PI',
      }),
      'artists': list([
        dict({
          'artist_id': '0RwXnFrEoI8tltFvYpJgP6',
          'name': 'Confidence Man',
          'uri': 'spotify:artist:0RwXnFrEoI8tltFvYpJgP6',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 288160,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/53wnscuzFnH8jaGymzqgfi',
      }),
      'href': 'https://api.spotify.com/v1/tracks/53wnscuzFnH8jaGymzqgfi',
      'is_local': False,
      'name': 'Holiday',
      'track_id': '53wnscuzFnH8jaGymzqgfi',
      'track_number': 6,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:53wnscuzFnH8jaGymzqgfi',
    }),
    dict({
      'album': dict({
        'album_id': '57MSBg5pBQZH5bfLVDmeuP',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
            'name': 'Jamie xx',
            'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2733126a95bb7ed4146a80c7fc6',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e023126a95bb7ed4146a80c7fc6',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048513126a95bb7ed4146a80c7fc6',
            'width': 64,
          }),
        ]),
        'name': 'In Waves',
        'release_date': '2024-09-20',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 12,
        'uri': 'spotify:album:57MSBg5pBQZH5bfLVDmeuP',
      }),
      'artists': list([
        dict({
          'artist_id': '7A0awCXkE1FtSU8B0qwOJQ',
          'name': 'Jamie xx',
          'uri': 'spotify:artist:7A0awCXkE1FtSU8B0qwOJQ',
        }),
        dict({
          'artist_id': '2Q4FR4Ss0mh6EvbiQBHEOU',
          'name': 'Oona Doherty',
          'uri': 'spotify:artist:2Q4FR4Ss0mh6EvbiQBHEOU',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 337414,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/08Jhu8OZ6gCIGWQn6vP3uI',
      }),
      'href': 'https://api.spotify.com/v1/tracks/08Jhu8OZ6gCIGWQn6vP3uI',
      'is_local': False,
      'name': 'Falling Together',
      'track_id': '08Jhu8OZ6gCIGWQn6vP3uI',
      'track_number': 12,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:08Jhu8OZ6gCIGWQn6vP3uI',
    }),
    dict({
      'album': dict({
        'album_id': '5HIWDdg3g9CTOtnevKDl1z',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '0PCCGZ0wGLizHt2KZ7hhA2',
            'name': 'Artemas',
            'uri': 'spotify:artist:0PCCGZ0wGLizHt2KZ7hhA2',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273e67611dbbf69a90d0b6cb738',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02e67611dbbf69a90d0b6cb738',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851e67611dbbf69a90d0b6cb738',
            'width': 64,
          }),
        ]),
        'name': 'i like the way you kiss me',
        'release_date': '2024-03-19',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:5HIWDdg3g9CTOtnevKDl1z',
      }),
      'artists': list([
        dict({
          'artist_id': '0PCCGZ0wGLizHt2KZ7hhA2',
          'name': 'Artemas',
          'uri': 'spotify:artist:0PCCGZ0wGLizHt2KZ7hhA2',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 142514,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/2GxrNKugF82CnoRFbQfzPf',
      }),
      'href': 'https://api.spotify.com/v1/tracks/2GxrNKugF82CnoRFbQfzPf',
      'is_local': False,
      'name': 'i like the way you kiss me',
      'track_id': '2GxrNKugF82CnoRFbQfzPf',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:2GxrNKugF82CnoRFbQfzPf',
    }),
    dict({
      'album': dict({
        'album_id': '3zdCJ99bye9e0G6U8w4ajS',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '74Yus6IHfa3tWZzXXAYtS2',
            'name': 'Onkruid',
            'uri': 'spotify:artist:74Yus6IHfa3tWZzXXAYtS2',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27310b56c729a899af9d12a5a27',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0210b56c729a899af9d12a5a27',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485110b56c729a899af9d12a5a27',
            'width': 64,
          }),
        ]),
        'name': 'Zo Gemeen',
        'release_date': '2023-09-23',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 2,
        'uri': 'spotify:album:3zdCJ99bye9e0G6U8w4ajS',
      }),
      'artists': list([
        dict({
          'artist_id': '74Yus6IHfa3tWZzXXAYtS2',
          'name': 'Onkruid',
          'uri': 'spotify:artist:74Yus6IHfa3tWZzXXAYtS2',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 149116,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/09D3ELdbZ4JZ1si0Nitv9t',
      }),
      'href': 'https://api.spotify.com/v1/tracks/09D3ELdbZ4JZ1si0Nitv9t',
      'is_local': False,
      'name': 'Zo Gemeen',
      'track_id': '09D3ELdbZ4JZ1si0Nitv9t',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:09D3ELdbZ4JZ1si0Nitv9t',
    }),
    dict({
      'album': dict({
        'album_id': '6X2fbRz8huOXlxzId6ET7J',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '4yvcSjfu4PC0CYQyLy4wSq',
            'name': 'Glass Animals',
            'uri': 'spotify:artist:4yvcSjfu4PC0CYQyLy4wSq',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27339266eeddfd90b43ba544f7b',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0239266eeddfd90b43ba544f7b',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485139266eeddfd90b43ba544f7b',
            'width': 64,
          }),
        ]),
        'name': 'A Tear in Space (Airlock)',
        'release_date': '2024-06-07',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:6X2fbRz8huOXlxzId6ET7J',
      }),
      'artists': list([
        dict({
          'artist_id': '4yvcSjfu4PC0CYQyLy4wSq',
          'name': 'Glass Animals',
          'uri': 'spotify:artist:4yvcSjfu4PC0CYQyLy4wSq',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 203989,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/6Bi1Y7TD70eWTCKn7jsQQm',
      }),
      'href': 'https://api.spotify.com/v1/tracks/6Bi1Y7TD70eWTCKn7jsQQm',
      'is_local': False,
      'name': 'A Tear in Space (Airlock)',
      'track_id': '6Bi1Y7TD70eWTCKn7jsQQm',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:6Bi1Y7TD70eWTCKn7jsQQm',
    }),
    dict({
      'album': dict({
        'album_id': '0WWjvPdLmnwYrTi03XJ9ib',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '2WBJQGf1bT1kxuoqziH5g4',
            'name': 'Purple Disco Machine',
            'uri': 'spotify:artist:2WBJQGf1bT1kxuoqziH5g4',
          }),
          dict({
            'artist_id': '7jEEE187pVG6InOxn03oA5',
            'name': 'Benjamin Ingrosso',
            'uri': 'spotify:artist:7jEEE187pVG6InOxn03oA5',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27351254e0f220bfed7028497ac',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0251254e0f220bfed7028497ac',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485151254e0f220bfed7028497ac',
            'width': 64,
          }),
        ]),
        'name': 'Honey Boy (feat. Nile Rodgers & Shenseea)',
        'release_date': '2024-05-03',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:0WWjvPdLmnwYrTi03XJ9ib',
      }),
      'artists': list([
        dict({
          'artist_id': '2WBJQGf1bT1kxuoqziH5g4',
          'name': 'Purple Disco Machine',
          'uri': 'spotify:artist:2WBJQGf1bT1kxuoqziH5g4',
        }),
        dict({
          'artist_id': '7jEEE187pVG6InOxn03oA5',
          'name': 'Benjamin Ingrosso',
          'uri': 'spotify:artist:7jEEE187pVG6InOxn03oA5',
        }),
        dict({
          'artist_id': '3yDIp0kaq9EFKe07X1X2rz',
          'name': 'Nile Rodgers',
          'uri': 'spotify:artist:3yDIp0kaq9EFKe07X1X2rz',
        }),
        dict({
          'artist_id': '1OFOShsIbhy1l5x73yuVyB',
          'name': 'Shenseea',
          'uri': 'spotify:artist:1OFOShsIbhy1l5x73yuVyB',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 227283,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/1NpIUD4KqHaMT91kw0YV40',
      }),
      'href': 'https://api.spotify.com/v1/tracks/1NpIUD4KqHaMT91kw0YV40',
      'is_local': False,
      'name': 'Honey Boy (feat. Nile Rodgers & Shenseea)',
      'track_id': '1NpIUD4KqHaMT91kw0YV40',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:1NpIUD4KqHaMT91kw0YV40',
    }),
    dict({
      'album': dict({
        'album_id': '5quMTd5zeI9yW5UDua8wS4',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '74KM79TiuVKeVCqs8QtB0B',
            'name': 'Sabrina Carpenter',
            'uri': 'spotify:artist:74KM79TiuVKeVCqs8QtB0B',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273659cd4673230913b3918e0d5',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02659cd4673230913b3918e0d5',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851659cd4673230913b3918e0d5',
            'width': 64,
          }),
        ]),
        'name': 'Espresso',
        'release_date': '2024-04-12',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:5quMTd5zeI9yW5UDua8wS4',
      }),
      'artists': list([
        dict({
          'artist_id': '74KM79TiuVKeVCqs8QtB0B',
          'name': 'Sabrina Carpenter',
          'uri': 'spotify:artist:74KM79TiuVKeVCqs8QtB0B',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 175459,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/2qSkIjg1o9h3YT9RAgYN75',
      }),
      'href': 'https://api.spotify.com/v1/tracks/2qSkIjg1o9h3YT9RAgYN75',
      'is_local': False,
      'name': 'Espresso',
      'track_id': '2qSkIjg1o9h3YT9RAgYN75',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:2qSkIjg1o9h3YT9RAgYN75',
    }),
    dict({
      'album': dict({
        'album_id': '6DExt1eX4lflLacVjHHbOs',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '4MVyzYMgTwdP7Z49wAZHx0',
            'name': 'Lynyrd Skynyrd',
            'uri': 'spotify:artist:4MVyzYMgTwdP7Z49wAZHx0',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273128450651c9f0442780d8eb8',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02128450651c9f0442780d8eb8',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851128450651c9f0442780d8eb8',
            'width': 64,
          }),
        ]),
        'name': "Pronounced' Leh-'Nerd 'Skin-'Nerd",
        'release_date': '1973-01-01',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 8,
        'uri': 'spotify:album:6DExt1eX4lflLacVjHHbOs',
      }),
      'artists': list([
        dict({
          'artist_id': '4MVyzYMgTwdP7Z49wAZHx0',
          'name': 'Lynyrd Skynyrd',
          'uri': 'spotify:artist:4MVyzYMgTwdP7Z49wAZHx0',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 547106,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/5EWPGh7jbTNO2wakv8LjUI',
      }),
      'href': 'https://api.spotify.com/v1/tracks/5EWPGh7jbTNO2wakv8LjUI',
      'is_local': False,
      'name': 'Free Bird',
      'track_id': '5EWPGh7jbTNO2wakv8LjUI',
      'track_number': 8,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:5EWPGh7jbTNO2wakv8LjUI',
    }),
    dict({
      'album': dict({
        'album_id': '5rZHUmbp3BNHmPrwvGQfca',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '66FZq0wsY6770bc4O9Dlig',
            'name': 'Vieze Asbak',
            'uri': 'spotify:artist:66FZq0wsY6770bc4O9Dlig',
          }),
          dict({
            'artist_id': '6TQQsMsMKQBHjZrFv63d90',
            'name': 'HET POMPSTATION',
            'uri': 'spotify:artist:6TQQsMsMKQBHjZrFv63d90',
          }),
          dict({
            'artist_id': '2DPRgxvMDx9oQNR25vUIIG',
            'name': 'Kamping Kitsch Club Soundsystem',
            'uri': 'spotify:artist:2DPRgxvMDx9oQNR25vUIIG',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2734c76dc3658c213a1aae458e6',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e024c76dc3658c213a1aae458e6',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048514c76dc3658c213a1aae458e6',
            'width': 64,
          }),
        ]),
        'name': 'De Kamping Is Van Ons (Official 2023 Kamping Kitsch Club Anthem)',
        'release_date': '2023-06-09',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:5rZHUmbp3BNHmPrwvGQfca',
      }),
      'artists': list([
        dict({
          'artist_id': '66FZq0wsY6770bc4O9Dlig',
          'name': 'Vieze Asbak',
          'uri': 'spotify:artist:66FZq0wsY6770bc4O9Dlig',
        }),
        dict({
          'artist_id': '2DPRgxvMDx9oQNR25vUIIG',
          'name': 'Kamping Kitsch Club Soundsystem',
          'uri': 'spotify:artist:2DPRgxvMDx9oQNR25vUIIG',
        }),
        dict({
          'artist_id': '6TQQsMsMKQBHjZrFv63d90',
          'name': 'HET POMPSTATION',
          'uri': 'spotify:artist:6TQQsMsMKQBHjZrFv63d90',
        }),
        dict({
          'artist_id': '3fLUixLOM1KxH2PgdN3PMK',
          'name': 'Yung Petsi',
          'uri': 'spotify:artist:3fLUixLOM1KxH2PgdN3PMK',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 195750,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/53OU7d2qWJskS1AL35vAUh',
      }),
      'href': 'https://api.spotify.com/v1/tracks/53OU7d2qWJskS1AL35vAUh',
      'is_local': False,
      'name': 'De Kamping Is Van Ons - Official 2023 Kamping Kitsch Club Anthem',
      'track_id': '53OU7d2qWJskS1AL35vAUh',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:53OU7d2qWJskS1AL35vAUh',
    }),
    dict({
      'album': dict({
        'album_id': '03dlqdFWY9gwJxGl3AREVy',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '1YEGETLT2p8k97LIo3deHL',
            'name': 'Crash Test Dummies',
            'uri': 'spotify:artist:1YEGETLT2p8k97LIo3deHL',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273df9d39dded05faa9ed520ca6',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02df9d39dded05faa9ed520ca6',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851df9d39dded05faa9ed520ca6',
            'width': 64,
          }),
        ]),
        'name': 'God Shuffled His Feet',
        'release_date': '1993-04-05',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 12,
        'uri': 'spotify:album:03dlqdFWY9gwJxGl3AREVy',
      }),
      'artists': list([
        dict({
          'artist_id': '1YEGETLT2p8k97LIo3deHL',
          'name': 'Crash Test Dummies',
          'uri': 'spotify:artist:1YEGETLT2p8k97LIo3deHL',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 235173,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/31v2AQlx4pDI7kmnLxBkem',
      }),
      'href': 'https://api.spotify.com/v1/tracks/31v2AQlx4pDI7kmnLxBkem',
      'is_local': False,
      'name': 'Mmm Mmm Mmm Mmm',
      'track_id': '31v2AQlx4pDI7kmnLxBkem',
      'track_number': 3,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:31v2AQlx4pDI7kmnLxBkem',
    }),
    dict({
      'album': dict({
        'album_id': '7dPYE1Uoic9mBMFgwcqPaR',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '7uGeDBa1LJ7T1X4fpl8mwk',
            'name': 'Bad Computer',
            'uri': 'spotify:artist:7uGeDBa1LJ7T1X4fpl8mwk',
          }),
          dict({
            'artist_id': '22TzutcnmM3B1e7mWLY0f7',
            'name': 'Ryan Coss',
            'uri': 'spotify:artist:22TzutcnmM3B1e7mWLY0f7',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273b53ceefc28ae70e4189fbcdc',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02b53ceefc28ae70e4189fbcdc',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851b53ceefc28ae70e4189fbcdc',
            'width': 64,
          }),
        ]),
        'name': '4D',
        'release_date': '2024-01-08',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:7dPYE1Uoic9mBMFgwcqPaR',
      }),
      'artists': list([
        dict({
          'artist_id': '7uGeDBa1LJ7T1X4fpl8mwk',
          'name': 'Bad Computer',
          'uri': 'spotify:artist:7uGeDBa1LJ7T1X4fpl8mwk',
        }),
        dict({
          'artist_id': '22TzutcnmM3B1e7mWLY0f7',
          'name': 'Ryan Coss',
          'uri': 'spotify:artist:22TzutcnmM3B1e7mWLY0f7',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 176250,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/2v4bGopODBEOQqWzg31R2s',
      }),
      'href': 'https://api.spotify.com/v1/tracks/2v4bGopODBEOQqWzg31R2s',
      'is_local': False,
      'name': '4D',
      'track_id': '2v4bGopODBEOQqWzg31R2s',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:2v4bGopODBEOQqWzg31R2s',
    }),
    dict({
      'album': dict({
        'album_id': '6ZKwauYXaMVezFcXV0iv5g',
        'album_type': <AlbumType.EP: 'ep'>,
        'artists': list([
          dict({
            'artist_id': '0Lwn2PjwIw7QaoN7gHyqCA',
            'name': 'Wolf Saga',
            'uri': 'spotify:artist:0Lwn2PjwIw7QaoN7gHyqCA',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273cc1bfee3c60e4e4e53ec2ed6',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02cc1bfee3c60e4e4e53ec2ed6',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851cc1bfee3c60e4e4e53ec2ed6',
            'width': 64,
          }),
        ]),
        'name': 'ODAYIN, Pt. 1',
        'release_date': '2024-02-23',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 4,
        'uri': 'spotify:album:6ZKwauYXaMVezFcXV0iv5g',
      }),
      'artists': list([
        dict({
          'artist_id': '0Lwn2PjwIw7QaoN7gHyqCA',
          'name': 'Wolf Saga',
          'uri': 'spotify:artist:0Lwn2PjwIw7QaoN7gHyqCA',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 222047,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/6U33GnHUKkECze9LXllZ3e',
      }),
      'href': 'https://api.spotify.com/v1/tracks/6U33GnHUKkECze9LXllZ3e',
      'is_local': False,
      'name': 'Night Odyssey',
      'track_id': '6U33GnHUKkECze9LXllZ3e',
      'track_number': 4,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:6U33GnHUKkECze9LXllZ3e',
    }),
    dict({
      'album': dict({
        'album_id': '4XQN9sq92HwyTj476FMzYz',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '1l2ekx5skC4gJH8djERwh1',
            'name': 'Don Diablo',
            'uri': 'spotify:artist:1l2ekx5skC4gJH8djERwh1',
          }),
          dict({
            'artist_id': '4bL2B6hmLlMWnUEZnorEtG',
            'name': 'Felix Jaehn',
            'uri': 'spotify:artist:4bL2B6hmLlMWnUEZnorEtG',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273467f1d5ec9f7e2fde2d9b454',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02467f1d5ec9f7e2fde2d9b454',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851467f1d5ec9f7e2fde2d9b454',
            'width': 64,
          }),
        ]),
        'name': 'Monster',
        'release_date': '2024-03-29',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:4XQN9sq92HwyTj476FMzYz',
      }),
      'artists': list([
        dict({
          'artist_id': '1l2ekx5skC4gJH8djERwh1',
          'name': 'Don Diablo',
          'uri': 'spotify:artist:1l2ekx5skC4gJH8djERwh1',
        }),
        dict({
          'artist_id': '4bL2B6hmLlMWnUEZnorEtG',
          'name': 'Felix Jaehn',
          'uri': 'spotify:artist:4bL2B6hmLlMWnUEZnorEtG',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 144000,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/0oWN1xuaWUrx8QGiYqxAs9',
      }),
      'href': 'https://api.spotify.com/v1/tracks/0oWN1xuaWUrx8QGiYqxAs9',
      'is_local': False,
      'name': 'Monster',
      'track_id': '0oWN1xuaWUrx8QGiYqxAs9',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:0oWN1xuaWUrx8QGiYqxAs9',
    }),
    dict({
      'album': dict({
        'album_id': '59Qjgges0uTL92An8PBqdQ',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '0bLxXoUrh0kANKQMWts8KV',
            'name': 'Felicia Lu',
            'uri': 'spotify:artist:0bLxXoUrh0kANKQMWts8KV',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273b9b026737c166ac31bc5de5f',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02b9b026737c166ac31bc5de5f',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851b9b026737c166ac31bc5de5f',
            'width': 64,
          }),
        ]),
        'name': 'Something Regrettable',
        'release_date': '2023-09-29',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 13,
        'uri': 'spotify:album:59Qjgges0uTL92An8PBqdQ',
      }),
      'artists': list([
        dict({
          'artist_id': '0bLxXoUrh0kANKQMWts8KV',
          'name': 'Felicia Lu',
          'uri': 'spotify:artist:0bLxXoUrh0kANKQMWts8KV',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 165000,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/6e4GfqQl153Q6FbEF0efdC',
      }),
      'href': 'https://api.spotify.com/v1/tracks/6e4GfqQl153Q6FbEF0efdC',
      'is_local': False,
      'name': 'My Boy',
      'track_id': '6e4GfqQl153Q6FbEF0efdC',
      'track_number': 8,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:6e4GfqQl153Q6FbEF0efdC',
    }),
    dict({
      'album': dict({
        'album_id': '2OxR6XLzZdDBSLDqFiWQ1g',
        'album_type': <AlbumType.EP: 'ep'>,
        'artists': list([
          dict({
            'artist_id': '74Yus6IHfa3tWZzXXAYtS2',
            'name': 'Onkruid',
            'uri': 'spotify:artist:74Yus6IHfa3tWZzXXAYtS2',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2735942282ecc673556663e297a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e025942282ecc673556663e297a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048515942282ecc673556663e297a',
            'width': 64,
          }),
        ]),
        'name': 'Ergens in de Twintig',
        'release_date': '2020-09-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 6,
        'uri': 'spotify:album:2OxR6XLzZdDBSLDqFiWQ1g',
      }),
      'artists': list([
        dict({
          'artist_id': '74Yus6IHfa3tWZzXXAYtS2',
          'name': 'Onkruid',
          'uri': 'spotify:artist:74Yus6IHfa3tWZzXXAYtS2',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 228061,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/1bqyBEwMTEI2gw9KSkm1CR',
      }),
      'href': 'https://api.spotify.com/v1/tracks/1bqyBEwMTEI2gw9KSkm1CR',
      'is_local': False,
      'name': 'Op Sandalen in de Club',
      'track_id': '1bqyBEwMTEI2gw9KSkm1CR',
      'track_number': 4,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:1bqyBEwMTEI2gw9KSkm1CR',
    }),
    dict({
      'album': dict({
        'album_id': '0M0iJGLagLtI4LlooOiiNZ',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '4oLeXFyACqeem2VImYeBFe',
            'name': 'Fred again..',
            'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
          }),
          dict({
            'artist_id': '3jK9MiCrA42lLAdMGUZpwa',
            'name': 'Anderson .Paak',
            'uri': 'spotify:artist:3jK9MiCrA42lLAdMGUZpwa',
          }),
          dict({
            'artist_id': '6UtYvUtXnmg5EtllDFlWp8',
            'name': 'CHIKA',
            'uri': 'spotify:artist:6UtYvUtXnmg5EtllDFlWp8',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27354539f552c0fda9cb1ecd0c8',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0254539f552c0fda9cb1ecd0c8',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485154539f552c0fda9cb1ecd0c8',
            'width': 64,
          }),
        ]),
        'name': 'places to be',
        'release_date': '2024-05-31',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:0M0iJGLagLtI4LlooOiiNZ',
      }),
      'artists': list([
        dict({
          'artist_id': '4oLeXFyACqeem2VImYeBFe',
          'name': 'Fred again..',
          'uri': 'spotify:artist:4oLeXFyACqeem2VImYeBFe',
        }),
        dict({
          'artist_id': '3jK9MiCrA42lLAdMGUZpwa',
          'name': 'Anderson .Paak',
          'uri': 'spotify:artist:3jK9MiCrA42lLAdMGUZpwa',
        }),
        dict({
          'artist_id': '6UtYvUtXnmg5EtllDFlWp8',
          'name': 'CHIKA',
          'uri': 'spotify:artist:6UtYvUtXnmg5EtllDFlWp8',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 226677,
      'explicit': True,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/561pBFcFL2Pwb9HPO9tU8J',
      }),
      'href': 'https://api.spotify.com/v1/tracks/561pBFcFL2Pwb9HPO9tU8J',
      'is_local': False,
      'name': 'places to be',
      'track_id': '561pBFcFL2Pwb9HPO9tU8J',
      'track_number': 1,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:561pBFcFL2Pwb9HPO9tU8J',
    }),
    dict({
      'album': dict({
        'album_id': '0SICrWXEeAB0feHy4iyTbH',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '6mS5GeFyhea6w9OKo8PO3p',
            'name': 'Goldband',
            'uri': 'spotify:artist:6mS5GeFyhea6w9OKo8PO3p',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273bf1a057043797d5b654dce27',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02bf1a057043797d5b654dce27',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851bf1a057043797d5b654dce27',
            'width': 64,
          }),
        ]),
        'name': 'Samen Tegen Elkaar',
        'release_date': '2024-06-14',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 17,
        'uri': 'spotify:album:0SICrWXEeAB0feHy4iyTbH',
      }),
      'artists': list([
        dict({
          'artist_id': '6mS5GeFyhea6w9OKo8PO3p',
          'name': 'Goldband',
          'uri': 'spotify:artist:6mS5GeFyhea6w9OKo8PO3p',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 204127,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/1L7FnIPHrVXjt49m7Dr36Z',
      }),
      'href': 'https://api.spotify.com/v1/tracks/1L7FnIPHrVXjt49m7Dr36Z',
      'is_local': False,
      'name': 'Naakt Op Het Plein',
      'track_id': '1L7FnIPHrVXjt49m7Dr36Z',
      'track_number': 9,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:1L7FnIPHrVXjt49m7Dr36Z',
    }),
    dict({
      'album': dict({
        'album_id': '0GpklLqjWNrhropGa4XRRD',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
            'name': 'Alfie Templeman',
            'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2734d05e22092c4c9920d2567ce',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e024d05e22092c4c9920d2567ce',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048514d05e22092c4c9920d2567ce',
            'width': 64,
          }),
        ]),
        'name': 'Radiosoul',
        'release_date': '2024-06-07',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 11,
        'uri': 'spotify:album:0GpklLqjWNrhropGa4XRRD',
      }),
      'artists': list([
        dict({
          'artist_id': '6QzMY3tnu0m56eKUnr4uCF',
          'name': 'Alfie Templeman',
          'uri': 'spotify:artist:6QzMY3tnu0m56eKUnr4uCF',
        }),
      ]),
      'disc_number': 1,
      'duration_ms': 206484,
      'explicit': False,
      'external_urls': dict({
        'spotify': 'https://open.spotify.com/track/6Ttp9JrzcpNYG0upW6NKRO',
      }),
      'href': 'https://api.spotify.com/v1/tracks/6Ttp9JrzcpNYG0upW6NKRO',
      'is_local': False,
      'name': 'This Is Just The Beginning',
      'track_id': '6Ttp9JrzcpNYG0upW6NKRO',
      'track_number': 3,
      'type': <ItemType.TRACK: 'track'>,
      'uri': 'spotify:track:6Ttp9JrzcpNYG0upW6NKRO',
    }),
  ])
# ---
# name: test_get_user
  dict({
    'display_name': 'smedjan',
    'images': list([
    ]),
    'object_type': 'user',
    'uri': 'spotify:user:smedjan',
    'user_id': 'smedjan',
  })
# ---
# name: test_search
  dict({
    'albums': list([
      dict({
        'album_id': '02XORqPIterIIxAtmd0vAv',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '4iqEVZEav7vIiv1HStr6Gx',
            'name': 'Detailed',
            'uri': 'spotify:artist:4iqEVZEav7vIiv1HStr6Gx',
          }),
          dict({
            'artist_id': '7iH754eigCrs80sQ08MFAx',
            'name': 'Damaxy',
            'uri': 'spotify:artist:7iH754eigCrs80sQ08MFAx',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2731338ff43064f5569b688d84e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e021338ff43064f5569b688d84e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048511338ff43064f5569b688d84e',
            'width': 64,
          }),
        ]),
        'name': 'Oldschool',
        'release_date': '2025-01-23',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:02XORqPIterIIxAtmd0vAv',
      }),
      dict({
        'album_id': '7E4noAp6wjOrAUa2LFY9Lh',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '3NOLGndGHL48IB3YFdA36r',
            'name': 'Alon',
            'uri': 'spotify:artist:3NOLGndGHL48IB3YFdA36r',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2730a042c5a53fb590b20159247',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e020a042c5a53fb590b20159247',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048510a042c5a53fb590b20159247',
            'width': 64,
          }),
        ]),
        'name': 'Older',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:7E4noAp6wjOrAUa2LFY9Lh',
      }),
      dict({
        'album_id': '21nmDib5NI3XZ9LcxVuQLG',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '0M3W0VPiLEjryaAfMEoP8z',
            'name': 'Pien',
            'uri': 'spotify:artist:0M3W0VPiLEjryaAfMEoP8z',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273ed9252bd06d28911bb1ec822',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02ed9252bd06d28911bb1ec822',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851ed9252bd06d28911bb1ec822',
            'width': 64,
          }),
        ]),
        'name': 'Old',
        'release_date': '2024-05-17',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:21nmDib5NI3XZ9LcxVuQLG',
      }),
      dict({
        'album_id': '3I8BYxuKYGigt7Q0nQqbZl',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '1hn1L1XJda0m8P3r3ebF0S',
            'name': 'Burn the Jukebox',
            'uri': 'spotify:artist:1hn1L1XJda0m8P3r3ebF0S',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273c1901c24c499fa0cb568b877',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02c1901c24c499fa0cb568b877',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851c1901c24c499fa0cb568b877',
            'width': 64,
          }),
        ]),
        'name': 'Old',
        'release_date': '2023-06-09',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:3I8BYxuKYGigt7Q0nQqbZl',
      }),
      dict({
        'album_id': '2lndvw9y9t8db2ehwUEU9r',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '0B6IiyD6eUa5YfYzGz0L5V',
            'name': 'Theis EZ',
            'uri': 'spotify:artist:0B6IiyD6eUa5YfYzGz0L5V',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27340d6d028449b14221ee97a49',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0240d6d028449b14221ee97a49',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485140d6d028449b14221ee97a49',
            'width': 64,
          }),
        ]),
        'name': 'Oldschool Sound',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:2lndvw9y9t8db2ehwUEU9r',
      }),
      dict({
        'album_id': '6uBuMzCh4LjbxelwfLNeGI',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '2Lvu2BLcnNvNw8yaKMKkBY',
            'name': 'SHIVAN',
            'uri': 'spotify:artist:2Lvu2BLcnNvNw8yaKMKkBY',
          }),
          dict({
            'artist_id': '6aH5wUamNyPqimXRBt67k1',
            'name': 'Hoved',
            'uri': 'spotify:artist:6aH5wUamNyPqimXRBt67k1',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2737a2c05d4621e6ef88d99c32c',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e027a2c05d4621e6ef88d99c32c',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048517a2c05d4621e6ef88d99c32c',
            'width': 64,
          }),
        ]),
        'name': 'Old',
        'release_date': '2020-02-28',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:6uBuMzCh4LjbxelwfLNeGI',
      }),
      dict({
        'album_id': '0Px1WVf0Kvxfp13W9yCUHa',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '4t4VkbXR9kExivO6uzOkth',
            'name': 'Cody Browning',
            'uri': 'spotify:artist:4t4VkbXR9kExivO6uzOkth',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273906f8acb008d3050a8c40953',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02906f8acb008d3050a8c40953',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851906f8acb008d3050a8c40953',
            'width': 64,
          }),
        ]),
        'name': 'Old',
        'release_date': '2023-11-29',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:0Px1WVf0Kvxfp13W9yCUHa',
      }),
      dict({
        'album_id': '4rgejByvAJSID1nDCAeOCg',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '5uTcUahIsGpgZ1Gzu23004',
            'name': 'Titus Haskins',
            'uri': 'spotify:artist:5uTcUahIsGpgZ1Gzu23004',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27393fa91761476d47119e756e1',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0293fa91761476d47119e756e1',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485193fa91761476d47119e756e1',
            'width': 64,
          }),
        ]),
        'name': 'Old',
        'release_date': '2024-03-15',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:4rgejByvAJSID1nDCAeOCg',
      }),
      dict({
        'album_id': '20OkXlNvLXg6WhCU2giFMA',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '7z5KwSoePmOQYtbUSuJgUh',
            'name': 'Pedyrus',
            'uri': 'spotify:artist:7z5KwSoePmOQYtbUSuJgUh',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2738fe2ec5832a56e343f19348e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e028fe2ec5832a56e343f19348e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048518fe2ec5832a56e343f19348e',
            'width': 64,
          }),
        ]),
        'name': 'Old',
        'release_date': '2023-02-25',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 2,
        'uri': 'spotify:album:20OkXlNvLXg6WhCU2giFMA',
      }),
      dict({
        'album_id': '1fzj07jlfG3LlWg0SGfqt6',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '7FvqZfHmTRRR4KVZPpZr9s',
            'name': 'XVGNS',
            'uri': 'spotify:artist:7FvqZfHmTRRR4KVZPpZr9s',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273f3c7b8b4ed246c55d80a6778',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02f3c7b8b4ed246c55d80a6778',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851f3c7b8b4ed246c55d80a6778',
            'width': 64,
          }),
        ]),
        'name': 'OLD MEMORY',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 3,
        'uri': 'spotify:album:1fzj07jlfG3LlWg0SGfqt6',
      }),
      dict({
        'album_id': '2HmTlFULDXO52BvSChRGJv',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '5RIPjT0oNRQ8XGPcnwBL8n',
            'name': 'DvirNuns',
            'uri': 'spotify:artist:5RIPjT0oNRQ8XGPcnwBL8n',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27325930a501e5fdf66cc60b46b',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0225930a501e5fdf66cc60b46b',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485125930a501e5fdf66cc60b46b',
            'width': 64,
          }),
        ]),
        'name': 'Old School TB',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:2HmTlFULDXO52BvSChRGJv',
      }),
      dict({
        'album_id': '4tVKDhY4DuXYWBm2n85CLF',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '3N7feSJ5L5LiXyBvcFVUPm',
            'name': 'CPRCRN',
            'uri': 'spotify:artist:3N7feSJ5L5LiXyBvcFVUPm',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27342363e2a303d895762a7ec64',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0242363e2a303d895762a7ec64',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485142363e2a303d895762a7ec64',
            'width': 64,
          }),
        ]),
        'name': 'old school (Slowed and Reverb)',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:4tVKDhY4DuXYWBm2n85CLF',
      }),
      dict({
        'album_id': '1fP2VgEkNKevlFiHu5FnGL',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '7bHm3B3jJju0q9FUdOgp3b',
            'name': 'Blockhead',
            'uri': 'spotify:artist:7bHm3B3jJju0q9FUdOgp3b',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2736f9d95d19f689e68a2b74bb6',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e026f9d95d19f689e68a2b74bb6',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048516f9d95d19f689e68a2b74bb6',
            'width': 64,
          }),
        ]),
        'name': 'That Olde Timey Sourcery',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:1fP2VgEkNKevlFiHu5FnGL',
      }),
      dict({
        'album_id': '0vh22TbDhqij8CsFJMl8fu',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '7JMqAqShijOCtkhVqIIAI3',
            'name': 'Maxim Rad',
            'uri': 'spotify:artist:7JMqAqShijOCtkhVqIIAI3',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2738ecbe43e7df80ce3c5132dbf',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e028ecbe43e7df80ce3c5132dbf',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048518ecbe43e7df80ce3c5132dbf',
            'width': 64,
          }),
        ]),
        'name': 'Old',
        'release_date': '1993-05-03',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 16,
        'uri': 'spotify:album:0vh22TbDhqij8CsFJMl8fu',
      }),
      dict({
        'album_id': '5LGAmeGeiO7xYvcMtNZ2nE',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '2fvlcT93u5SQePtPugGGpz',
            'name': 'Arielan Vide',
            'uri': 'spotify:artist:2fvlcT93u5SQePtPugGGpz',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b2739b3f1a37e11fdef107d59e13',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e029b3f1a37e11fdef107d59e13',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d000048519b3f1a37e11fdef107d59e13',
            'width': 64,
          }),
        ]),
        'name': 'For Old Days Gone',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:5LGAmeGeiO7xYvcMtNZ2nE',
      }),
      dict({
        'album_id': '45evuVVrY9LzPez8geNEIF',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '19ra5tSw0tWufvUp8GotLo',
            'name': 'George Michael',
            'uri': 'spotify:artist:19ra5tSw0tWufvUp8GotLo',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273721aa94703c1a94c735aacd0',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02721aa94703c1a94c735aacd0',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851721aa94703c1a94c735aacd0',
            'width': 64,
          }),
        ]),
        'name': 'Older',
        'release_date': '1996-05-13',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 11,
        'uri': 'spotify:album:45evuVVrY9LzPez8geNEIF',
      }),
      dict({
        'album_id': '0AMT378RSZtNOXrzDNkkZJ',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '4VmbEmPe7idiK1hjtCODVy',
            'name': 'Stefan Scholz',
            'uri': 'spotify:artist:4VmbEmPe7idiK1hjtCODVy',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27382e9e623a5acb286ac99263d',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0282e9e623a5acb286ac99263d',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485182e9e623a5acb286ac99263d',
            'width': 64,
          }),
        ]),
        'name': 'The old train',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:0AMT378RSZtNOXrzDNkkZJ',
      }),
      dict({
        'album_id': '3i1NMEP4LKF7O23cAyDqqi',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '1KgiS9L9gXZUa40X3zoBE9',
            'name': 'Rahmat Tahalu',
            'uri': 'spotify:artist:1KgiS9L9gXZUa40X3zoBE9',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273683bed6bb7d53eaaf17d92b3',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02683bed6bb7d53eaaf17d92b3',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851683bed6bb7d53eaaf17d92b3',
            'width': 64,
          }),
        ]),
        'name': 'Old The Style',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:3i1NMEP4LKF7O23cAyDqqi',
      }),
      dict({
        'album_id': '5Ep5qqNDw6ZrQz0emm1IMf',
        'album_type': <AlbumType.ALBUM: 'album'>,
        'artists': list([
          dict({
            'artist_id': '7eMEpq0mpOCPTnLZaMZqAM',
            'name': 'Tomo',
            'uri': 'spotify:artist:7eMEpq0mpOCPTnLZaMZqAM',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b27393182445ee9610ab2c31cc17',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e0293182445ee9610ab2c31cc17',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d0000485193182445ee9610ab2c31cc17',
            'width': 64,
          }),
        ]),
        'name': 'The Old Parade',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 11,
        'uri': 'spotify:album:5Ep5qqNDw6ZrQz0emm1IMf',
      }),
      dict({
        'album_id': '3yly1fN3mnHVpjDPmNoCLW',
        'album_type': <AlbumType.SINGLE: 'single'>,
        'artists': list([
          dict({
            'artist_id': '5NDzGl3leOCXxfUcyQC0sv',
            'name': 'Sam Opoku',
            'uri': 'spotify:artist:5NDzGl3leOCXxfUcyQC0sv',
          }),
        ]),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab67616d0000b273cca5a9d4172c7792549ac929',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67616d00001e02cca5a9d4172c7792549ac929',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab67616d00004851cca5a9d4172c7792549ac929',
            'width': 64,
          }),
        ]),
        'name': 'Old (Acoustic)',
        'release_date': '2024-12-13',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'total_tracks': 1,
        'uri': 'spotify:album:3yly1fN3mnHVpjDPmNoCLW',
      }),
    ]),
    'artists': list([
      dict({
        'artist_id': '4BMtxSIHPpG1WM2TbvNjiR',
        'name': 'Old Gods of Asgard',
        'uri': 'spotify:artist:4BMtxSIHPpG1WM2TbvNjiR',
      }),
      dict({
        'artist_id': '562Od3CffWedyz2BbeYWVn',
        'name': 'Mike Oldfield',
        'uri': 'spotify:artist:562Od3CffWedyz2BbeYWVn',
      }),
      dict({
        'artist_id': '6v2YWK8EvCyut0QtBcAypu',
        'name': 'Old Jim',
        'uri': 'spotify:artist:6v2YWK8EvCyut0QtBcAypu',
      }),
      dict({
        'artist_id': '6y8XlgIV8BLlIg1tT1R10i',
        'name': 'Old Dominion',
        'uri': 'spotify:artist:6y8XlgIV8BLlIg1tT1R10i',
      }),
      dict({
        'artist_id': '6vUNwmljZAcn7tNtUoxG45',
        'name': 'Old Sea Brigade',
        'uri': 'spotify:artist:6vUNwmljZAcn7tNtUoxG45',
      }),
      dict({
        'artist_id': '4p1ptZXSlFpZqWlsailjeU',
        'name': 'Old',
        'uri': 'spotify:artist:4p1ptZXSlFpZqWlsailjeU',
      }),
      dict({
        'artist_id': '50NoVNy9GU1lCrDV8iGpyu',
        'name': "Ol' Dirty Bastard",
        'uri': 'spotify:artist:50NoVNy9GU1lCrDV8iGpyu',
      }),
      dict({
        'artist_id': '07ECVhQIO0OL0BBq2U1Rf6',
        'name': 'OLD',
        'uri': 'spotify:artist:07ECVhQIO0OL0BBq2U1Rf6',
      }),
      dict({
        'artist_id': '3N8YzKqrEQonvd5RLQ4iYg',
        'name': 'Old Mervs',
        'uri': 'spotify:artist:3N8YzKqrEQonvd5RLQ4iYg',
      }),
      dict({
        'artist_id': '4DBi4EYXgiqbkxvWUXUzMi',
        'name': 'Old Crow Medicine Show',
        'uri': 'spotify:artist:4DBi4EYXgiqbkxvWUXUzMi',
      }),
      dict({
        'artist_id': '4QuF87x3dFrXOEw7jDvbFM',
        'name': 'Old',
        'uri': 'spotify:artist:4QuF87x3dFrXOEw7jDvbFM',
      }),
      dict({
        'artist_id': '6cH8ZqLL9KCgdPJ9tjMd3X',
        'name': 'Old',
        'uri': 'spotify:artist:6cH8ZqLL9KCgdPJ9tjMd3X',
      }),
      dict({
        'artist_id': '1WA3ZW07yVi8mMBvPSPD1G',
        'name': 'Old',
        'uri': 'spotify:artist:1WA3ZW07yVi8mMBvPSPD1G',
      }),
      dict({
        'artist_id': '2Y2S5IcmpF2cuYbjaj7fuA',
        'name': 'Old school beats',
        'uri': 'spotify:artist:2Y2S5IcmpF2cuYbjaj7fuA',
      }),
      dict({
        'artist_id': '15sJO7egTBkVMaHxCpTE1Q',
        'name': 'Mirjam Oldenhave',
        'uri': 'spotify:artist:15sJO7egTBkVMaHxCpTE1Q',
      }),
      dict({
        'artist_id': '74bw8BQiXEcYGVi3wkD5HA',
        'name': 'OLD',
        'uri': 'spotify:artist:74bw8BQiXEcYGVi3wkD5HA',
      }),
      dict({
        'artist_id': '3lybdJ5QPH5NJolzMVKnLx',
        'name': 'Old Man Canyon',
        'uri': 'spotify:artist:3lybdJ5QPH5NJolzMVKnLx',
      }),
      dict({
        'artist_id': '7iH754eigCrs80sQ08MFAx',
        'name': 'Damaxy',
        'uri': 'spotify:artist:7iH754eigCrs80sQ08MFAx',
      }),
      dict({
        'artist_id': '6sW5k31iA8sTy0i2goUKF9',
        'name': 'Oldilla',
        'uri': 'spotify:artist:6sW5k31iA8sTy0i2goUKF9',
      }),
      dict({
        'artist_id': '4dbBRTOF73ioPdjvyYzJ52',
        'name': 'Old',
        'uri': 'spotify:artist:4dbBRTOF73ioPdjvyYzJ52',
      }),
    ]),
    'audiobooks': list([
      dict({
        'audiobook_id': '7sn0W2eNkETlJgbgmhijDI',
        'authors': list([
          dict({
            'name': 'Jennette McCurdy',
          }),
        ]),
        'description': '''
          Author(s): Jennette McCurdy
          Narrator(s): Jennette McCurdy<b>* #1 <i>NEW YORK TIMES</i> BESTSELLER * #1 INTERNATIONAL BESTSELLER * </b><B>MORE THAN 2 MILLION COPIES SOLD!</B><br> <br><b>A heartbreaking and hilarious memoir by <i>iCarly </i>and <i>Sam & Cat </i>star Jennette McCurdy about her struggles as a former child actor—including eating disorders, addiction, and a complicated relationship with her overbearing mother—and how she retook control of her life. </b><br><br>Jennette McCurdy was six years old when she had her first acting audition. Her mother’s dream was for her only daughter to become a star, and Jennette would do anything to make her mother happy. So she went along with what Mom called “calorie restriction,” eating little and weighing herself five times a day. She endured extensive at-home makeovers while Mom chided, “Your eyelashes are invisible, okay? You think Dakota Fanning doesn’t tint hers?” She was even showered by Mom until age sixteen while sharing her diaries, email, and all her income.<br> <br>In <i>I’m Glad My Mom Died</i>, Jennette recounts all this in unflinching detail—just as she chronicles what happens when the dream finally comes true. Cast in a new Nickelodeon series called <i>iCarly</i>, she is thrust into fame. Though Mom is ecstatic, emailing fan club moderators and getting on a first-name basis with the paparazzi (“Hi Gale!”), Jennette is riddled with anxiety, shame, and self-loathing, which manifest into eating disorders, addiction, and a series of unhealthy relationships. These issues only get worse when, soon after taking the lead in the <i>iCarly</i> spinoff <i>Sam & Cat</i> alongside Ariana Grande, her mother dies of cancer. Finally, after discovering therapy and quitting acting, Jennette embarks on recovery and decides for the first time in her life what she really wants.<br> <br>Told with refreshing candor and dark humor, <i>I’m Glad My Mom Died</i> is an inspiring story of resilience, independence, and the joy of shampooing your own hair.
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7sn0W2eNkETlJgbgmhijDI',
        }),
        'html_description': 'Author(s): Jennette McCurdy<br/>Narrator(s): Jennette McCurdy<br/>&lt;b&gt;* #1 &lt;i&gt;NEW YORK TIMES&lt;/i&gt; BESTSELLER * #1 INTERNATIONAL BESTSELLER * &lt;/b&gt;&lt;B&gt;MORE THAN 2 MILLION COPIES SOLD!&lt;/B&gt;&lt;br&gt; &lt;br&gt;&lt;b&gt;A heartbreaking and hilarious memoir by &lt;i&gt;iCarly &lt;/i&gt;and &lt;i&gt;Sam &amp; Cat &lt;/i&gt;star Jennette McCurdy about her struggles as a former child actor—including eating disorders, addiction, and a complicated relationship with her overbearing mother—and how she retook control of her life. &lt;/b&gt;&lt;br&gt;&lt;br&gt;Jennette McCurdy was six years old when she had her first acting audition. Her mother’s dream was for her only daughter to become a star, and Jennette would do anything to make her mother happy. So she went along with what Mom called “calorie restriction,” eating little and weighing herself five times a day. She endured extensive at-home makeovers while Mom chided, “Your eyelashes are invisible, okay? You think Dakota Fanning doesn’t tint hers?” She was even showered by Mom until age sixteen while sharing her diaries, email, and all her income.&lt;br&gt; &lt;br&gt;In &lt;i&gt;I’m Glad My Mom Died&lt;/i&gt;, Jennette recounts all this in unflinching detail—just as she chronicles what happens when the dream finally comes true. Cast in a new Nickelodeon series called &lt;i&gt;iCarly&lt;/i&gt;, she is thrust into fame. Though Mom is ecstatic, emailing fan club moderators and getting on a first-name basis with the paparazzi (“Hi Gale!”), Jennette is riddled with anxiety, shame, and self-loathing, which manifest into eating disorders, addiction, and a series of unhealthy relationships. These issues only get worse when, soon after taking the lead in the &lt;i&gt;iCarly&lt;/i&gt; spinoff &lt;i&gt;Sam &amp; Cat&lt;/i&gt; alongside Ariana Grande, her mother dies of cancer. Finally, after discovering therapy and quitting acting, Jennette embarks on recovery and decides for the first time in her life what she really wants.&lt;br&gt; &lt;br&gt;Told with refreshing candor and dark humor, &lt;i&gt;I’m Glad My Mom Died&lt;/i&gt; is an inspiring story of resilience, independence, and the joy of shampooing your own hair.',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a81a6f05c14d9ba09abb0d4703',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b1a6f05c14d9ba09abb0d4703',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b1a6f05c14d9ba09abb0d4703',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': "I'm Glad My Mom Died",
        'narrators': list([
          dict({
            'name': 'Jennette McCurdy',
          }),
        ]),
        'publisher': 'Jennette McCurdy',
        'total_chapters': 229,
        'type': 'audiobook',
        'uri': 'spotify:show:7sn0W2eNkETlJgbgmhijDI',
      }),
      dict({
        'audiobook_id': '7M70q4c9LhdcApynxSD52r',
        'authors': list([
          dict({
            'name': 'Uncredited',
          }),
        ]),
        'description': '''
          Author(s): Uncredited
          Narrator(s): George Vafiadis<p>Experience one of the most used translations of the Bible in this unabridged presentation of the King James Version of the Bible.</p><p>The King James Version was written in 1611 by order of King James I as the official translation for the Church of England. The version was created to eliminate any errors in previous translations, and to put to book into common language useful for all people. The book was translated from Greek, Hebrew, and Aramaic. The version was re-edited in 1769 and has remain largely untouched for the centuries after.</p><p>For many modern Christian denominations, the King James Version remains the preferred English translation of biblical texts. Though the language is more formal than modern English, the formality gives a certain weight to the contents, and the translation is still regarded as being remarkably close to the original meanings of the text.</p><p>This audiobook contains both the Old and New Testaments, which together chronicle the foundations, history, and theology of the Christian church. The book is comprised of 66 individual books, each with a unique history, authorship, and context.</p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7M70q4c9LhdcApynxSD52r',
        }),
        'html_description': 'Author(s): Uncredited<br/>Narrator(s): George Vafiadis<br/>&lt;p&gt;Experience one of the most used translations of the Bible in this unabridged presentation of the King James Version of the Bible.&lt;/p&gt;&lt;p&gt;The King James Version was written in 1611 by order of King James I as the official translation for the Church of England. The version was created to eliminate any errors in previous translations, and to put to book into common language useful for all people. The book was translated from Greek, Hebrew, and Aramaic. The version was re-edited in 1769 and has remain largely untouched for the centuries after.&lt;/p&gt;&lt;p&gt;For many modern Christian denominations, the King James Version remains the preferred English translation of biblical texts. Though the language is more formal than modern English, the formality gives a certain weight to the contents, and the translation is still regarded as being remarkably close to the original meanings of the text.&lt;/p&gt;&lt;p&gt;This audiobook contains both the Old and New Testaments, which together chronicle the foundations, history, and theology of the Christian church. The book is comprised of 66 individual books, each with a unique history, authorship, and context.&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8e0c90bca49e9663cc1a8f7ac',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5be0c90bca49e9663cc1a8f7ac',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703be0c90bca49e9663cc1a8f7ac',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'The King James Bible',
        'narrators': list([
          dict({
            'name': 'George Vafiadis',
          }),
        ]),
        'publisher': 'Uncredited',
        'total_chapters': 119,
        'type': 'audiobook',
        'uri': 'spotify:show:7M70q4c9LhdcApynxSD52r',
      }),
      dict({
        'audiobook_id': '4DHKr3VRbQiVZQoxCWRQQu',
        'authors': list([
          dict({
            'name': 'Quan Millz',
          }),
        ]),
        'description': '''
          Author(s): Quan Millz
          Narrator(s): Karmaa<p><strong>OLD THOT NEXT DOOR</strong> is indeed a long-anticipated ratchet soap opera thriller by bestselling African-American Urban Fiction author <strong>QUAN MILLZ</strong>.</p><p>Meet Vernita Ernestine Washington, a feisty 76-year-old woman who doesn’t care what you think about her ways, especially for a woman her age. Yeah, she might be a senior citizen but she’d be the first to tell you AGE AIN'T NOTHING BUT A NUMBER!</p><p>She’s convinced the honeycomb between her legs doesn’t taste a day older than forty. "Don’t let the gray hairs fool you now!"A retired employee of the Illinois Department of Motor Vehicles, Mrs. Washington runs the mean, cold streets of Chi-town messing with all types of young thugs with multiple felonies. A widow for some time now, Vernita is determined to make up for her stale marriage. However, when a major health scare sets her back, she finds herself losing everything.</p><p>Reality sets in that her time on Earth is about to come to a close. Now faced with a death sentence, Vernita seeks to live out her remaining days being the biggest old super freak. She gets her mojo back and begins living her life again. But a major, surprising twist will throw her life into more unpredictable chaos.</p><p>Read more in OLD THOT NEXT DOOR!</p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/4DHKr3VRbQiVZQoxCWRQQu',
        }),
        'html_description': 'Author(s): Quan Millz<br/>Narrator(s): Karmaa<br/>&lt;p&gt;&lt;strong&gt;OLD THOT NEXT DOOR&lt;/strong&gt; is indeed a long-anticipated ratchet soap opera thriller by bestselling African-American Urban Fiction author &lt;strong&gt;QUAN MILLZ&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;Meet Vernita Ernestine Washington, a feisty 76-year-old woman who doesn’t care what you think about her ways, especially for a woman her age. Yeah, she might be a senior citizen but she’d be the first to tell you AGE AIN&#39;T NOTHING BUT A NUMBER!&lt;/p&gt;&lt;p&gt;She’s convinced the honeycomb between her legs doesn’t taste a day older than forty. &#34;Don’t let the gray hairs fool you now!&#34;A retired employee of the Illinois Department of Motor Vehicles, Mrs. Washington runs the mean, cold streets of Chi-town messing with all types of young thugs with multiple felonies. A widow for some time now, Vernita is determined to make up for her stale marriage. However, when a major health scare sets her back, she finds herself losing everything.&lt;/p&gt;&lt;p&gt;Reality sets in that her time on Earth is about to come to a close. Now faced with a death sentence, Vernita seeks to live out her remaining days being the biggest old super freak. She gets her mojo back and begins living her life again. But a major, surprising twist will throw her life into more unpredictable chaos.&lt;/p&gt;&lt;p&gt;Read more in OLD THOT NEXT DOOR!&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a841cadb864e1d934a7b499e69',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b41cadb864e1d934a7b499e69',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b41cadb864e1d934a7b499e69',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'Old THOT Next Door',
        'narrators': list([
          dict({
            'name': 'Karmaa',
          }),
        ]),
        'publisher': 'Quan Millz',
        'total_chapters': 39,
        'type': 'audiobook',
        'uri': 'spotify:show:4DHKr3VRbQiVZQoxCWRQQu',
      }),
      dict({
        'audiobook_id': '1RXqi58QpW5WS9y9s4Irgc',
        'authors': list([
          dict({
            'name': 'Paulo Coelho',
          }),
        ]),
        'description': '''
          Author(s): Paulo Coelho
          Narrator(s): Jeremy Irons<p><strong>AN INTERNATIONAL BESTSELLER • OVER 80 MILLION COPIES SOLD WORLDWIDE</strong></p><p><strong>“Translated into 80 languages, the allegory teaches us about dreams, destiny, and the reason we are all here.”—Oprah Daily, “Best Self-Help Books of a Generation”</strong></p><p><strong>“It’s a brilliant, magical, life-changing book that continues to blow my mind with its lessons. [...] A remarkable tome.”—Neil Patrick Harris, actor</strong></p><p><strong>A special 25th anniversary edition of the extraordinary international bestseller, including a new foreword by Paulo Coelho.</strong></p><p>Combining magic, mysticism, wisdom, and wonder into an inspiring tale of self-discovery, <em>The Alchemist</em> has become a modern classic, selling millions of copies around the world and transforming the lives of countless readers across generations.</p><p>Paulo Coelho's masterpiece tells the mystical story of Santiago, an Andalusian shepherd boy who yearns to travel in search of a worldly treasure. His quest will lead him to riches far different—and far more satisfying—than he ever imagined. Santiago's journey teaches us about the essential wisdom of listening to our hearts, of recognizing opportunity and learning to read the omens strewn along life's path, and, most importantly, to follow our dreams.</p><p><strong>“A magical little volume.”—<em>San Francisco Chronicle</em></strong></p><p><strong>“[This] Brazilian wizard makes books disappear from stores.”—<em>The</em> <em>New York Times</em></strong></p><p><strong>“A sweetly exotic tale for young and old alike.”—<em>Publishers Weekly</em></strong></p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/1RXqi58QpW5WS9y9s4Irgc',
        }),
        'html_description': 'Author(s): Paulo Coelho<br/>Narrator(s): Jeremy Irons<br/>&lt;p&gt;&lt;strong&gt;AN INTERNATIONAL BESTSELLER • OVER 80 MILLION COPIES SOLD WORLDWIDE&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;“Translated into 80 languages, the allegory teaches us about dreams, destiny, and the reason we are all here.”—Oprah Daily, “Best Self-Help Books of a Generation”&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;“It’s a brilliant, magical, life-changing book that continues to blow my mind with its lessons. [...] A remarkable tome.”—Neil Patrick Harris, actor&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;A special 25th anniversary edition of the extraordinary international bestseller, including a new foreword by Paulo Coelho.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Combining magic, mysticism, wisdom, and wonder into an inspiring tale of self-discovery, &lt;em&gt;The Alchemist&lt;/em&gt; has become a modern classic, selling millions of copies around the world and transforming the lives of countless readers across generations.&lt;/p&gt;&lt;p&gt;Paulo Coelho&#39;s masterpiece tells the mystical story of Santiago, an Andalusian shepherd boy who yearns to travel in search of a worldly treasure. His quest will lead him to riches far different—and far more satisfying—than he ever imagined. Santiago&#39;s journey teaches us about the essential wisdom of listening to our hearts, of recognizing opportunity and learning to read the omens strewn along life&#39;s path, and, most importantly, to follow our dreams.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;“A magical little volume.”—&lt;em&gt;San Francisco Chronicle&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;“[This] Brazilian wizard makes books disappear from stores.”—&lt;em&gt;The&lt;/em&gt; &lt;em&gt;New York Times&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;“A sweetly exotic tale for young and old alike.”—&lt;em&gt;Publishers Weekly&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8dd99ce64c36b3839ae53e95a',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5bdd99ce64c36b3839ae53e95a',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703bdd99ce64c36b3839ae53e95a',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'The Alchemist',
        'narrators': list([
          dict({
            'name': 'Jeremy Irons',
          }),
        ]),
        'publisher': 'Paulo Coelho',
        'total_chapters': 49,
        'type': 'audiobook',
        'uri': 'spotify:show:1RXqi58QpW5WS9y9s4Irgc',
      }),
      dict({
        'audiobook_id': '00NlcJRrGEkenK8f6rELyq',
        'authors': list([
          dict({
            'name': 'Stephen Fry',
          }),
        ]),
        'description': '''
          Author(s): Stephen Fry
          Narrator(s): Stephen Fry<p><b>Brought to you by Penguin.<br><br>A <i>Sunday Times</i> bestseller<br><br>The next book in Stephen Fry's acclaimed internationally bestselling Greek myths series telling the story of The Odyssey.</b><br><br><b>Sometimes the hardest journey is the way back home . . .</b><br><br>Wily Odysseus, King of Ithaca, has won Troy for the Greeks – after a decade of brutal, bloody warfare. But now this warrior remembers he is a husband and father – and his gaze turns longingly towards home.<br><br>Setting sail with a small fleet, Odysseus dreams of soon lying in the arms of his beloved wife Penelope, and of teaching his son Telemachus the ways of a warrior. However, the gods laugh at the foolish hopes of mortals. And, angered by this upstart, Poseidon – God of the ocean realms – curses our hero to wander the seas for ten long years.<br><br>Encountering one-eyed giants, six-headed monsters, terrible storms, titanic whirlpools, hypnotic sirens, seductive witches and jealous goddesses, Odysseus is tempted and tormented beyond any man’s endurance.<br><br>Yet he is no mere mortal – and the lure of his wife and son draws him, step by step, stroke by stroke, ever closer to home and his ultimate destiny . . .<br><br>A tale of love and longing, return and redemption, home and hope, Stephen Fry’s <i>Odyssey</i> sees the author and national treasure weave the final threads of the fabulous story begun in the worldwide bestseller, <i>Mythos,</i> into an astonishing and mesmerising tapestry for the ages.<br><br>'With his distinctive narration, Fry brings warmth, exuberance and humour to these age-old stories, along with a range of voices...' <i>The Guardian </i><br><br>'Fry is at his story-telling best . . . the gods will be pleased' <i>Times</i><br><br>'Brilliant . . . all hail Stephen Fry' <i>Daily Mail</i><br><br>© Stephen Fry 2024 (P) Penguin Audio 2024</p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/00NlcJRrGEkenK8f6rELyq',
        }),
        'html_description': 'Author(s): Stephen Fry<br/>Narrator(s): Stephen Fry<br/>&lt;p&gt;&lt;b&gt;Brought to you by Penguin.&lt;br&gt;&lt;br&gt;A &lt;i&gt;Sunday Times&lt;/i&gt; bestseller&lt;br&gt;&lt;br&gt;The next book in Stephen Fry&#39;s acclaimed internationally bestselling Greek myths series telling the story of The Odyssey.&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Sometimes the hardest journey is the way back home . . .&lt;/b&gt;&lt;br&gt;&lt;br&gt;Wily Odysseus, King of Ithaca, has won Troy for the Greeks – after a decade of brutal, bloody warfare. But now this warrior remembers he is a husband and father – and his gaze turns longingly towards home.&lt;br&gt;&lt;br&gt;Setting sail with a small fleet, Odysseus dreams of soon lying in the arms of his beloved wife Penelope, and of teaching his son Telemachus the ways of a warrior. However, the gods laugh at the foolish hopes of mortals. And, angered by this upstart, Poseidon – God of the ocean realms – curses our hero to wander the seas for ten long years.&lt;br&gt;&lt;br&gt;Encountering one-eyed giants, six-headed monsters, terrible storms, titanic whirlpools, hypnotic sirens, seductive witches and jealous goddesses, Odysseus is tempted and tormented beyond any man’s endurance.&lt;br&gt;&lt;br&gt;Yet he is no mere mortal – and the lure of his wife and son draws him, step by step, stroke by stroke, ever closer to home and his ultimate destiny . . .&lt;br&gt;&lt;br&gt;A tale of love and longing, return and redemption, home and hope, Stephen Fry’s &lt;i&gt;Odyssey&lt;/i&gt; sees the author and national treasure weave the final threads of the fabulous story begun in the worldwide bestseller, &lt;i&gt;Mythos,&lt;/i&gt; into an astonishing and mesmerising tapestry for the ages.&lt;br&gt;&lt;br&gt;&#39;With his distinctive narration, Fry brings warmth, exuberance and humour to these age-old stories, along with a range of voices...&#39; &lt;i&gt;The Guardian &lt;/i&gt;&lt;br&gt;&lt;br&gt;&#39;Fry is at his story-telling best . . . the gods will be pleased&#39; &lt;i&gt;Times&lt;/i&gt;&lt;br&gt;&lt;br&gt;&#39;Brilliant . . . all hail Stephen Fry&#39; &lt;i&gt;Daily Mail&lt;/i&gt;&lt;br&gt;&lt;br&gt;© Stephen Fry 2024 (P) Penguin Audio 2024&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a85290dd6c6bd3aefec79506ad',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b5290dd6c6bd3aefec79506ad',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b5290dd6c6bd3aefec79506ad',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'Odyssey',
        'narrators': list([
          dict({
            'name': 'Stephen Fry',
          }),
        ]),
        'publisher': 'Stephen Fry',
        'total_chapters': 23,
        'type': 'audiobook',
        'uri': 'spotify:show:00NlcJRrGEkenK8f6rELyq',
      }),
      dict({
        'audiobook_id': '6LUW2MAs8Z65qlP8XyhsMw',
        'authors': list([
          dict({
            'name': 'George R.R. Martin',
          }),
        ]),
        'description': '''
          Author(s): George R.R. Martin
          Narrator(s): Roy Dotrice<p><strong>ONE OF <em>THE TIMES</em>’ 25 BEST AUDIOBOOKS</strong></p><p><strong>HBO’s hit series A GAME OF THRONES is based on George R. R. Martin’s internationally bestselling series A SONG OF ICE AND FIRE, the greatest fantasy epic of the modern age. A GAME OF THRONES is the first volume in the series.</strong></p><p>Summers span decades. Winter can last a lifetime. And the struggle for the Iron Throne has begun.</p><p>As Warden of the north, Lord Eddard Stark counts it a curse when King Robert bestows on him the office of the Hand. His honour weighs him down at court where a true man does what he will, not what he must … and a dead enemy is a thing of beauty.</p><p>The old gods have no power in the south, Stark’s family is split and there is treachery at court. Worse, the vengeance-mad heir of the deposed Dragon King has grown to maturity in exile in the Free Cities. He claims the Iron Throne.</p><p>The historical and mythical creatures that inhabit this top, Sunday Times bestselling book bring a unique flavour to the fantasy fiction genre. The adventure is dark, filled with action that will keep the reader on the edge of their seat.</p><p>For fans of Robert Jordan (The Path Of Daggers), David French (The Lady of the Lake), Patrick Rothfuss (The Wise Man's Fear), Steven Erikson (Memories of Ice), and Genevieve Cogman (The Invisible Library).</p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6LUW2MAs8Z65qlP8XyhsMw',
        }),
        'html_description': 'Author(s): George R.R. Martin<br/>Narrator(s): Roy Dotrice<br/>&lt;p&gt;&lt;strong&gt;ONE OF &lt;em&gt;THE TIMES&lt;/em&gt;’ 25 BEST AUDIOBOOKS&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;HBO’s hit series A GAME OF THRONES is based on George R. R. Martin’s internationally bestselling series A SONG OF ICE AND FIRE, the greatest fantasy epic of the modern age. A GAME OF THRONES is the first volume in the series.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Summers span decades. Winter can last a lifetime. And the struggle for the Iron Throne has begun.&lt;/p&gt;&lt;p&gt;As Warden of the north, Lord Eddard Stark counts it a curse when King Robert bestows on him the office of the Hand. His honour weighs him down at court where a true man does what he will, not what he must … and a dead enemy is a thing of beauty.&lt;/p&gt;&lt;p&gt;The old gods have no power in the south, Stark’s family is split and there is treachery at court. Worse, the vengeance-mad heir of the deposed Dragon King has grown to maturity in exile in the Free Cities. He claims the Iron Throne.&lt;/p&gt;&lt;p&gt;The historical and mythical creatures that inhabit this top, Sunday Times bestselling book bring a unique flavour to the fantasy fiction genre. The adventure is dark, filled with action that will keep the reader on the edge of their seat.&lt;/p&gt;&lt;p&gt;For fans of Robert Jordan (The Path Of Daggers), David French (The Lady of the Lake), Patrick Rothfuss (The Wise Man&#39;s Fear), Steven Erikson (Memories of Ice), and Genevieve Cogman (The Invisible Library).&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8fae73642d98aacd1f9eaf3b7',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5bfae73642d98aacd1f9eaf3b7',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703bfae73642d98aacd1f9eaf3b7',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'A Game of Thrones (Song of Ice and Fire, Book 1)',
        'narrators': list([
          dict({
            'name': 'Roy Dotrice',
          }),
        ]),
        'publisher': 'George R.R. Martin',
        'total_chapters': 76,
        'type': 'audiobook',
        'uri': 'spotify:show:6LUW2MAs8Z65qlP8XyhsMw',
      }),
      dict({
        'audiobook_id': '5AHgUAZsSk6d9XM0xySOii',
        'authors': list([
          dict({
            'name': 'Leo Oldenburger',
          }),
        ]),
        'description': '''
          Author(s): Leo Oldenburger
          Narrator(s): Bart Oomen<p>Van ‘Kleine Jongen’ tot ‘Een beetje verliefd’, van ‘Zij gelooft in mij’ tot ‘Wij houden van Oranje’: André Hazes wist met zijn muziek iedereen te raken. Toen hij twintig jaar geleden overleed was het hele land in rouw: maar liefst zes miljoen mensen volgden de uitzending van de afscheidsdienst op televisie. Maar wie wás André Hazes? Waarom was hij, ondanks alle roem, toch zo onzeker? Oldenburger sprak met mensen die een belangrijke rol speelden in het leven van de artiest en met degenen voor wie André Hazes van grote betekenis was. Persoonlijke verhalen over de volkszanger en cultheld die door zijn dramatische levensgang veel te vroeg kwam te overlijden. In Kleine jongen beschrijft Oldenburger op meeslepende wijze het verhaal van een van de meest succesvolle artiesten die Nederland ooit gekend heeft.</p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/5AHgUAZsSk6d9XM0xySOii',
        }),
        'html_description': 'Author(s): Leo Oldenburger<br/>Narrator(s): Bart Oomen<br/>&lt;p&gt;Van ‘Kleine Jongen’ tot ‘Een beetje verliefd’, van ‘Zij gelooft in mij’ tot ‘Wij houden van Oranje’: André Hazes wist met zijn muziek iedereen te raken. Toen hij twintig jaar geleden overleed was het hele land in rouw: maar liefst zes miljoen mensen volgden de uitzending van de afscheidsdienst op televisie. Maar wie wás André Hazes? Waarom was hij, ondanks alle roem, toch zo onzeker? Oldenburger sprak met mensen die een belangrijke rol speelden in het leven van de artiest en met degenen voor wie André Hazes van grote betekenis was. Persoonlijke verhalen over de volkszanger en cultheld die door zijn dramatische levensgang veel te vroeg kwam te overlijden. In Kleine jongen beschrijft Oldenburger op meeslepende wijze het verhaal van een van de meest succesvolle artiesten die Nederland ooit gekend heeft.&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a878c90d16e9e4cfc5c6e9acd8',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b78c90d16e9e4cfc5c6e9acd8',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b78c90d16e9e4cfc5c6e9acd8',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'Kleine jongen: Het leven van André Hazes',
        'narrators': list([
          dict({
            'name': 'Bart Oomen',
          }),
        ]),
        'publisher': 'Leo Oldenburger',
        'total_chapters': 23,
        'type': 'audiobook',
        'uri': 'spotify:show:5AHgUAZsSk6d9XM0xySOii',
      }),
      dict({
        'audiobook_id': '0ZuMWmSruanrItPHO64YTh',
        'authors': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'description': '''
          Author(s): Mirjam Oldenhave
          Narrator(s): Mirjam OldenhaveGroep 6b krijgt EHBO-les van broeder Frans van de ambulans. Die weet alles van open botbreuken, flauwvallen en de stabiele zijligging. Het hele leven is bloedjelink, daar komt het volgens broeder Frans wel op neer. Heel leerzaam dus. Maar dan krijgt groep 6b de groepsgriep: ze worden allemaal ziek. Gelukkig wordt Tobias op een heel speciale manier verzorgd, zodat hij snel weer beter is. Nog beter dan daarvoor, zelfs!<br />
          <br />
          <b>Inhoud</b><br />
          1. Hesjesles<br />
          2. Rups<br />
          3. Broeder Frans<br />
          4. Zwak hart<br />
          5. Marie-Louise Mulders<br />
          6. Thuis<br />
          7. Geschiedenis<br />
          8. Spreekwoorden<br />
          9. Pennelien<br />
          10. Scheur<br />
          11. Zuster Aukje<br />
          12. Blootje omelet<br />
          13. Schriftjes-wisseltruc<br />
          14. De doorgeschoten enkelvoud<br />
          15. Poolsnevel<br />
          16. Hasna<br />
          17. Hieperdepiep<br />
          18. EHBP<br />
          19. Uitdelen<br />
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/0ZuMWmSruanrItPHO64YTh',
        }),
        'html_description': 'Author(s): Mirjam Oldenhave<br/>Narrator(s): Mirjam Oldenhave<br/>Groep 6b krijgt EHBO-les van broeder Frans van de ambulans. Die weet alles van open botbreuken, flauwvallen en de stabiele zijligging. Het hele leven is bloedjelink, daar komt het volgens broeder Frans wel op neer. Heel leerzaam dus. Maar dan krijgt groep 6b de groepsgriep: ze worden allemaal ziek. Gelukkig wordt Tobias op een heel speciale manier verzorgd, zodat hij snel weer beter is. Nog beter dan daarvoor, zelfs!&lt;br /&gt;<br/>&lt;br /&gt;<br/>&lt;b&gt;Inhoud&lt;/b&gt;&lt;br /&gt;<br/>1. Hesjesles&lt;br /&gt;<br/>2. Rups&lt;br /&gt;<br/>3. Broeder Frans&lt;br /&gt;<br/>4. Zwak hart&lt;br /&gt;<br/>5. Marie-Louise Mulders&lt;br /&gt;<br/>6. Thuis&lt;br /&gt;<br/>7. Geschiedenis&lt;br /&gt;<br/>8. Spreekwoorden&lt;br /&gt;<br/>9. Pennelien&lt;br /&gt;<br/>10. Scheur&lt;br /&gt;<br/>11. Zuster Aukje&lt;br /&gt;<br/>12. Blootje omelet&lt;br /&gt;<br/>13. Schriftjes-wisseltruc&lt;br /&gt;<br/>14. De doorgeschoten enkelvoud&lt;br /&gt;<br/>15. Poolsnevel&lt;br /&gt;<br/>16. Hasna&lt;br /&gt;<br/>17. Hieperdepiep&lt;br /&gt;<br/>18. EHBP&lt;br /&gt;<br/>19. Uitdelen&lt;br /&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8f42ea2fbc9767d04f9d052ff',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5bf42ea2fbc9767d04f9d052ff',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703bf42ea2fbc9767d04f9d052ff',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'Bloedjelink',
        'narrators': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'publisher': 'Mirjam Oldenhave',
        'total_chapters': 20,
        'type': 'audiobook',
        'uri': 'spotify:show:0ZuMWmSruanrItPHO64YTh',
      }),
      dict({
        'audiobook_id': '6FofvlFfQ5TlhyT7YrUZpa',
        'authors': list([
          dict({
            'name': 'Thomas Nelson Inc.',
          }),
        ]),
        'description': '''
          Author(s): Thomas Nelson Inc.
          Narrator(s): Jim Caviezel, Richard Dreyfuss, Gary Sinise, Jason Alexander, Marisa Tomei, Stacy Keach, Various Narrators<p>This faithful rendering of the Old Testament in the New King James Version (NKJV) presents the Bible in compelling, dramatic audio theater format with world-class audio production. With an original music score by composer Stefano Mainetti (Abba Pater), feature-film quality sound effects, and compelling narration by Michael York and the work of over 500 actors, the <em>Word of Promise Audio Bible</em> will immerse listeners in the dramatic reality of the scriptures as never before.</p><p>Each beloved book of the Bible comes to life with outstanding performances by Jim Caviezel as Jesus, Richard Dreyfuss as Moses, Gary Sinise as David, Jason Alexander as Joseph, Marisa Tomei as Mary Magdalene, Stacy Keach as Paul, Louis Gossett, Jr. as John, Jon Voight as Abraham, Marcia Gay Harden as Esther, Joan Allen as Deborah, Max von Sydow as Noah, and Malcolm McDowell as Solomon.</p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6FofvlFfQ5TlhyT7YrUZpa',
        }),
        'html_description': 'Author(s): Thomas Nelson Inc.<br/>Narrator(s): Jim Caviezel, Richard Dreyfuss, Gary Sinise, Jason Alexander, Marisa Tomei, Stacy Keach, Various Narrators<br/>&lt;p&gt;This faithful rendering of the Old Testament in the New King James Version (NKJV) presents the Bible in compelling, dramatic audio theater format with world-class audio production. With an original music score by composer Stefano Mainetti (Abba Pater), feature-film quality sound effects, and compelling narration by Michael York and the work of over 500 actors, the &lt;em&gt;Word of Promise Audio Bible&lt;/em&gt;\xa0will immerse listeners in the dramatic reality of the scriptures as never before.&lt;/p&gt;&lt;p&gt;Each beloved book of the Bible comes to life with outstanding performances by Jim Caviezel as Jesus, Richard Dreyfuss as Moses, Gary Sinise as David, Jason Alexander as Joseph, Marisa Tomei as Mary Magdalene, Stacy Keach as Paul, Louis Gossett, Jr. as John, Jon Voight as Abraham, Marcia Gay Harden as Esther, Joan Allen as Deborah, Max von Sydow as Noah, and Malcolm McDowell as Solomon.&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a818c62659ef9e892aad68f3f5',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b18c62659ef9e892aad68f3f5',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b18c62659ef9e892aad68f3f5',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'The Word of Promise: Audio Bible Old Testament: NKJV Audio Bible',
        'narrators': list([
          dict({
            'name': 'Jim Caviezel',
          }),
          dict({
            'name': 'Richard Dreyfuss',
          }),
          dict({
            'name': 'Gary Sinise',
          }),
          dict({
            'name': 'Jason Alexander',
          }),
          dict({
            'name': 'Marisa Tomei',
          }),
          dict({
            'name': 'Stacy Keach',
          }),
          dict({
            'name': 'Various Narrators',
          }),
        ]),
        'publisher': 'Thomas Nelson Inc.',
        'total_chapters': 1863,
        'type': 'audiobook',
        'uri': 'spotify:show:6FofvlFfQ5TlhyT7YrUZpa',
      }),
      dict({
        'audiobook_id': '7mkPrRJPfJCYSQadcuAwi0',
        'authors': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'description': '''
          Author(s): Mirjam Oldenhave
          Narrator(s): Mirjam OldenhaveMees Kees is nog stagiair, maar toch kan hij al heel goed lesgeven! Bij grote rampen, zoals hoofdrekenen of spelling van moeilijke woorden, verzint hij altijd een goeie oplossing. Meestal met chips en cola, want dat zijn ook moeilijke woorden.<br />
          <br />
          Als zijn klas de eindmusical moet verzorgen, heeft Mees Kees ook meteen een plan: ze gaan een rap doen. Superrapper Pépé komt helpen. Zijn motto is: Keihard is nog veel te zacht! Eén ding: Dreus mag er natuurlijk niet achter komen...<br />
          <br />
          De serie <i>Mees Kees</i> van Mirjam Oldenhave is een klinkend succes. Er verschenen zes boeken en Mirjam Oldenhave trok in 2012 door het hele land met <i>De grote Mees Kees</i> show. Een wervelende muziektheatervoorstelling, onder begeleiding van het 65 man sterke Holland Symfonia orkest.<br />
          <br />
          Compositie Mees Kees lied: Steven Stapel<br />
          <br />
          <b>Inhoud</b><br />
          1. Nepasrev<br />
          2. Tokkie<br />
          3. Musical<br />
          4. Yo!<br />
          5. Lange woordenleesles<br />
          6. Hoofdrekenen<br />
          7. De rekenrap<br />
          8. Vergaderen<br />
          9. Zoenschool<br />
          10. Mevrouw Terlinde<br />
          11. Omeletjes met servetjes<br />
          12. Verhaaltjessommen<br />
          13. Pepe<br />
          14. Agent Klaas<br />
          15. Kozmoz<br />
          16. Rapporten<br />
          17. Bijna vakantie<br />
          18. 22 problemen<br />
          19. Mees Kees lied<br />
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7mkPrRJPfJCYSQadcuAwi0',
        }),
        'html_description': 'Author(s): Mirjam Oldenhave<br/>Narrator(s): Mirjam Oldenhave<br/>Mees Kees is nog stagiair, maar toch kan hij al heel goed lesgeven! Bij grote rampen, zoals hoofdrekenen of spelling van moeilijke woorden, verzint hij altijd een goeie oplossing. Meestal met chips en cola, want dat zijn ook moeilijke woorden.&lt;br /&gt;<br/>&lt;br /&gt;<br/>Als zijn klas de eindmusical moet verzorgen, heeft Mees Kees ook meteen een plan: ze gaan een rap doen. Superrapper Pépé komt helpen. Zijn motto is: Keihard is nog veel te zacht! Eén ding: Dreus mag er natuurlijk niet achter komen...&lt;br /&gt;<br/>&lt;br /&gt;<br/>De serie &lt;i&gt;Mees Kees&lt;/i&gt; van Mirjam Oldenhave is een klinkend succes. Er verschenen zes boeken en Mirjam Oldenhave trok in 2012 door het hele land met &lt;i&gt;De grote Mees Kees&lt;/i&gt; show. Een wervelende muziektheatervoorstelling, onder begeleiding van het 65 man sterke Holland Symfonia orkest.&lt;br /&gt;<br/>&lt;br /&gt;<br/>Compositie Mees Kees lied: Steven Stapel&lt;br /&gt;<br/>&lt;br /&gt;<br/>&lt;b&gt;Inhoud&lt;/b&gt;&lt;br /&gt;<br/>1. Nepasrev&lt;br /&gt;<br/>2. Tokkie&lt;br /&gt;<br/>3. Musical&lt;br /&gt;<br/>4. Yo!&lt;br /&gt;<br/>5. Lange woordenleesles&lt;br /&gt;<br/>6. Hoofdrekenen&lt;br /&gt;<br/>7. De rekenrap&lt;br /&gt;<br/>8. Vergaderen&lt;br /&gt;<br/>9. Zoenschool&lt;br /&gt;<br/>10. Mevrouw Terlinde&lt;br /&gt;<br/>11. Omeletjes met servetjes&lt;br /&gt;<br/>12. Verhaaltjessommen&lt;br /&gt;<br/>13. Pepe&lt;br /&gt;<br/>14. Agent Klaas&lt;br /&gt;<br/>15. Kozmoz&lt;br /&gt;<br/>16. Rapporten&lt;br /&gt;<br/>17. Bijna vakantie&lt;br /&gt;<br/>18. 22 problemen&lt;br /&gt;<br/>19. Mees Kees lied&lt;br /&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8ec4215e7ba7ac9267cd73dab',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5bec4215e7ba7ac9267cd73dab',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703bec4215e7ba7ac9267cd73dab',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'De rekenrap',
        'narrators': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'publisher': 'Mirjam Oldenhave',
        'total_chapters': 20,
        'type': 'audiobook',
        'uri': 'spotify:show:7mkPrRJPfJCYSQadcuAwi0',
      }),
      dict({
        'audiobook_id': '5CrX7ccFO2bCZqp4rZfGU8',
        'authors': list([
          dict({
            'name': 'David Hepworth',
          }),
        ]),
        'description': '''
          Author(s): David Hepworth
          Narrator(s): David Hepworth<p><b>Brought to you by Penguin.<br><br>From the author of <i>Abbey Road</i> comes the story of how enduring rock icons like Pink Floyd, Bruce Springsteen and many more have remained in the ever changing music game.</b><br><br>When Paul McCartney closed Live Aid in July 1985 we thought he was rock's Grand Old Man. He was forty-three years old.<br><br>As the forty years since have shown he - and many others of his generation - were just getting started.<br><br>This was the time when live performance took over from records. The big names of the 60s and 70s exploited the age of spectacle that Live Aid had ushered in to enjoy the longest lap of honour in the history of humanity, continuing to go strong long after everyone else had retired.<br><br>Hence this is a story without precedent, a story in which Elton John plays a royal funeral, Mick Jagger gets a knighthood, Bob Dylan picks up the Nobel Prize, the Beatles become, if anything, bigger than the Beatles and it's beginning to look as though all of the above will, thanks to the march of technology, be playing Las Vegas for ever.<br><br>©2024 David Hepworth (P)2024 Penguin Audio</p>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/5CrX7ccFO2bCZqp4rZfGU8',
        }),
        'html_description': 'Author(s): David Hepworth<br/>Narrator(s): David Hepworth<br/>&lt;p&gt;&lt;b&gt;Brought to you by Penguin.&lt;br&gt;&lt;br&gt;From the author of &lt;i&gt;Abbey Road&lt;/i&gt; comes the story of how enduring rock icons like Pink Floyd, Bruce Springsteen and many more have remained in the ever changing music game.&lt;/b&gt;&lt;br&gt;&lt;br&gt;When Paul McCartney closed Live Aid in July 1985 we thought he was rock&#39;s Grand Old Man. He was forty-three years old.&lt;br&gt;&lt;br&gt;As the forty years since have shown he - and many others of his generation - were just getting started.&lt;br&gt;&lt;br&gt;This was the time when live performance took over from records. The big names of the 60s and 70s exploited the age of spectacle that Live Aid had ushered in to enjoy the longest lap of honour in the history of humanity, continuing to go strong long after everyone else had retired.&lt;br&gt;&lt;br&gt;Hence this is a story without precedent, a story in which Elton John plays a royal funeral, Mick Jagger gets a knighthood, Bob Dylan picks up the Nobel Prize, the Beatles become, if anything, bigger than the Beatles and it&#39;s beginning to look as though all of the above will, thanks to the march of technology, be playing Las Vegas for ever.&lt;br&gt;&lt;br&gt;©2024 David Hepworth (P)2024 Penguin Audio&lt;/p&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8cc04893ebaf64217eae2c7da',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5bcc04893ebaf64217eae2c7da',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703bcc04893ebaf64217eae2c7da',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'Hope I Get Old Before I Die: Why rock stars never retire',
        'narrators': list([
          dict({
            'name': 'David Hepworth',
          }),
        ]),
        'publisher': 'David Hepworth',
        'total_chapters': 41,
        'type': 'audiobook',
        'uri': 'spotify:show:5CrX7ccFO2bCZqp4rZfGU8',
      }),
      dict({
        'audiobook_id': '7Bf8n6YMDNv72qW5FitNjx',
        'authors': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'description': '''
          Author(s): Mirjam Oldenhave
          Narrator(s): Mirjam OldenhaveLuister nu naar het nieuwe Mees Kees avontuur!Er komt een fancy fair op de school van Tobias en Sep, om geld op te halen voor een goed doel. Samen met mees Kees maakt groep 6b een circusvoorstelling. Sammy gaat jongleren, Jackie hangt aan de trapeze en Tobias heeft ook een superidee, maar dat is nog een verrassing. Zelfs Harley, de hond van mees Kees, doet mee. Circus Hoppa wordt straks vast een groot succes! Of toch niet...?
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7Bf8n6YMDNv72qW5FitNjx',
        }),
        'html_description': 'Author(s): Mirjam Oldenhave<br/>Narrator(s): Mirjam Oldenhave<br/>Luister nu naar het nieuwe Mees Kees avontuur!<br/>Er komt een fancy fair op de school van Tobias en Sep, om geld op te halen voor een goed doel. Samen met mees Kees maakt groep 6b een circusvoorstelling. Sammy gaat jongleren, Jackie hangt aan de trapeze en Tobias heeft ook een superidee, maar dat is nog een verrassing. Zelfs Harley, de hond van mees Kees, doet mee. Circus Hoppa wordt straks vast een groot succes! Of toch niet...?',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8cb7918ba463571eed7240747',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5bcb7918ba463571eed7240747',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703bcb7918ba463571eed7240747',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'Hoppa!',
        'narrators': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'publisher': 'Mirjam Oldenhave',
        'total_chapters': 43,
        'type': 'audiobook',
        'uri': 'spotify:show:7Bf8n6YMDNv72qW5FitNjx',
      }),
      dict({
        'audiobook_id': '3OV5MdGnhtyagxRWNdZda2',
        'authors': list([
          dict({
            'name': 'Simon Peterson',
          }),
        ]),
        'description': '''
          Author(s): Simon Peterson
          Narrator(s): Simon PetersonBritish Narrator Simon Peterson reads the entire Old Testament in this wonderful audiobook collection.  As a well-known Christian Broadcaster, Simon has the ideal voice for those of all ages who want to listen to The Bible in full, unabridged form.  His emotive reading perfectly captures the beauty and power of God's Word and makes the King James English clear and easy to understand.
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/3OV5MdGnhtyagxRWNdZda2',
        }),
        'html_description': 'Author(s): Simon Peterson<br/>Narrator(s): Simon Peterson<br/>British Narrator Simon Peterson reads the entire Old Testament in this wonderful audiobook collection.  As a well-known Christian Broadcaster, Simon has the ideal voice for those of all ages who want to listen to The Bible in full, unabridged form.  His emotive reading perfectly captures the beauty and power of God&#39;s Word and makes the King James English clear and easy to understand.',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8b48c6927dcf189bb6de60e9b',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5bb48c6927dcf189bb6de60e9b',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703bb48c6927dcf189bb6de60e9b',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'The Complete Old Testament: Read by Simon Peterson',
        'narrators': list([
          dict({
            'name': 'Simon Peterson',
          }),
        ]),
        'publisher': 'Simon Peterson',
        'total_chapters': 930,
        'type': 'audiobook',
        'uri': 'spotify:show:3OV5MdGnhtyagxRWNdZda2',
      }),
      dict({
        'audiobook_id': '2nTSz8RwadcvtZat19sTBt',
        'authors': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'description': '''
          Author(s): Mirjam Oldenhave
          Narrator(s): Mirjam OldenhaveEen leraar als Mees Kees wil iedereen wel! Van moppen tappen en galgje spelen leer je prima spellen, vindt hij. En een tekenfilm kijken telt natuurlijk ook als tekenles…<br />
          <br />
          Als de leukste stagiair van de wereld jarig is, bedenkt de klas een geniaal plan om hem te verrassen. Intussen maakt Tobias zich zorgen, omdat zijn moeder vast niet naar school wil komen voor het tien-minuten-gesprek. Maar Mees Kees zou Mees Kees niet zijn als hij niet voor alles een oplossing had.<br />
          <br />
          Bijna een half miljoen exemplaren van dit Kinderboekenweekgeschenk gingen er in 2010 over de toonbank. Maar er staat alweer een nieuwe lichting Mees Kees-fans te trappelen om de verjaardag van onze populaire stagiair te vieren. Deze nieuwe en uitgebreide editie uit 2014 nu ook als luisterboek, voorgelezen door de auteur zelf.<br />
          Heerlijk voor in de auto of op vakantie.<br />
          <br />
          <b>Inhoud</b><br />
          1. Rustig afwachten<br />
          2. Snuffelen<br />
          3. Combi<br />
          4. Spreekbeurt<br />
          5. Laatste waarschuwing<br />
          6. Ramp in je nek<br />
          7. Hasjna<br />
          8. Tekenles<br />
          9. Kop in de strop<br />
          10. Handig rekenen<br />
          11. Cadeau<br />
          12. Het geniale plan<br />
          13. Giraj<br />
          14. Tadaa<br />
          15. Uitdelen<br />
          16. Tien minuten<br />
          17. Probleempje<br />
          18. Geheim
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/2nTSz8RwadcvtZat19sTBt',
        }),
        'html_description': 'Author(s): Mirjam Oldenhave<br/>Narrator(s): Mirjam Oldenhave<br/>Een leraar als Mees Kees wil iedereen wel! Van moppen tappen en galgje spelen leer je prima spellen, vindt hij. En een tekenfilm kijken telt natuurlijk ook als tekenles…&lt;br /&gt;<br/>&lt;br /&gt;<br/>Als de leukste stagiair van de wereld jarig is, bedenkt de klas een geniaal plan om hem te verrassen. Intussen maakt Tobias zich zorgen, omdat zijn moeder vast niet naar school wil komen voor het tien-minuten-gesprek. Maar Mees Kees zou Mees Kees niet zijn als hij niet voor alles een oplossing had.&lt;br /&gt;<br/>&lt;br /&gt;<br/>Bijna een half miljoen exemplaren van dit Kinderboekenweekgeschenk gingen er in 2010 over de toonbank. Maar er staat alweer een nieuwe lichting Mees Kees-fans te trappelen om de verjaardag van onze populaire stagiair te vieren. Deze nieuwe en uitgebreide editie uit 2014 nu ook als luisterboek, voorgelezen door de auteur zelf.&lt;br /&gt;<br/>Heerlijk voor in de auto of op vakantie.&lt;br /&gt;<br/>&lt;br /&gt;<br/>&lt;b&gt;Inhoud&lt;/b&gt;&lt;br /&gt;<br/>1. Rustig afwachten&lt;br /&gt;<br/>2. Snuffelen&lt;br /&gt;<br/>3. Combi&lt;br /&gt;<br/>4. Spreekbeurt&lt;br /&gt;<br/>5. Laatste waarschuwing&lt;br /&gt;<br/>6. Ramp in je nek&lt;br /&gt;<br/>7. Hasjna&lt;br /&gt;<br/>8. Tekenles&lt;br /&gt;<br/>9. Kop in de strop&lt;br /&gt;<br/>10. Handig rekenen&lt;br /&gt;<br/>11. Cadeau&lt;br /&gt;<br/>12. Het geniale plan&lt;br /&gt;<br/>13. Giraj&lt;br /&gt;<br/>14. Tadaa&lt;br /&gt;<br/>15. Uitdelen&lt;br /&gt;<br/>16. Tien minuten&lt;br /&gt;<br/>17. Probleempje&lt;br /&gt;<br/>18. Geheim',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a88e656b5f3a3ae12021229263',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b8e656b5f3a3ae12021229263',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b8e656b5f3a3ae12021229263',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'Mees Kees - In de gloria',
        'narrators': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'publisher': 'Mirjam Oldenhave',
        'total_chapters': 19,
        'type': 'audiobook',
        'uri': 'spotify:show:2nTSz8RwadcvtZat19sTBt',
      }),
      dict({
        'audiobook_id': '71NmMSkA6xyMcdDnLvcLIW',
        'authors': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'description': '''
          Author(s): Mirjam Oldenhave
          Narrator(s): Mirjam OldenhaveMees Kees heeft nog geen diploma, daarom mag hij niet meer alleen voor de klas staan. Hij gaat stage lopen bij de kleuters en 6B krijgt een invaljuf. Maar waarom geeft ze niet gewoon een moppendictee? En hoe kan ze nou lesgeven zonder chips en cola? Na haar komt een invalmeester en die stuurt de hele klas eruit. Kortom, het is tijd voor actie. Mees Kees moet terug! En graag een beetje vlug, want er komt een sponsorloop, en zonder mees Kees wordt dat natuurlijk helemaal niets...<br />
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/71NmMSkA6xyMcdDnLvcLIW',
        }),
        'html_description': 'Author(s): Mirjam Oldenhave<br/>Narrator(s): Mirjam Oldenhave<br/>Mees Kees heeft nog geen diploma, daarom mag hij niet meer alleen voor de klas staan. Hij gaat stage lopen bij de kleuters en 6B krijgt een invaljuf. Maar waarom geeft ze niet gewoon een moppendictee? En hoe kan ze nou lesgeven zonder chips en cola? Na haar komt een invalmeester en die stuurt de hele klas eruit. Kortom, het is tijd voor actie. Mees Kees moet terug! En graag een beetje vlug, want er komt een sponsorloop, en zonder mees Kees wordt dat natuurlijk helemaal niets...&lt;br /&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8469e16b5d55022c8f846b99d',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b469e16b5d55022c8f846b99d',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b469e16b5d55022c8f846b99d',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'De sponsorloop',
        'narrators': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'publisher': 'Mirjam Oldenhave',
        'total_chapters': 21,
        'type': 'audiobook',
        'uri': 'spotify:show:71NmMSkA6xyMcdDnLvcLIW',
      }),
      dict({
        'audiobook_id': '2ZWSYH26WxBAkPSBIgq2xQ',
        'authors': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'description': '''
          Author(s): Mirjam Oldenhave
          Narrator(s): Mirjam Oldenhave‘De maatschappij, dat ben jij,’ zegt juffrouw Dreus. En dus moet groep 6b op bezoek bij een bejaardentehuis, om de oude mensen voor te lezen, met ze te wandelen en te praten... Helaas houden de bejaarden helemaal niet van wandelen en lezen doen ze liever zelf. Mees Kees verzint gelukkig een oplossing die voor iedereen fijn is.<br />
          <br />
          Ook ontdekt Tobias dat twee opa's al duizend maanden elkaars beste vriend zijn. Dat moet natuurlijk gevierd worden!<br />
          <br />
          <b>Inhoud</b><br />
          1. Reinier<br />
          2. Rekenen<br />
          3. Hoorspel<br />
          4. Grappig<br />
          5. 6A<br />
          6. De wethouder<br />
          7. Gabber<br />
          8. Topo<br />
          9. De voorbereidingsclub<br />
          10. Zwaar<br />
          11. Op de planken<br />
          12. Uitschudden<br />
          13. Wij gaan naar<br />
          14. Op weg naar de kermis<br />
          15. Draaimolen<br />
          16. Draaien<br />
          17. Duizend maanden
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/2ZWSYH26WxBAkPSBIgq2xQ',
        }),
        'html_description': 'Author(s): Mirjam Oldenhave<br/>Narrator(s): Mirjam Oldenhave<br/>‘De maatschappij, dat ben jij,’ zegt juffrouw Dreus. En dus moet groep 6b op bezoek bij een bejaardentehuis, om de oude mensen voor te lezen, met ze te wandelen en te praten... Helaas houden de bejaarden helemaal niet van wandelen en lezen doen ze liever zelf. Mees Kees verzint gelukkig een oplossing die voor iedereen fijn is.&lt;br /&gt;<br/>&lt;br /&gt;<br/>Ook ontdekt Tobias dat twee opa&#39;s al duizend maanden elkaars beste vriend zijn. Dat moet natuurlijk gevierd worden!&lt;br /&gt;<br/>&lt;br /&gt;<br/>&lt;b&gt;Inhoud&lt;/b&gt;&lt;br /&gt;<br/>1. Reinier&lt;br /&gt;<br/>2. Rekenen&lt;br /&gt;<br/>3. Hoorspel&lt;br /&gt;<br/>4. Grappig&lt;br /&gt;<br/>5. 6A&lt;br /&gt;<br/>6. De wethouder&lt;br /&gt;<br/>7. Gabber&lt;br /&gt;<br/>8. Topo&lt;br /&gt;<br/>9. De voorbereidingsclub&lt;br /&gt;<br/>10. Zwaar&lt;br /&gt;<br/>11. Op de planken&lt;br /&gt;<br/>12. Uitschudden&lt;br /&gt;<br/>13. Wij gaan naar&lt;br /&gt;<br/>14. Op weg naar de kermis&lt;br /&gt;<br/>15. Draaimolen&lt;br /&gt;<br/>16. Draaien&lt;br /&gt;<br/>17. Duizend maanden',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a81d6d7998c0116086219c636d',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b1d6d7998c0116086219c636d',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b1d6d7998c0116086219c636d',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'Mees Kees - Op de planken',
        'narrators': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'publisher': 'Mirjam Oldenhave',
        'total_chapters': 18,
        'type': 'audiobook',
        'uri': 'spotify:show:2ZWSYH26WxBAkPSBIgq2xQ',
      }),
      dict({
        'audiobook_id': '5xs4LPLZqVnNyvIflF1P2R',
        'authors': list([
          dict({
            'name': 'Mirjam Oldenhave',
          }),
        ]),
        'description': '''
          Author(s): Mirjam Oldenhave
          Narrator(s): Frank GroothofMeester Kees heeft nog nooit voor de klas gestaan. De kinderen moeten hem nog een beetje leren hoe dat moet, meester zijn. En dat doen ze graag!<br />
          <br />
          Ze leren hem dat je best om kwart over negen je pauzeboterhammen op mag eten, als je maar op het bord schrijft dat het om een voedselproject gaat. En dat het heel handig is als ieder kind maar één rijtje sommen van de taak maakt, zodat niet iedereen hetzelfde werk zit te doen...<br />
          <br />
          Dit boek werd getipt door de Nederlandse Kinderjury!<br />
          <br />
          <b>Inhoud</b><br />
          1. Mees Kees (intro)<br />
          2. Omeletje<br />
          3. Sommen<br />
          4. Rashida's spreekbeurt<br />
          5. Topografie<br />
          6. Bijles<br />
          7. De tafel van vier<br />
          8. Luizencontrole<br />
          9. Taal<br />
          10. Nieuws uit de natuur<br />
          11. Keihard werken<br />
          12. Dreus<br />
          13. Corvee<br />
          14. Op jacht met Mees Kees<br />
          15. Jemo Etan der Slezen<br />
          16. Onbereikbare liefde, deel 1<br />
          17. Onbereikbare liefde, deel 2<br />
          18. Bijles grote getallen<br />
          19. Nummertjes<br />
          20. De meester van de meester<br />
          21. Bertus Koelemeijer
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/5xs4LPLZqVnNyvIflF1P2R',
        }),
        'html_description': 'Author(s): Mirjam Oldenhave<br/>Narrator(s): Frank Groothof<br/>Meester Kees heeft nog nooit voor de klas gestaan. De kinderen moeten hem nog een beetje leren hoe dat moet, meester zijn. En dat doen ze graag!&lt;br /&gt;<br/>&lt;br /&gt;<br/>Ze leren hem dat je best om kwart over negen je pauzeboterhammen op mag eten, als je maar op het bord schrijft dat het om een voedselproject gaat. En dat het heel handig is als ieder kind maar één rijtje sommen van de taak maakt, zodat niet iedereen hetzelfde werk zit te doen...&lt;br /&gt;<br/>&lt;br /&gt;<br/>Dit boek werd getipt door de Nederlandse Kinderjury!&lt;br /&gt;<br/>&lt;br /&gt;<br/>&lt;b&gt;Inhoud&lt;/b&gt;&lt;br /&gt;<br/>1. Mees Kees (intro)&lt;br /&gt;<br/>2. Omeletje&lt;br /&gt;<br/>3. Sommen&lt;br /&gt;<br/>4. Rashida&#39;s spreekbeurt&lt;br /&gt;<br/>5. Topografie&lt;br /&gt;<br/>6. Bijles&lt;br /&gt;<br/>7. De tafel van vier&lt;br /&gt;<br/>8. Luizencontrole&lt;br /&gt;<br/>9. Taal&lt;br /&gt;<br/>10. Nieuws uit de natuur&lt;br /&gt;<br/>11. Keihard werken&lt;br /&gt;<br/>12. Dreus&lt;br /&gt;<br/>13. Corvee&lt;br /&gt;<br/>14. Op jacht met Mees Kees&lt;br /&gt;<br/>15. Jemo Etan der Slezen&lt;br /&gt;<br/>16. Onbereikbare liefde, deel 1&lt;br /&gt;<br/>17. Onbereikbare liefde, deel 2&lt;br /&gt;<br/>18. Bijles grote getallen&lt;br /&gt;<br/>19. Nummertjes&lt;br /&gt;<br/>20. De meester van de meester&lt;br /&gt;<br/>21. Bertus Koelemeijer',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a8d0544e8958c673f33c168189',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5bd0544e8958c673f33c168189',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703bd0544e8958c673f33c168189',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'Een pittig klasje',
        'narrators': list([
          dict({
            'name': 'Frank Groothof',
          }),
        ]),
        'publisher': 'Mirjam Oldenhave',
        'total_chapters': 22,
        'type': 'audiobook',
        'uri': 'spotify:show:5xs4LPLZqVnNyvIflF1P2R',
      }),
      dict({
        'audiobook_id': '6Swa6ZpoTeKxeIhr1HQi2J',
        'authors': list([
          dict({
            'name': 'Leo Oldenburger',
          }),
        ]),
        'description': '''
          Author(s): Leo Oldenburger
          Narrator(s): Jan Douwe KroeskeAls voorman van Doe Maar schreef Henny Vrienten geschiedenis. Niet eerder was een Nederlandse band zo populair. Tijdens optredens werd de band bejubeld door uitzinnige tienermeisjes en het land werd overspoeld met Doe Maar-merchandise. In 1984 gingen de mannen van Doe Maar uit elkaar, waarna Vrienten zich toelegde op een indrukwekkende solocarrière. Daarnaast schreef hij muziek voor films, musicals en televisieprogramma’s als ‘Het Klokhuis’ en ‘Sesamstraat’. Begin 2022 benaderde Leo Oldenburger Henny Vrienten met het verzoek of hij een boek over hem mocht schrijven, waarin collega-muzikanten zou worden gevraagd naar hun ervaringen met hem. Vrienten gaf aan tegen dat idee geen bezwaar te hebben. Oldenburger sprak met velen die van grote betekenis waren in het leven van de artiest, onder wie Ernst Jansz, Frank Boeijen, Henk Hofstede en Boudewijn de Groot. In ‘Henny Vrienten’ beschrijft Oldenburger op meeslepende wijze het verhaal van de componist, muzikant en tekstdichter.
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6Swa6ZpoTeKxeIhr1HQi2J',
        }),
        'html_description': 'Author(s): Leo Oldenburger<br/>Narrator(s): Jan Douwe Kroeske<br/>Als voorman van Doe Maar schreef Henny Vrienten geschiedenis. Niet eerder was een Nederlandse band zo populair. Tijdens optredens werd de band bejubeld door uitzinnige tienermeisjes en het land werd overspoeld met Doe Maar-merchandise. In 1984 gingen de mannen van Doe Maar uit elkaar, waarna Vrienten zich toelegde op een indrukwekkende solocarrière. Daarnaast schreef hij muziek voor films, musicals en televisieprogramma’s als ‘Het Klokhuis’ en ‘Sesamstraat’. Begin 2022 benaderde Leo Oldenburger Henny Vrienten met het verzoek of hij een boek over hem mocht schrijven, waarin collega-muzikanten zou worden gevraagd naar hun ervaringen met hem. Vrienten gaf aan tegen dat idee geen bezwaar te hebben. Oldenburger sprak met velen die van grote betekenis waren in het leven van de artiest, onder wie Ernst Jansz, Frank Boeijen, Henk Hofstede en Boudewijn de Groot. In ‘Henny Vrienten’ beschrijft Oldenburger op meeslepende wijze het verhaal van de componist, muzikant en tekstdichter.',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a896cb628bd656f69cdc2f28f3',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b96cb628bd656f69cdc2f28f3',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b96cb628bd656f69cdc2f28f3',
            'width': 64,
          }),
        ]),
        'languages': list([
          'nl',
        ]),
        'name': 'Henny Vrienten',
        'narrators': list([
          dict({
            'name': 'Jan Douwe Kroeske',
          }),
        ]),
        'publisher': 'Leo Oldenburger',
        'total_chapters': 25,
        'type': 'audiobook',
        'uri': 'spotify:show:6Swa6ZpoTeKxeIhr1HQi2J',
      }),
      dict({
        'audiobook_id': '7IuHomVGGGTXBYdF5gsnc3',
        'authors': list([
          dict({
            'name': 'Ernest Hemingway',
          }),
        ]),
        'description': '''
          Author(s): Ernest Hemingway
          Narrator(s): Donald Sutherland<b>2007 Audie Award Finalist for Solo Narration—Male</b><br><br><b>*Winner of the Pulitzer Prize*</b><br> <b>“A beautiful tale, awash in the seasalt and sweat, bait and beer of the Havana coast. It tells a fundamental human truth: in a volatile world, from our first breath to our last wish, through triumphs and pitfalls both trivial and profound, what sustains us, ultimately, is hope.” —<i>The Guardian</i> </b><br><br>The last of his novels Ernest Hemingway saw published, <i>The Old Man and the Sea</i> has proved itself to be one of the most enduring works of American fiction. The story of a down-on-his-luck Cuban fisherman and his supreme ordeal—a relentless, agonizing battle with a giant marlin far out in the Gulf Stream—has been cherished by generations of readers.<br> <br>Hemingway takes the timeless themes of courage in the face of adversity and personal triumph won from loss and transforms them into a magnificent twentieth-century classic. First published in 1952, this hugely popular tale confirmed his power and presence in the literary world and played a large part in his winning the 1954 Nobel Prize in Literature.
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7IuHomVGGGTXBYdF5gsnc3',
        }),
        'html_description': 'Author(s): Ernest Hemingway<br/>Narrator(s): Donald Sutherland<br/>&lt;b&gt;2007 Audie Award Finalist for Solo Narration—Male&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;*Winner of the Pulitzer Prize*&lt;/b&gt;&lt;br&gt; &lt;b&gt;“A beautiful tale, awash in the seasalt and sweat, bait and beer of the Havana coast. It tells a fundamental human truth: in a volatile world, from our first breath to our last wish, through triumphs and pitfalls both trivial and profound, what sustains us, ultimately, is hope.” —&lt;i&gt;The Guardian&lt;/i&gt; &lt;/b&gt;&lt;br&gt;&lt;br&gt;The last of his novels Ernest Hemingway saw published, &lt;i&gt;The Old Man and the Sea&lt;/i&gt; has proved itself to be one of the most enduring works of American fiction. The story of a down-on-his-luck Cuban fisherman and his supreme ordeal—a relentless, agonizing battle with a giant marlin far out in the Gulf Stream—has been cherished by generations of readers.&lt;br&gt; &lt;br&gt;Hemingway takes the timeless themes of courage in the face of adversity and personal triumph won from loss and transforms them into a magnificent twentieth-century classic. First published in 1952, this hugely popular tale confirmed his power and presence in the literary world and played a large part in his winning the 1954 Nobel Prize in Literature.',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a84cf5d2837c74a867fd4e4186',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b4cf5d2837c74a867fd4e4186',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b4cf5d2837c74a867fd4e4186',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'The Old Man and the Sea',
        'narrators': list([
          dict({
            'name': 'Donald Sutherland',
          }),
        ]),
        'publisher': 'Ernest Hemingway',
        'total_chapters': 6,
        'type': 'audiobook',
        'uri': 'spotify:show:7IuHomVGGGTXBYdF5gsnc3',
      }),
      dict({
        'audiobook_id': '7n4kkb28OrN8zr5GEthLNe',
        'authors': list([
          dict({
            'name': 'Kim Mitzo Thompson',
          }),
        ]),
        'description': '''
          Author(s): Kim Mitzo Thompson
          Narrator(s): Various Contributors<P>Visit Old MacDonald's classic farm with these fun arrangements of favorite nursery rhymes and children's songs.</P>
        ''',
        'edition': 'Unabridged',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7n4kkb28OrN8zr5GEthLNe',
        }),
        'html_description': 'Author(s): Kim Mitzo Thompson<br/>Narrator(s): Various Contributors<br/>&lt;P&gt;Visit Old MacDonald&#39;s classic farm with these fun arrangements of favorite nursery rhymes and children&#39;s songs.&lt;/P&gt;',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab676663000022a804ef5d641ec031e609b53b0f',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab6766630000db5b04ef5d641ec031e609b53b0f',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6766630000703b04ef5d641ec031e609b53b0f',
            'width': 64,
          }),
        ]),
        'languages': list([
          'en',
        ]),
        'name': 'Old MacDonald Had A Farm',
        'narrators': list([
          dict({
            'name': 'Various Contributors',
          }),
        ]),
        'publisher': 'Kim Mitzo Thompson',
        'total_chapters': 17,
        'type': 'audiobook',
        'uri': 'spotify:show:7n4kkb28OrN8zr5GEthLNe',
      }),
    ]),
    'episodes': list([
      dict({
        'description': "D Oldies playing from another room and it's raining (raindrops falling on leaves) 3 Hours",
        'duration_ms': 10822789,
        'episode_id': '0VQo6YBrswFORfvwwKCER3',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0VQo6YBrswFORfvwwKCER3',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0VQo6YBrswFORfvwwKCER3',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8afa5243ceb27c662449a985ec',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1ffa5243ceb27c662449a985ec',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dfa5243ceb27c662449a985ec',
            'width': 64,
          }),
        ]),
        'name': "D Oldies playing from another room and it's raining (raindrops falling on leaves) 3 Hours",
        'release_date': '2021-04-20',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0VQo6YBrswFORfvwwKCER3',
      }),
      dict({
        'description': "Live from The Eras Tour (Taylor's Version) Hosted on Acast. See acast.com/privacy for more information.",
        'duration_ms': 266109,
        'episode_id': '33xXabVnJfMTdHWtARgn3D',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/33xXabVnJfMTdHWtARgn3D',
        }),
        'href': 'https://api.spotify.com/v1/episodes/33xXabVnJfMTdHWtARgn3D',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a1bd104ffbd807446f760ddf8',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f1bd104ffbd807446f760ddf8',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d1bd104ffbd807446f760ddf8',
            'width': 64,
          }),
        ]),
        'name': "Who's Affraid Of Little Old Me (Live From The Eras Tour)",
        'release_date': '2024-08-04',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:33xXabVnJfMTdHWtARgn3D',
      }),
      dict({
        'description': "'My Old Ass' (in het Nederlands steevast ondertiteld met 'mijn oude roestige reet') met Aubrey Plaza is nu te bekijken! 🍑 Helaas heeft deze film niet in de bioscoop gedraaid, maar het is wat ons betreft een Liga 2024-essential om te checken. Dus kijk de film en luister dan deze aflevering (spoilers included!) en geniet mee van deze queer joy op je scherm!\xa0  Vermeldingen in de podcast:\xa0  - Out Magazine (https://www.instagram.com/outmagazine/) (van het Wicked interview)  🎬 'My Old Ass'  (https://www.primevideo.com/detail/My-Old-Ass/0I1NQNGUFGJHUETGXCD3TC2S6Q)op Amazon Prime\xa0  🎶 TRANSNA het album (https://open.spotify.com/album/3ZbB4lOfSxeGln33XsFyXG?si=2ZrJsWLIRiSDojKFuJvM8g) op Spotify",
        'duration_ms': 3236287,
        'episode_id': '2ysMf0bq7NDmg14oyNAq2I',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2ysMf0bq7NDmg14oyNAq2I',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2ysMf0bq7NDmg14oyNAq2I',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a1fab4178009013b376f51668',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f1fab4178009013b376f51668',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d1fab4178009013b376f51668',
            'width': 64,
          }),
        ]),
        'name': '#33 - My Old Ass (S09)',
        'release_date': '2024-11-30',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2ysMf0bq7NDmg14oyNAq2I',
      }),
      dict({
        'description': "Use code LOGAN10 for 10% off your SeatGeek order https://seatgeek.onelink.me/RrnK/LOGAN10 *Up to $25 off \xa0 Billionaire whisperer Gstaad Guy joins the boys to discuss his secret hideaway for the elite, rivalry with Zachirific (Sydney Sweeney’s BF), bullying billionaires, why money CAN buy happiness, partnering with Loro Piana & AP, old money vs new money, saying À La Poubelle to his job at Apple, launching new Poubel charm bracelets & more… \xa0 SUBSCRIBE TO THE PODCAST ► https://www.youtube.com/impaulsive \xa0 Watch Previous (IMPAULSIVE'S TOP 24 MOMENTS OF 2024) ► https://www.youtube.com/watch?v=ea0EdsJZ0Rg \xa0 ADD US ON: INSTAGRAM: https://www.instagram.com/impaulsiveshow/ \xa0 Timestamps: 0:00 Welcome Gstaad Guy! 💥 3:04 How Gstaad Guy Broke His Face! 🤕 5:06 The Billionaire Frown ☹️ 7:00 “Hideaway For The Elite” 😳 11:41 George, Logan & Mike Visiting Gstaad…🃏 17:09 Does Money Buy Happiness? 💸 21:25 Colton Vs Constance 🤑 24:02 George Roasted CEO of Coinbase! 🤣 27:03 Loro Piana & AP ⌚️ 34:16 Greatest Day of Gstaad Guy’s Life! 📲 39:48 Zachirific Rivalry 😤 42:30 Funny Billionaire Boat Story! 🛥️ 44:48 Mike & Gstaad Guy’s Rocky Relationship..😠 47:26 Leaving Apple To Become Influencer 🍎 52:35 Greatness of Zachirific 👏 56:44 Who Gets More Chicks? 💃🏼 57:15 À La Poubelle Game! 🗑️ 1:02:48 New Poubel Charm Bracelets! 🔥 1:09:34 The REAL Gstaad Guy..? 😱 1:11:46 Rich Kids Takeover! 🏨 1:13:25 Best Places to Visit on Earth? 🌎 \xa0 PLEASE NOTE Impaulsive is a significant break from the typical content viewers have come to expect from the vlog channel & we could not be more proud and excited to watch this unfold and grow. Please be advised that we will be exploring a wide variety of topics (some adult-themed) and our younger viewers (and their parents) should be advised that some topics will be for mature audiences only.",
        'duration_ms': 4635742,
        'episode_id': '6pr7Hp7MoJTrf6x0qJFEBa',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/6pr7Hp7MoJTrf6x0qJFEBa',
        }),
        'href': 'https://api.spotify.com/v1/episodes/6pr7Hp7MoJTrf6x0qJFEBa',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a488fb29b868a43367803f60d',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f488fb29b868a43367803f60d',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d488fb29b868a43367803f60d',
            'width': 64,
          }),
        ]),
        'name': 'Meet Gstaad Guy: The 27-Year-Old Who Made a Career Bullying Billionaires',
        'release_date': '2025-01-02',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:6pr7Hp7MoJTrf6x0qJFEBa',
      }),
      dict({
        'description': '\u200f\u200f\u200f\u200f\u200f\u200f\u200f\u200f \xa0\xa0',
        'duration_ms': 287393,
        'episode_id': '59bFT8fYFQfx3giqyJZNel',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/59bFT8fYFQfx3giqyJZNel',
        }),
        'href': 'https://api.spotify.com/v1/episodes/59bFT8fYFQfx3giqyJZNel',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a6c8715b45efbf7afd13f320e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f6c8715b45efbf7afd13f320e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d6c8715b45efbf7afd13f320e',
            'width': 64,
          }),
        ]),
        'name': 'Öykü Gürman- Kül Oldum',
        'release_date': '2022-02-08',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:59bFT8fYFQfx3giqyJZNel',
      }),
      dict({
        'description': 'Bir Günlük Öldürün Beni',
        'duration_ms': 210077,
        'episode_id': '5Tl0pm6g17HHYtRbuiFUPo',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5Tl0pm6g17HHYtRbuiFUPo',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5Tl0pm6g17HHYtRbuiFUPo',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8aadac9d1b9a77936e6b13037d',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fadac9d1b9a77936e6b13037d',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dadac9d1b9a77936e6b13037d',
            'width': 64,
          }),
        ]),
        'name': 'Bir Günlük Öldürün Beni',
        'release_date': '2023-09-08',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5Tl0pm6g17HHYtRbuiFUPo',
      }),
      dict({
        'description': 'In 1997 Beverly Dollarhide hears miraculous news: her missing son, Nicholas, has been found in Spain. But the person she thinks is her teenage son is actually a grown man, a well known French identity scammer named Frederic Bourdin. And, after Frederic is brought back to the United States to be with his pretend family, the mystery of the real Nicholas Barclay’s disappearance grows deeper.Be the first to know about Wondery’s newest podcasts, curated recommendations, and more! Sign up now at https://wondery.fm/wonderynewsletterListen to Scamfluencers on the Wondery App or wherever you get your podcasts. You can listen early and ad-free on Wondery+. Join Wondery+ in the Wondery App, Apple Podcasts or Spotify. Start your free trial by visiting wondery.com/links/scamfluencers/ now.See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.',
        'duration_ms': 3675141,
        'episode_id': '064QZJa9VgJrzSiWcQ1Wcq',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/064QZJa9VgJrzSiWcQ1Wcq',
        }),
        'href': 'https://api.spotify.com/v1/episodes/064QZJa9VgJrzSiWcQ1Wcq',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ad52e77a5844deee68aa3cd47',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fd52e77a5844deee68aa3cd47',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dd52e77a5844deee68aa3cd47',
            'width': 64,
          }),
        ]),
        'name': 'Frédéric Bourdin: No Country For Old Men',
        'release_date': '2025-01-20',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:064QZJa9VgJrzSiWcQ1Wcq',
      }),
      dict({
        'description': 'On December 31st, 1989, a mother from a suburban neighborhood in Ohio disappeared into thin air. But when the dark secrets began to come to light, the picture grew darker and darker with every new revelation. And in today\'s special episode, we speak with Collier Landry, the victim\'s son, and the boy who helped solve the crime. - Listen to our new show, "THE CONSPIRACY FILES"!: -Spotify - https://open.spotify.com/show/5IY9nWD2MYDzlSYP48nRPl -Apple Podcasts - https://podcasts.apple.com/us/podcast/the-conspiracy-files/id1752719844 -Amazon/Audible - https://music.amazon.com/podcasts/ab1ade99-740c-46ae-8028-b2cf41eabf58/the-conspiracy-files -Pandora - https://www.pandora.com/podcast/the-conspiracy-files/PC:1001089101 -iHeart - https://iheart.com/podcast/186907423/ -PocketCast - https://pca.st/dpdyrcca -CastBox - https://castbox.fm/channel/id6193084?country=us - Stay Connected: Join the Murder in America fam in our free Facebook Community for a behind-the-scenes look, more insights and current events in the true crime world:\xa0https://www.facebook.com/groups/4365229996855701 If you want even more Murder in America bonus content, including ad-free episodes, come join us on Patreon:\xa0https://www.patreon.com/murderinamerica Instagram:\xa0http://instagram.com/murderinamerica/ Facebook:https://www.facebook.com/people/Murder-in-America-Podcast/100086268848682/ Twitter:\xa0https://twitter.com/MurderInAmerica TikTok:\xa0https://www.tiktok.com/@theparanormalfiles\xa0and\xa0https://www.tiktok.com/@courtneybrowen Feeling spooky? Follow Colin as he travels state to state (and even country to country!) investigating claims of extreme paranormal activity and visiting famous haunted locations on The Paranormal Files Official Channel:\xa0https://www.youtube.com/c/TheParanormalFilesOfficialChannel - (c) BLOOD IN THE SINK PRODUCTIONS 2025 Learn more about your ad choices. Visit megaphone.fm/adchoices',
        'duration_ms': 5894817,
        'episode_id': '0cTwLSkozugzhvUj2gjBbu',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0cTwLSkozugzhvUj2gjBbu',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0cTwLSkozugzhvUj2gjBbu',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ab63fe8290533b1df12a4e2d7',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fb63fe8290533b1df12a4e2d7',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68db63fe8290533b1df12a4e2d7',
            'width': 64,
          }),
        ]),
        'name': "EP. 183: OHIO - The 11-Year-Old Who Helped Solve His Mom's Murder",
        'release_date': '2025-01-03',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0cTwLSkozugzhvUj2gjBbu',
      }),
      dict({
        'description': '0:00 Intro 0:17 Mommy 2:27 Comment 2:39 ASL 10:26 Mistress 14:40 Pokemon Learn more about your ad choices. Visit megaphone.fm/adchoices',
        'duration_ms': 1072744,
        'episode_id': '2IOQ2BbxKvMdmBmMIVlON4',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2IOQ2BbxKvMdmBmMIVlON4',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2IOQ2BbxKvMdmBmMIVlON4',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a169eb6511a255e01ed31b16f',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f169eb6511a255e01ed31b16f',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d169eb6511a255e01ed31b16f',
            'width': 64,
          }),
        ]),
        'name': 'r/Relationships My Mom is 2 Years Older than Me',
        'release_date': '2025-01-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2IOQ2BbxKvMdmBmMIVlON4',
      }),
      dict({
        'description': 'Sang’s mom is haunted. Everyone has their own explanations for it but it’s that simple.\xa0Every time she sets the dinner table - she stares at the empty seat. Sometimes smiling, sometimes pouting, but always as if someone is sitting there.\xa0Sang would ask -\xa0“Mom, is everything alright?”“Just make sure to save some of the meat for Niuniu - you know that’s her favorite.”Sang’s mom would motion at the empty chair and smile.\xa0The haunting started when Niuniu, Sang’s little sister, went missing. Nobody knew what happened to her other than the fact that she received a creepy doll with moving eyes shortly before she went missing.\xa026 years later Niuniu would come back to tell everyone the truth. She was kidnapped, trafficked, and sold. After 26 years she was coming back to kill her trafficker. Get her revenge.\xa0\xa0\xa0Full Source Notes: rottenmangopodcast.com\xa0\xa0',
        'duration_ms': 3874873,
        'episode_id': '4ATmxIwrmFZUQl19Z6qWq6',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/4ATmxIwrmFZUQl19Z6qWq6',
        }),
        'href': 'https://api.spotify.com/v1/episodes/4ATmxIwrmFZUQl19Z6qWq6',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ae17b81be830039041326c578',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fe17b81be830039041326c578',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68de17b81be830039041326c578',
            'width': 64,
          }),
        ]),
        'name': '#408: 5Yr Old Girl SOLD - 26 Years Later She Wants Revenge & On Mission To Kill Trafficker',
        'release_date': '2024-12-24',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:4ATmxIwrmFZUQl19Z6qWq6',
      }),
      dict({
        'description': '“To Catch A Predator” steps:Hire an adult decoy to lurk on websites advertising themselves as 13 year olds looking for a middle aged companion.Invite the adult predator to a house that has been wired for audio and video recording.Have the host of the famous TV show pop out to ask the predator questions and arrest them on the way out.That is the premise to the show “To Catch A Predator” that has now been cancelled for its moral dilemmas.\xa0But now influencers are recreating the show themselves on their platforms. Luring in predators, confronting them, and then calling the police.\xa0That’s what 17 year old Gavon tells the cops was his plan… He met up with a middle aged man on Grindr for the purpose of robbing him because he deserves it. Why else would he talk to a minor?But for the police to believe his side of the story they have to go through his phone… and that’s where they find a folder titled - “Dark.”\xa0The password? “Murder.”\xa0Suddenly a simple robbery case turns into a murder investigation because in it… are videos and photos of 17 year old Gavon Ramsay killing and SAing a 98 year old woman in her own home. Gavon Ramsay is the predator.\xa0\xa0\xa0Full Source Notes: rottenmangopodcast.com\xa0',
        'duration_ms': 5047118,
        'episode_id': '5CPEh8oAStpCEBZBMYH5Rb',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5CPEh8oAStpCEBZBMYH5Rb',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5CPEh8oAStpCEBZBMYH5Rb',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ae17b81be830039041326c578',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fe17b81be830039041326c578',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68de17b81be830039041326c578',
            'width': 64,
          }),
        ]),
        'name': '#406: 16-Yr-Old Murders 98-Yr-Old Woman To SA Her Corpse For 2 Hours While Recording',
        'release_date': '2024-12-12',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5CPEh8oAStpCEBZBMYH5Rb',
      }),
      dict({
        'description': "Sierah Joughin was a 20-year-old college student who was riding her bike home from her boyfriend's house one night when everything suddenly changed. Her boyfriend had been following alongside on his motorcycle, and when they parted ways, Sierra was immediately attacked and abducted by a sick man who lived nearby.  Justice for Sierah: https://justiceforsierah.org/ Sierah Strong: https://justiceforsierah.org/programm... Kid Print ID: https://justiceforsierah.org/kidprint/  Check out my foundation, Higher Hope: Higher Hope Foundation: https://www.higherhope.org/\xa0  Shop my Merch! https://kendallrae.shop  This episode is sponsored by: Quince Earnin Acorns  Check out Kendall's other podcasts: The Sesh & Mile Higher  Follow Kendall! YouTube Twitter Instagram Facebook Mile Higher Zoo  REQUESTS: General case suggestion form: https://bit.ly/32kwPly Form for people directly related/ close to the victim: https://bit.ly/3KqMZLj Discord: https://discord.com/invite/an4stY9BCN  CONTACT: For Business Inquiries - kendall@INFAgency.com ",
        'duration_ms': 4165616,
        'episode_id': '0X3PCpHPRKSd9R1yfpF5Pz',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/0X3PCpHPRKSd9R1yfpF5Pz',
        }),
        'href': 'https://api.spotify.com/v1/episodes/0X3PCpHPRKSd9R1yfpF5Pz',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a3f5daa3fa2ffe173e2a7128f',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f3f5daa3fa2ffe173e2a7128f',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d3f5daa3fa2ffe173e2a7128f',
            'width': 64,
          }),
        ]),
        'name': 'Abducted While Biking Home: The Murder of 20-Year-Old Sierah Joughin',
        'release_date': '2025-01-16',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:0X3PCpHPRKSd9R1yfpF5Pz',
      }),
      dict({
        'description': "Happy birthday to me!! It's CAPRICORN SEASON and I am turning 32 years old. Every year, I like to reflect back on the valuable life lessons I've learned, and this year is a special one because it's the first year I can confidently say I feel more empowered and in living in my truth to the fullest. If you're interested in joining my masterclasses, here's the link to sign up. If doors aren't open, you can sign up for the waitlist and you will get an email when they're available again. Your support and love means the world to me. I see all of your comments, and dms. Feel free to comment on Spotify, or send me a message on instagram @lyss and @dateyourselfinstead. What did you think of this ep? It's probably going to be one of my favorites. LOVE YOU, xoxo. Lyss.",
        'duration_ms': 3041488,
        'episode_id': '5Xy3ILnR9ch31ZUei4PY0f',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5Xy3ILnR9ch31ZUei4PY0f',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5Xy3ILnR9ch31ZUei4PY0f',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8aad34c49fb838f1183771023d',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fad34c49fb838f1183771023d',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dad34c49fb838f1183771023d',
            'width': 64,
          }),
        ]),
        'name': '32 lessons I wish I knew sooner about love and life at 32 years old',
        'release_date': '2025-01-19',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5Xy3ILnR9ch31ZUei4PY0f',
      }),
      dict({
        'description': "In this intense and emotional video, Brooke shares her shocking and heartbreaking story of discovering that her mom had an affair with her 18-year-old boyfriend. What started as a normal relationship quickly spiraled into a web of betrayal, hurt, and confusion. Watch as Brooke opens up about the pain of finding out about the affair, the aftermath, and how it has impacted her family and her sense of trust.  If you have a unique story you'd like to share on the podcast, please fill out this form: https://forms.gle/ZiHgdoK4PLRAddiB9 or send an email to wereallinsanepodcast@gmail.com Business Inquiries please contact: weareallinsane@outloudtalent.com",
        'duration_ms': 10701610,
        'episode_id': '2EBTnjZY9zImvd715FPbey',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2EBTnjZY9zImvd715FPbey',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2EBTnjZY9zImvd715FPbey',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a8723df38e2218aebf533bbed',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f8723df38e2218aebf533bbed',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d8723df38e2218aebf533bbed',
            'width': 64,
          }),
        ]),
        'name': "My Mom's Affair with My 18-Year-Old Boyfriend",
        'release_date': '2024-12-23',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2EBTnjZY9zImvd715FPbey',
      }),
      dict({
        'description': 'Three! Two! One! We Failed! Oh, and happy new year I guess... Learn more about your ad choices. Visit podcastchoices.com/adchoices',
        'duration_ms': 3529002,
        'episode_id': '65O7xKpzcrmxd1jSLu3fAe',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/65O7xKpzcrmxd1jSLu3fAe',
        }),
        'href': 'https://api.spotify.com/v1/episodes/65O7xKpzcrmxd1jSLu3fAe',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a80e26e1f6b9ec427a0faf074',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f80e26e1f6b9ec427a0faf074',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d80e26e1f6b9ec427a0faf074',
            'width': 64,
          }),
        ]),
        'name': 'New Year, Old Us',
        'release_date': '2024-12-27',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:65O7xKpzcrmxd1jSLu3fAe',
      }),
      dict({
        'description': 'in front of me today, i have 2 lists of new year’s resolutions - one from 2023 and one from 2024. did i accomplish my resolutions? did i fail miserably? what can we learn from my past 2 years of resolutions? today i’m going to react to them with you. Learn more about your ad choices. Visit podcastchoices.com/adchoices',
        'duration_ms': 2431059,
        'episode_id': '1dHW4KULBe8j9nYUY8oHaE',
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/1dHW4KULBe8j9nYUY8oHaE',
        }),
        'href': 'https://api.spotify.com/v1/episodes/1dHW4KULBe8j9nYUY8oHaE',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a593ce89783309a0d57b959a1',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f593ce89783309a0d57b959a1',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d593ce89783309a0d57b959a1',
            'width': 64,
          }),
        ]),
        'name': "reacting to my old new year's resolutions",
        'release_date': '2024-12-08',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:1dHW4KULBe8j9nYUY8oHaE',
      }),
      dict({
        'description': 'I Miss The Old Kanye [EDIT]',
        'duration_ms': 51069,
        'episode_id': '01UKcpGcNSKHDLNDTPGMY2',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/01UKcpGcNSKHDLNDTPGMY2',
        }),
        'href': 'https://api.spotify.com/v1/episodes/01UKcpGcNSKHDLNDTPGMY2',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a9d2227994feb9358c331d073',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f9d2227994feb9358c331d073',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d9d2227994feb9358c331d073',
            'width': 64,
          }),
        ]),
        'name': 'I Miss The Old Kanye [EDIT]',
        'release_date': '2024-01-27',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:01UKcpGcNSKHDLNDTPGMY2',
      }),
      dict({
        'description': '1 Hour of OLD ChainsFR  60 straight minutes of the oldest chainsfr videos back when dude was straight dookie and couldnt animate and also had a booty ahhh mic Including: bad haircuts, when you get too high, working in fast food, the 3 levels of being high, high school gym class be like, awkward conversations, NPCs in real life, running from the cops while high, the 7 levels of being drunk, the day i almost died, too high in public, the types of high people, going to school high, high school fights be like, family functions be like  -chainsfr, chainsfr on spotify, chains stories, chainsfr stories, chains podcast',
        'duration_ms': 3650664,
        'episode_id': '2QdyQOvYvr1esGGLI9LDX0',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/2QdyQOvYvr1esGGLI9LDX0',
        }),
        'href': 'https://api.spotify.com/v1/episodes/2QdyQOvYvr1esGGLI9LDX0',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a209d94fbd20da698cc251eba',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f209d94fbd20da698cc251eba',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d209d94fbd20da698cc251eba',
            'width': 64,
          }),
        ]),
        'name': '1 Hour of OLD ChainsFR',
        'release_date': '2024-12-13',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:2QdyQOvYvr1esGGLI9LDX0',
      }),
      dict({
        'description': 'Relax and take notes while I take tokes of the marijuana smoke',
        'duration_ms': 161285,
        'episode_id': '48Dd57dBfckWucmiNIh4wG',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/48Dd57dBfckWucmiNIh4wG',
        }),
        'href': 'https://api.spotify.com/v1/episodes/48Dd57dBfckWucmiNIh4wG',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ace606b7bdb77171fb0ff79de',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fce606b7bdb77171fb0ff79de',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dce606b7bdb77171fb0ff79de',
            'width': 64,
          }),
        ]),
        'name': 'Biggie - Relax And Take Notes (Dead Wrong Remix)',
        'release_date': '2023-09-15',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:48Dd57dBfckWucmiNIh4wG',
      }),
      dict({
        'description': 'When i die, fuck it, i wanna go to hell. Because im a piece of shit it aint hard to fucking tell  ',
        'duration_ms': 160417,
        'episode_id': '5d5YhSoRs78G0HxdpHz5OI',
        'explicit': True,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/episode/5d5YhSoRs78G0HxdpHz5OI',
        }),
        'href': 'https://api.spotify.com/v1/episodes/5d5YhSoRs78G0HxdpHz5OI',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8afe0e317a7054e3645a7efcbe',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1ffe0e317a7054e3645a7efcbe',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dfe0e317a7054e3645a7efcbe',
            'width': 64,
          }),
        ]),
        'name': 'Biggie - Suicidal Thoughts When I Die Remix',
        'release_date': '2023-09-15',
        'release_date_precision': <ReleaseDatePrecision.DAY: 'day'>,
        'uri': 'spotify:episode:5d5YhSoRs78G0HxdpHz5OI',
      }),
    ]),
    'playlists': list([
      dict({
        'collaborative': False,
        'description': '',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/7y15TCWmOoqxeYyiALg775',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://mosaic.scdn.co/640/ab67616d00001e022a76a49686ef868b824b9200ab67616d00001e023f97d4244eff5852477d9ee0ab67616d00001e0263facc42e4a35eb3aa182b59ab67616d00001e02b3994164520409b6a98f51be',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://mosaic.scdn.co/300/ab67616d00001e022a76a49686ef868b824b9200ab67616d00001e023f97d4244eff5852477d9ee0ab67616d00001e0263facc42e4a35eb3aa182b59ab67616d00001e02b3994164520409b6a98f51be',
            'width': 300,
          }),
          dict({
            'height': 60,
            'url': 'https://mosaic.scdn.co/60/ab67616d00001e022a76a49686ef868b824b9200ab67616d00001e023f97d4244eff5852477d9ee0ab67616d00001e0263facc42e4a35eb3aa182b59ab67616d00001e02b3994164520409b6a98f51be',
            'width': 60,
          }),
        ]),
        'name': 'Old but gold💛',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'tanjabrouwer',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/brouwerbaarn',
          }),
          'href': 'https://api.spotify.com/v1/users/brouwerbaarn',
          'object_type': 'user',
          'owner_id': 'brouwerbaarn',
          'uri': 'spotify:user:brouwerbaarn',
        }),
        'playlist_id': '7y15TCWmOoqxeYyiALg775',
        'public': True,
        'uri': 'spotify:playlist:7y15TCWmOoqxeYyiALg775',
      }),
      dict({
        'collaborative': False,
        'description': 'The best oldies from the 70s, 80s, and 90s back when music was actually good',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/3pUwhh3WcgvFZbIiwJ3x6f',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://mosaic.scdn.co/640/ab67616d00001e0251c02a77d09dfcd53c8676d0ab67616d00001e0257df7ce0eac715cf70e519a7ab67616d00001e02eab029f7c06a8091186ca5c4ab67616d00001e02f903e62767a0e22e33b7af83',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://mosaic.scdn.co/300/ab67616d00001e0251c02a77d09dfcd53c8676d0ab67616d00001e0257df7ce0eac715cf70e519a7ab67616d00001e02eab029f7c06a8091186ca5c4ab67616d00001e02f903e62767a0e22e33b7af83',
            'width': 300,
          }),
          dict({
            'height': 60,
            'url': 'https://mosaic.scdn.co/60/ab67616d00001e0251c02a77d09dfcd53c8676d0ab67616d00001e0257df7ce0eac715cf70e519a7ab67616d00001e02eab029f7c06a8091186ca5c4ab67616d00001e02f903e62767a0e22e33b7af83',
            'width': 60,
          }),
        ]),
        'name': '70/80/90 Oldies',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'preston.howell',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/121793365',
          }),
          'href': 'https://api.spotify.com/v1/users/121793365',
          'object_type': 'user',
          'owner_id': '121793365',
          'uri': 'spotify:user:121793365',
        }),
        'playlist_id': '3pUwhh3WcgvFZbIiwJ3x6f',
        'public': True,
        'uri': 'spotify:playlist:3pUwhh3WcgvFZbIiwJ3x6f',
      }),
      dict({
        'collaborative': False,
        'description': '#ThrowbackThursday Oldies Pop, Rock, Disco, R&amp;B, Swing, Rockabilly &amp; Blues Legends! (Listen here <a href="spotify:playlist:6wR4gl33rmS84wJYpJ8rEN">an 80s Disco</a> or <a href="spotify:playlist:4vABX7OZ5nwF5QngjMNmPK">Happy Oldies</a> playlist) A fine selection of cheering goldies from the best past!',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/1TNg7JCxifAjwrnQARimex',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-fa.spotifycdn.com/image/ab67706c0000da84fbe8a7975a5e0de860715a5a',
            'width': None,
          }),
        ]),
        'name': 'Oldies Best songs 80s, 70s, 60s  / Throwbacks HITS / 💿',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'indiemono',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/sanik007',
          }),
          'href': 'https://api.spotify.com/v1/users/sanik007',
          'object_type': 'user',
          'owner_id': 'sanik007',
          'uri': 'spotify:user:sanik007',
        }),
        'playlist_id': '1TNg7JCxifAjwrnQARimex',
        'public': True,
        'uri': 'spotify:playlist:1TNg7JCxifAjwrnQARimex',
      }),
      dict({
        'collaborative': False,
        'description': 'Thank you',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/2rdwGXB4JeeS2DM7PO8pqL',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000d72cda334278d33081937c586935',
            'width': None,
          }),
        ]),
        'name': 'Old Songs Everyone Knows',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Carterhays',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/kckx6yhloq23mtijf127fvy8q',
          }),
          'href': 'https://api.spotify.com/v1/users/kckx6yhloq23mtijf127fvy8q',
          'object_type': 'user',
          'owner_id': 'kckx6yhloq23mtijf127fvy8q',
          'uri': 'spotify:user:kckx6yhloq23mtijf127fvy8q',
        }),
        'playlist_id': '2rdwGXB4JeeS2DM7PO8pqL',
        'public': True,
        'uri': 'spotify:playlist:2rdwGXB4JeeS2DM7PO8pqL',
      }),
      dict({
        'collaborative': False,
        'description': 'The best ibiza lounge music, full of chill house, lounge &amp; chillout vibes..  Updated weekly 🌴 Ibiza summer mix, old summer vibes, deep house, ibiza house, chill playlist, restaurant &amp; bar vibes, rooftop sessions, sunset vibes, summervibes, ibiza music, morning vibes, evening chill, chill classics.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/5ud67zggJb78Rt1EVL11nV',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da84c7ad21cda30292603fe35ec1',
            'width': None,
          }),
        ]),
        'name': 'Ibiza Lounge Music 🌴🌞 Summer Mix 2025 - Chill Deep House Vibes - Afro House',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Castle Collective',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/btie3keesw0834g1l5dgbvjqz',
          }),
          'href': 'https://api.spotify.com/v1/users/btie3keesw0834g1l5dgbvjqz',
          'object_type': 'user',
          'owner_id': 'btie3keesw0834g1l5dgbvjqz',
          'uri': 'spotify:user:btie3keesw0834g1l5dgbvjqz',
        }),
        'playlist_id': '5ud67zggJb78Rt1EVL11nV',
        'public': True,
        'uri': 'spotify:playlist:5ud67zggJb78Rt1EVL11nV',
      }),
      dict({
        'collaborative': False,
        'description': '90s-00s Rnb Classics - Best r&amp;b Music - Best Rnb Love Songs of All Time - R&amp;b All Time Favorites / Favourites - Best of Neyo, Usher, Chris Brown, Ne-Yo, Sisqo, Craig David, Mario, Nelly, Akon, Mariah Carey, Boyz II Men',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/2T3BSpqN34Z4sppHDNWoeE',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da84cdcaa5e273d90fdba839069b',
            'width': None,
          }),
        ]),
        'name': 'R&B Classics  90s & 2000s - Best Old School RnB Hits Playlist - Usher, Chris Brown, Ne-Yo, Mario',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Esydia',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/savz8vts72hqdy7von3mqc29g',
          }),
          'href': 'https://api.spotify.com/v1/users/savz8vts72hqdy7von3mqc29g',
          'object_type': 'user',
          'owner_id': 'savz8vts72hqdy7von3mqc29g',
          'uri': 'spotify:user:savz8vts72hqdy7von3mqc29g',
        }),
        'playlist_id': '2T3BSpqN34Z4sppHDNWoeE',
        'public': True,
        'uri': 'spotify:playlist:2T3BSpqN34Z4sppHDNWoeE',
      }),
      dict({
        'collaborative': False,
        'description': 'Takes you back to the 90&#x27;s with nostalgic pop, house, happy hardcore etc.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/5ccR8q4JkCVXSPlmYUQO4d',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da84fdec67325d6f0a8a0f302428',
            'width': None,
          }),
        ]),
        'name': "Oldskool 90's mix",
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'John Den Ollander',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/21y6ay3pymrnshjb6gxt3iqpi',
          }),
          'href': 'https://api.spotify.com/v1/users/21y6ay3pymrnshjb6gxt3iqpi',
          'object_type': 'user',
          'owner_id': '21y6ay3pymrnshjb6gxt3iqpi',
          'uri': 'spotify:user:21y6ay3pymrnshjb6gxt3iqpi',
        }),
        'playlist_id': '5ccR8q4JkCVXSPlmYUQO4d',
        'public': True,
        'uri': 'spotify:playlist:5ccR8q4JkCVXSPlmYUQO4d',
      }),
      dict({
        'collaborative': False,
        'description': 'All the old and New Hits in one playlist. Best Afrobeats, Afrobeats Hits, African music, Top Afrobeats 2025, Afrobeat 2025, Top 100 Nigeria - Rema - Tyla - Ayra Starr - Oxlade - Wizkid - Burna Boy - Davido - Omah Lay - FireboyDML - Tems - Lojay -Libianca - Asake - Adekunle  - City Boys - Peru.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/25Y75ozl2aI0NylFToefO5',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-fa.spotifycdn.com/image/ab67706c0000da8457a343b16f9396c0284a8e95',
            'width': None,
          }),
        ]),
        'name': 'Afrobeats Hits 🔥',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'EMA Records',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/4djxvzkx1svhemk7ozszfnkga',
          }),
          'href': 'https://api.spotify.com/v1/users/4djxvzkx1svhemk7ozszfnkga',
          'object_type': 'user',
          'owner_id': '4djxvzkx1svhemk7ozszfnkga',
          'uri': 'spotify:user:4djxvzkx1svhemk7ozszfnkga',
        }),
        'playlist_id': '25Y75ozl2aI0NylFToefO5',
        'public': True,
        'uri': 'spotify:playlist:25Y75ozl2aI0NylFToefO5',
      }),
      dict({
        'collaborative': False,
        'description': 'white girl bangers, old radio hits, middle school dance memories,  2000-2020 vibes and other bops 🔥🔥',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/7GRnA1buU09xvdDoSJlyEw',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da84dc99f83325d6f2f478b69c68',
            'width': None,
          }),
        ]),
        'name': 'nostalgic songs that go crazy🔥🔥',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'ufw.celery',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/31x46jzu4engjhfvh3n3pniojxdu',
          }),
          'href': 'https://api.spotify.com/v1/users/31x46jzu4engjhfvh3n3pniojxdu',
          'object_type': 'user',
          'owner_id': '31x46jzu4engjhfvh3n3pniojxdu',
          'uri': 'spotify:user:31x46jzu4engjhfvh3n3pniojxdu',
        }),
        'playlist_id': '7GRnA1buU09xvdDoSJlyEw',
        'public': True,
        'uri': 'spotify:playlist:7GRnA1buU09xvdDoSJlyEw',
      }),
      dict({
        'collaborative': False,
        'description': 'Your favorite 2000s Hits 🪩 playlist,  2000s music hits, 2000 hits, 2010 hits, top hits 2000s, 2020 hits, 2010s top songs,  throwbacks, old songs, 2000s pop hit throwback, old but gold, best pop songs, throwback bangers, best old songs, top hits, oud, 2010s nostalgia, best pop songs 2000s',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/26sGzSJGUxhqFlvNW4X15t',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://mosaic.scdn.co/640/ab67616d00001e025840f88453448723ce907a53ab67616d00001e0271a4bb7806c949809ab4164bab67616d00001e02ba5db46f4b838ef6027e6f96ab67616d00001e02c55a2d31ef4b957aaf4f3a9b',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://mosaic.scdn.co/300/ab67616d00001e025840f88453448723ce907a53ab67616d00001e0271a4bb7806c949809ab4164bab67616d00001e02ba5db46f4b838ef6027e6f96ab67616d00001e02c55a2d31ef4b957aaf4f3a9b',
            'width': 300,
          }),
          dict({
            'height': 60,
            'url': 'https://mosaic.scdn.co/60/ab67616d00001e025840f88453448723ce907a53ab67616d00001e0271a4bb7806c949809ab4164bab67616d00001e02ba5db46f4b838ef6027e6f96ab67616d00001e02c55a2d31ef4b957aaf4f3a9b',
            'width': 60,
          }),
        ]),
        'name': 'Old hits 2000-2020😆',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Paige',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/mvereiken',
          }),
          'href': 'https://api.spotify.com/v1/users/mvereiken',
          'object_type': 'user',
          'owner_id': 'mvereiken',
          'uri': 'spotify:user:mvereiken',
        }),
        'playlist_id': '26sGzSJGUxhqFlvNW4X15t',
        'public': True,
        'uri': 'spotify:playlist:26sGzSJGUxhqFlvNW4X15t',
      }),
      dict({
        'collaborative': False,
        'description': '',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/5y1hG76zYFBZ3rGmMFD6aZ',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://mosaic.scdn.co/640/ab67616d00001e029b19c107109de740bad72df5ab67616d00001e02a191830c8b300bc71c2faac7ab67616d00001e02fe3cf32b1320e8ded39d8c74ab67616d00001e02fec1b815bb3c50a64a90fd10',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://mosaic.scdn.co/300/ab67616d00001e029b19c107109de740bad72df5ab67616d00001e02a191830c8b300bc71c2faac7ab67616d00001e02fe3cf32b1320e8ded39d8c74ab67616d00001e02fec1b815bb3c50a64a90fd10',
            'width': 300,
          }),
          dict({
            'height': 60,
            'url': 'https://mosaic.scdn.co/60/ab67616d00001e029b19c107109de740bad72df5ab67616d00001e02a191830c8b300bc71c2faac7ab67616d00001e02fe3cf32b1320e8ded39d8c74ab67616d00001e02fec1b815bb3c50a64a90fd10',
            'width': 60,
          }),
        ]),
        'name': 'Old School Bangers😈',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Declan Allport',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/11175441529',
          }),
          'href': 'https://api.spotify.com/v1/users/11175441529',
          'object_type': 'user',
          'owner_id': '11175441529',
          'uri': 'spotify:user:11175441529',
        }),
        'playlist_id': '5y1hG76zYFBZ3rGmMFD6aZ',
        'public': True,
        'uri': 'spotify:playlist:5y1hG76zYFBZ3rGmMFD6aZ',
      }),
      dict({
        'collaborative': False,
        'description': 'Best acoustic guitar and piano hits and cover of 2019 - 2023 + a few oldies. unplugged_rec on IG.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/4uf0gphPVNtk4Uu0bxtdGA',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-fa.spotifycdn.com/image/ab67706c0000da84f2e619c3093158e1ccf3a388',
            'width': None,
          }),
        ]),
        'name': 'Acoustic Covers 2025 (Top 100)',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Unplugged',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/312avoycbyo353bvbqm2mpdnghjy',
          }),
          'href': 'https://api.spotify.com/v1/users/312avoycbyo353bvbqm2mpdnghjy',
          'object_type': 'user',
          'owner_id': '312avoycbyo353bvbqm2mpdnghjy',
          'uri': 'spotify:user:312avoycbyo353bvbqm2mpdnghjy',
        }),
        'playlist_id': '4uf0gphPVNtk4Uu0bxtdGA',
        'public': True,
        'uri': 'spotify:playlist:4uf0gphPVNtk4Uu0bxtdGA',
      }),
      dict({
        'collaborative': False,
        'description': 'Essential tracks from the most notable classical works ever recorded - both old and new. Featuring Mozart, Beethoven, Bach, Chopin, Satie, Brahms, Vivaldi, Max Richter, Ludovico Einaudi',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/1h0CEZCm6IbFTbxThn6Xcs',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-ak.spotifycdn.com/image/ab67706c0000da844ed1546759ae6e2e1256cfb0',
            'width': None,
          }),
        ]),
        'name': 'Best Classical Music',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Peaceful Classics',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/peacefulclassics',
          }),
          'href': 'https://api.spotify.com/v1/users/peacefulclassics',
          'object_type': 'user',
          'owner_id': 'peacefulclassics',
          'uri': 'spotify:user:peacefulclassics',
        }),
        'playlist_id': '1h0CEZCm6IbFTbxThn6Xcs',
        'public': True,
        'uri': 'spotify:playlist:1h0CEZCm6IbFTbxThn6Xcs',
      }),
      dict({
        'collaborative': False,
        'description': '',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/6DsHDZmrOgLBmxa9DJE6sb',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://mosaic.scdn.co/640/ab67616d00001e02926f43e7cce571e62720fd46ab67616d00001e02b89cf022db28fa31376e0ed8ab67616d00001e02f60070dce96a2c1b70cf6ff0ab67616d00001e02f619042d5f6b2149a4f5e0ca',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://mosaic.scdn.co/300/ab67616d00001e02926f43e7cce571e62720fd46ab67616d00001e02b89cf022db28fa31376e0ed8ab67616d00001e02f60070dce96a2c1b70cf6ff0ab67616d00001e02f619042d5f6b2149a4f5e0ca',
            'width': 300,
          }),
          dict({
            'height': 60,
            'url': 'https://mosaic.scdn.co/60/ab67616d00001e02926f43e7cce571e62720fd46ab67616d00001e02b89cf022db28fa31376e0ed8ab67616d00001e02f60070dce96a2c1b70cf6ff0ab67616d00001e02f619042d5f6b2149a4f5e0ca',
            'width': 60,
          }),
        ]),
        'name': 'old songs (2000-2017)',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'cloudkissees_',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/cli1csrh97684wluip5gaf93i',
          }),
          'href': 'https://api.spotify.com/v1/users/cli1csrh97684wluip5gaf93i',
          'object_type': 'user',
          'owner_id': 'cli1csrh97684wluip5gaf93i',
          'uri': 'spotify:user:cli1csrh97684wluip5gaf93i',
        }),
        'playlist_id': '6DsHDZmrOgLBmxa9DJE6sb',
        'public': True,
        'uri': 'spotify:playlist:6DsHDZmrOgLBmxa9DJE6sb',
      }),
      dict({
        'collaborative': False,
        'description': 'Pov: u r rich, probably drinking expensive champagne and watching your family riding horses or playing golf',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/0mJKDfPHCzi5mtkNxThfwU',
        }),
        'images': list([
          dict({
            'height': None,
            'url': 'https://image-cdn-fa.spotifycdn.com/image/ab67706c0000da840f8c868a5d5236d10984e626',
            'width': None,
          }),
        ]),
        'name': 'old money style/ rich 💸💰',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Julia Marie Coyle Dørum',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/julia.dorum',
          }),
          'href': 'https://api.spotify.com/v1/users/julia.dorum',
          'object_type': 'user',
          'owner_id': 'julia.dorum',
          'uri': 'spotify:user:julia.dorum',
        }),
        'playlist_id': '0mJKDfPHCzi5mtkNxThfwU',
        'public': True,
        'uri': 'spotify:playlist:0mJKDfPHCzi5mtkNxThfwU',
      }),
      dict({
        'collaborative': False,
        'description': '',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/5VRWlTmnbHXByhM7qQsTEJ',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://mosaic.scdn.co/640/ab67616d00001e021bfc8a0ea93056e2d6dcbefcab67616d00001e02656e921d6769ba28a74acc17ab67616d00001e0286b0c9728ad3ed338eaeea79ab67616d00001e0287be2cd7396e138e74cb347c',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://mosaic.scdn.co/300/ab67616d00001e021bfc8a0ea93056e2d6dcbefcab67616d00001e02656e921d6769ba28a74acc17ab67616d00001e0286b0c9728ad3ed338eaeea79ab67616d00001e0287be2cd7396e138e74cb347c',
            'width': 300,
          }),
          dict({
            'height': 60,
            'url': 'https://mosaic.scdn.co/60/ab67616d00001e021bfc8a0ea93056e2d6dcbefcab67616d00001e02656e921d6769ba28a74acc17ab67616d00001e0286b0c9728ad3ed338eaeea79ab67616d00001e0287be2cd7396e138e74cb347c',
            'width': 60,
          }),
        ]),
        'name': 'OLD BANGERS 2000-2015',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Thomas Bro',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/1157697626',
          }),
          'href': 'https://api.spotify.com/v1/users/1157697626',
          'object_type': 'user',
          'owner_id': '1157697626',
          'uri': 'spotify:user:1157697626',
        }),
        'playlist_id': '5VRWlTmnbHXByhM7qQsTEJ',
        'public': True,
        'uri': 'spotify:playlist:5VRWlTmnbHXByhM7qQsTEJ',
      }),
      dict({
        'collaborative': False,
        'description': '',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/playlist/4tpbrXsklgYKdtpQIDKgGQ',
        }),
        'images': list([
          dict({
            'height': 640,
            'url': 'https://mosaic.scdn.co/640/ab67616d00001e023f97d4244eff5852477d9ee0ab67616d00001e024ea6653890e297d53e93e3e0ab67616d00001e0263facc42e4a35eb3aa182b59ab67616d00001e0266c3eb32692a0ae487079cf1',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://mosaic.scdn.co/300/ab67616d00001e023f97d4244eff5852477d9ee0ab67616d00001e024ea6653890e297d53e93e3e0ab67616d00001e0263facc42e4a35eb3aa182b59ab67616d00001e0266c3eb32692a0ae487079cf1',
            'width': 300,
          }),
          dict({
            'height': 60,
            'url': 'https://mosaic.scdn.co/60/ab67616d00001e023f97d4244eff5852477d9ee0ab67616d00001e024ea6653890e297d53e93e3e0ab67616d00001e0263facc42e4a35eb3aa182b59ab67616d00001e0266c3eb32692a0ae487079cf1',
            'width': 60,
          }),
        ]),
        'name': 'BEST OLD SONGS❤️',
        'object_type': 'playlist',
        'owner': dict({
          'display_name': 'Jamie Peeters',
          'external_urls': dict({
            'spotify': 'https://open.spotify.com/user/21gxseck66ayyrudfctb2u6wi',
          }),
          'href': 'https://api.spotify.com/v1/users/21gxseck66ayyrudfctb2u6wi',
          'object_type': 'user',
          'owner_id': '21gxseck66ayyrudfctb2u6wi',
          'uri': 'spotify:user:21gxseck66ayyrudfctb2u6wi',
        }),
        'playlist_id': '4tpbrXsklgYKdtpQIDKgGQ',
        'public': True,
        'uri': 'spotify:playlist:4tpbrXsklgYKdtpQIDKgGQ',
      }),
    ]),
    'shows': list([
      dict({
        'description': 'Join Dhar, Cral & Ben in this informative, irreverent, and largely irrelevant Warhammer Old World lore podcast.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7xb1wRaX7zlLPeoyGm0EmM',
        }),
        'href': 'https://api.spotify.com/v1/shows/7xb1wRaX7zlLPeoyGm0EmM',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8abb55c522d8db4aa1b53fdc84',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fbb55c522d8db4aa1b53fdc84',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dbb55c522d8db4aa1b53fdc84',
            'width': 64,
          }),
        ]),
        'name': 'Warhammer Old World: Laying Down The Lore',
        'publisher': 'Laying Down The Lore',
        'show_id': '7xb1wRaX7zlLPeoyGm0EmM',
        'total_episodes': 100,
        'uri': 'spotify:show:7xb1wRaX7zlLPeoyGm0EmM',
      }),
      dict({
        'description': 'Immerse yourself in the cozy world of Cottagecore with this soothing music playlist designed to help you relax and drift off to sleep. Let the gentle melodies and nature sounds transport you to a peaceful countryside escape, perfect for unwinding after a long day. Close your eyes, take a deep breath, and let the tranquil vibes of Cottagecore lull you into a restful slumber.  Enjoy the vibes💜:)  To everyone supporting my channel, Thank You and see you in my next video ❤️',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7L6zhkc7F1vo4dO5VWYnAq',
        }),
        'href': 'https://api.spotify.com/v1/shows/7L6zhkc7F1vo4dO5VWYnAq',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a94b5b31e2c34235b74228a2e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f94b5b31e2c34235b74228a2e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d94b5b31e2c34235b74228a2e',
            'width': 64,
          }),
        ]),
        'name': 'Oldies playing from another room',
        'publisher': 'Oldies playing from another room',
        'show_id': '7L6zhkc7F1vo4dO5VWYnAq',
        'total_episodes': 10,
        'uri': 'spotify:show:7L6zhkc7F1vo4dO5VWYnAq',
      }),
      dict({
        'description': 'Nemohli jste poslouchat některou naši Hudební knihovnu, Kalendárium nebo Aktuality v oldies světě? Máme pro vás náš Podcast. Oldies Radio Online, nejlepší hudba 60., 70. a 80. let.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7EAmoqvLflhaf7k5Tu7IIf',
        }),
        'href': 'https://api.spotify.com/v1/shows/7EAmoqvLflhaf7k5Tu7IIf',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a37db53b011713ba9986b1371',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f37db53b011713ba9986b1371',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d37db53b011713ba9986b1371',
            'width': 64,
          }),
        ]),
        'name': 'Oldies Radio Online Podcast',
        'publisher': 'Oldies Radio Online',
        'show_id': '7EAmoqvLflhaf7k5Tu7IIf',
        'total_episodes': 245,
        'uri': 'spotify:show:7EAmoqvLflhaf7k5Tu7IIf',
      }),
      dict({
        'description': 'A community podcast about Warhammer the Old World. A world of legends set out to bring you hot gossip, deep lore and fun insights',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6aYBEAFVNnGxImc7ZGikKE',
        }),
        'href': 'https://api.spotify.com/v1/shows/6aYBEAFVNnGxImc7ZGikKE',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a1fc3ed9a2255f6fe528f88c0',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f1fc3ed9a2255f6fe528f88c0',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d1fc3ed9a2255f6fe528f88c0',
            'width': 64,
          }),
        ]),
        'name': 'Square Based: A Warhammer Fantasy in the Old World',
        'publisher': 'Square Based Podcast',
        'show_id': '6aYBEAFVNnGxImc7ZGikKE',
        'total_episodes': 74,
        'uri': 'spotify:show:6aYBEAFVNnGxImc7ZGikKE',
      }),
      dict({
        'description': "In the mountains of central Appalachia, blood runs as deep as these hollers and just as dark. Since before our kind knew these hills, hearts of unknowable hunger and madness have slumbered beneath them. These are the darkest mountains in the world. How dare we think we can break the skin of a god and dig out its heart without bringing forth blood and darkness? Old Gods of Appalachia is a horror-anthology podcast set in the shadows of an Alternate Appalachia, a place where digging too deep into the mines was just the first mistake.To learn more about Old Gods of Appalachia, visit our website at www.oldgodsofappalachia.com, and be sure to complete your social media ritual and follow us on Facebook and Instagram @oldgodsofappalachia, or Twitter and Tumblr @oldgodspod. If you'd like to support the show, you can join or Patreon at www.patreon.com/oldgodsofappalachia, or support us on Acast at supporter.acast.com/old-gods-of-appalachia. You can also find t-shirts, hoodies, mugs, and other Old Gods merch in our shop at www.teepublic.com/stores/oldgodsofappalachia.Old Gods of Appalachia is a production of DeepNerd Media and is distributed by Rusty Quill. All rights reserved. Get Build Mama a Coffin, Black Mouthed Dog and other exclusive content on Patreon!Support this show http://supporter.acast.com/old-gods-of-appalachia. Hosted on Acast. See acast.com/privacy for more information.",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/0rOkFpkORBFMEIHfV0YKzJ',
        }),
        'href': 'https://api.spotify.com/v1/shows/0rOkFpkORBFMEIHfV0YKzJ',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a2645bffb86a9c9f4bf8b0fca',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f2645bffb86a9c9f4bf8b0fca',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d2645bffb86a9c9f4bf8b0fca',
            'width': 64,
          }),
        ]),
        'name': 'Old Gods of Appalachia',
        'publisher': 'DeepNerd Media',
        'show_id': '0rOkFpkORBFMEIHfV0YKzJ',
        'total_episodes': 107,
        'uri': 'spotify:show:0rOkFpkORBFMEIHfV0YKzJ',
      }),
      dict({
        'description': 'old account was dontha16',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/60vTi9HXDd8t0AMxxOu0lb',
        }),
        'href': 'https://api.spotify.com/v1/shows/60vTi9HXDd8t0AMxxOu0lb',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a92ec8ee36e07cff407a9bc87',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f92ec8ee36e07cff407a9bc87',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d92ec8ee36e07cff407a9bc87',
            'width': 64,
          }),
        ]),
        'name': 'donbear',
        'publisher': 'donthaboy',
        'show_id': '60vTi9HXDd8t0AMxxOu0lb',
        'total_episodes': 28,
        'uri': 'spotify:show:60vTi9HXDd8t0AMxxOu0lb',
      }),
      dict({
        'description': 'Old Cases de Moorden van Toen is een historische true crime podcast die je meeneemt in de duistere geschiedenis van moord en doodslag in Twente en de Achterhoek. In deze serie duik je samen met Annelot van Erven de historie in en reis je af naar de vergeten hoeken van Twente, waar zich de meest gruwelijke taferelen hebben afgespeeld. En waar de rechtspraak misschien nog wel luguberder was dan de moorden zelf. Van radbraken tot ophanging en van onschuldige slachtoffers tot meedogenloze moordenaars; geen detail blijft onbesproken. Luister naar Old Cases en ontdek de verhalen die nog steeds rillingen over je rug zullen jagen.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/5ArK0JxpViyd48vb7TYfmL',
        }),
        'href': 'https://api.spotify.com/v1/shows/5ArK0JxpViyd48vb7TYfmL',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a20350ee47fe12f026dfab940',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f20350ee47fe12f026dfab940',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d20350ee47fe12f026dfab940',
            'width': 64,
          }),
        ]),
        'name': 'Old Cases, de moorden van toen',
        'publisher': 'Tubantia',
        'show_id': '5ArK0JxpViyd48vb7TYfmL',
        'total_episodes': 3,
        'uri': 'spotify:show:5ArK0JxpViyd48vb7TYfmL',
      }),
      dict({
        'description': 'Welcome to the #1 Horror Podcast in the World. This podcast features professional storytelling productions. New stories released weekly. Be sure to click follow to receive all notifications. 🔔  🎉 Ad-free Podcast + over 80 Exclusive Bonus Episodes: patreon.com/DrNoSleep  ✅ Advertising Inquiries: This podcast is represented by True Native Media. Email all advertising inquiries to info@truenativemedia.com.  📈 Business Inquiries: business@drnosleep.com  * * *  EXPLICIT CONTENT DISCLAIMER: This podcast contains explicit content not limited to intense themes, strong language, and graphic depictions of violence intended for adults 18 years of age or older. These stories are NOT intended for children under the age of 18. Parental guidance is strongly advised for children under the age of 18. Listener discretion is advised.  COPYRIGHT WARNING: The use of any affiliated audio of these episodes is not allowed, as it is a direct violation of copyright law and will result in legal action.    Copyright © 2025 Dr. NoSleep      #drnosleep #horrorstories #scarystories #doctornosleep #horror #horrorpodcast #scary',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/2Sqi0dJoIudYWq430DXRH5',
        }),
        'href': 'https://api.spotify.com/v1/shows/2Sqi0dJoIudYWq430DXRH5',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a47b5c09291ffdcf498dff971',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f47b5c09291ffdcf498dff971',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d47b5c09291ffdcf498dff971',
            'width': 64,
          }),
        ]),
        'name': 'Scary Horror Stories by Dr. NoSleep',
        'publisher': 'Dr. NoSleep Studios',
        'show_id': '2Sqi0dJoIudYWq430DXRH5',
        'total_episodes': 696,
        'uri': 'spotify:show:2Sqi0dJoIudYWq430DXRH5',
      }),
      dict({
        'description': "Season 6: The Bad Guru. A yoga school in London. A guru running from the police. How did Miranda get sucked in?Also: Al Fayed: Predator at Harrods. Women accuse Mohamed Al Fayed of rape. And: The Abercrombie Guys. Investigating sexual exploitation claims against the former CEO of fashion giant Abercrombie & Fitch.Delve into a World of Secrets: the global investigations podcast from the BBC. Uncovering stories around the world and telling them, episode by episode, with gripping storytelling.Latest season: The Bad Guru. A yoga school in London. A guru running from the police. How did Miranda get sucked in? Journalist Cat McShane investigates the international yoga movement headed by Gregorian Bivolaru, the spiritual guide arrested by French police in November 2023 and charged with human trafficking, organised kidnapping, rape and organised abuse of weakness by members of a sect.“Nobody joins a cult. You just get sucked in,” says Penny, the mother of a university tutor from London.In 2017, Penny’s daughter Miranda joins a yoga charity with studios in London and Oxford. The classes make Miranda feel amazing and the people make her feel loved. “There was this sense that these people cared,” says Miranda.But as Miranda becomes more deeply involved with the international yoga movement that her group in London is part of, her mother Penny starts to worry. “When she rang us, she'd be speaking in very hushed tones,” says Penny.Miranda has fallen under the spell of guru Gregorian Bivolaru. She joins thousands of his followers from around the world on a free holiday at a coastal resort in Romania. It’s part of a search for spiritual enlightenment which will see her driven through Paris blindfolded and doing sex work in Prague.This series includes explicit sexual content and strong language.Previous seasons of World of Secrets:Season 5: Finding Mr Fox. Investigating a plot to smuggle around a hundred millions of dollars’ worth of drugs from Brazil to Europe and the miscarriage of justice that followed. But where is the man Brazilian police believe to be at the centre of it all?Season 4: Al Fayed, Predator at Harrods. Egyptian billionaire Mohamed Al Fayed – then owner of Harrods, one of the most famous shops in the world – is accused of rape and attempted rape by women who worked for him. Now they refuse to be silenced any longer.Season 3: The Apartheid Killer. All the victims were black and the youngest was just 12 years old. Some relatives are still searching for the graves. They were killed during a three-year bloodbath in the 1980s, in the South African city of East London – by one person. He killed so many, he lost count. In piecing together this story, we expose the disturbed past and racial injustices of South Africa itself.Season 2: The Disciples. The cult of Nigerian prophet TB Joshua. A story of miracles, faith and manipulation, told by people from around the world, who gave up everything for one of the most powerful religious figures of the century. Lured by TB Joshua’s claimed healing powers, they live as disciples in a guarded Lagos compound, cut off from family and friends.Season 1: The Abercrombie Guys. An investigation into claims of sexual exploitation made against the former CEO of fashion giant Abercrombie & Fitch. He and his British partner were accused by several men, recruited for sex events they hosted around the world.",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7IhoWIUlWsueU2qqDm2ME6',
        }),
        'href': 'https://api.spotify.com/v1/shows/7IhoWIUlWsueU2qqDm2ME6',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a72efc425c83967b0bc656b21',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f72efc425c83967b0bc656b21',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d72efc425c83967b0bc656b21',
            'width': 64,
          }),
        ]),
        'name': 'World Of Secrets',
        'publisher': 'BBC',
        'show_id': '7IhoWIUlWsueU2qqDm2ME6',
        'total_episodes': 49,
        'uri': 'spotify:show:7IhoWIUlWsueU2qqDm2ME6',
      }),
      dict({
        'description': 'An old texas man narrating true disturbing horror stories that feature deep woods, park rangers,camping,hiking, various cryptids and creatures such as bigfoot,wendigos,dogman and everything true crime. Hosted on Acast. See acast.com/privacy for more information.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6g9J2XiGy6nuUu0CapmYEz',
        }),
        'href': 'https://api.spotify.com/v1/shows/6g9J2XiGy6nuUu0CapmYEz',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ad4e9d55e80a87560c40acf58',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fd4e9d55e80a87560c40acf58',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dd4e9d55e80a87560c40acf58',
            'width': 64,
          }),
        ]),
        'name': 'Old Texas Scare (True Horror Stories Podcast)',
        'publisher': 'A. Rajic',
        'show_id': '6g9J2XiGy6nuUu0CapmYEz',
        'total_episodes': 512,
        'uri': 'spotify:show:6g9J2XiGy6nuUu0CapmYEz',
      }),
      dict({
        'description': 'Only Good Songs',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6WehmuNZ5iOtdOdjQAoWWQ',
        }),
        'href': 'https://api.spotify.com/v1/shows/6WehmuNZ5iOtdOdjQAoWWQ',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ab7688a7c72b0c4d9c02b3ace',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fb7688a7c72b0c4d9c02b3ace',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68db7688a7c72b0c4d9c02b3ace',
            'width': 64,
          }),
        ]),
        'name': 'Old Hip Hop',
        'publisher': 'Devil Mate',
        'show_id': '6WehmuNZ5iOtdOdjQAoWWQ',
        'total_episodes': 2,
        'uri': 'spotify:show:6WehmuNZ5iOtdOdjQAoWWQ',
      }),
      dict({
        'description': "They're old! They're queens! There's two of them! It's Two Old Queens! Join Mark Rennie and John Flynn as they search for the gayest movie ever made, using a byzantine ranking system, their own hard opinions, and some inevitable controversies from a stacked lineup of guests to come!CHECK OUT TWO OLD QUEENS EVERY WEDNESDAY STARTING JUNE 26! SUBSCRIBE NOW!!!!! Hosted on Acast. See acast.com/privacy for more information.",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/5tJ0mEZEIY1QZPZqdHwgvY',
        }),
        'href': 'https://api.spotify.com/v1/shows/5tJ0mEZEIY1QZPZqdHwgvY',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a44252d43e6cd3a052eff9d94',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f44252d43e6cd3a052eff9d94',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d44252d43e6cd3a052eff9d94',
            'width': 64,
          }),
        ]),
        'name': 'Two Old Queens',
        'publisher': 'John Flynn & Mark Rennie',
        'show_id': '5tJ0mEZEIY1QZPZqdHwgvY',
        'total_episodes': 200,
        'uri': 'spotify:show:5tJ0mEZEIY1QZPZqdHwgvY',
      }),
      dict({
        'description': 'Read through the pre-Disney Star Wars universe along with the Star Wars: Old Canon Book Club, and trace the history of Star Wars as a world, a brand, and a part of our cultural fabric.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/6g4V179CojjvrUgy5B62CY',
        }),
        'href': 'https://api.spotify.com/v1/shows/6g4V179CojjvrUgy5B62CY',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a5891926b4832680d23befc0b',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f5891926b4832680d23befc0b',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d5891926b4832680d23befc0b',
            'width': 64,
          }),
        ]),
        'name': 'Star Wars: Old Canon Book Club',
        'publisher': 'Star Wars: Old Canon Book Club',
        'show_id': '6g4V179CojjvrUgy5B62CY',
        'total_episodes': 24,
        'uri': 'spotify:show:6g4V179CojjvrUgy5B62CY',
      }),
      dict({
        'description': 'History and myth of the Cradle of Civilization, bronze age Mesopotamia, beginning with the dawn of writing. The show will cover the full history of Mesopotamia, from Gilgamesh to Nabonidas, a span of some 2500 years, with myths of heroes and gods, and tales of daily life peppered throughout. Sumer, Akkad, Old Babylon, Hittites, and Israel have all been covered in depth, current episodes get deep into the Assyrian Empire. New episodes every other Wednesday. Online at oldeststories.net.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/5PGrkXrRpTug5N4r1FRf4Y',
        }),
        'href': 'https://api.spotify.com/v1/shows/5PGrkXrRpTug5N4r1FRf4Y',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a78fd84e8ee959fa0fd7d25bb',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f78fd84e8ee959fa0fd7d25bb',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d78fd84e8ee959fa0fd7d25bb',
            'width': 64,
          }),
        ]),
        'name': 'Oldest Stories',
        'publisher': 'James Bleckley',
        'show_id': '5PGrkXrRpTug5N4r1FRf4Y',
        'total_episodes': 196,
        'uri': 'spotify:show:5PGrkXrRpTug5N4r1FRf4Y',
      }),
      dict({
        'description': 'Wyatt Earp, Jesse James, and Butch and Sundance. Lakota, Comanche and Apache. Wars, gunfights and robberies. This show covers the toughest lawmen, the wildest outlaws, and the deadliest towns — all the people and events that shaped the American West.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/1ffECQs7FDujQqRsADqvxo',
        }),
        'href': 'https://api.spotify.com/v1/shows/1ffECQs7FDujQqRsADqvxo',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8abee18dc8e43e2c3da4697729',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fbee18dc8e43e2c3da4697729',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dbee18dc8e43e2c3da4697729',
            'width': 64,
          }),
        ]),
        'name': 'Legends of the Old West',
        'publisher': 'Black Barrel Media',
        'show_id': '1ffECQs7FDujQqRsADqvxo',
        'total_episodes': 253,
        'uri': 'spotify:show:1ffECQs7FDujQqRsADqvxo',
      }),
      dict({
        'description': "Dad's Army Old Time Radio",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/5nfz0PM8lgPW4haw3CiUjc',
        }),
        'href': 'https://api.spotify.com/v1/shows/5nfz0PM8lgPW4haw3CiUjc',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a71cbd8f48e3d4e314cf5abda',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f71cbd8f48e3d4e314cf5abda',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d71cbd8f48e3d4e314cf5abda',
            'width': 64,
          }),
        ]),
        'name': "Dad's Army Old Time Radio",
        'publisher': 'sipero',
        'show_id': '5nfz0PM8lgPW4haw3CiUjc',
        'total_episodes': 100,
        'uri': 'spotify:show:5nfz0PM8lgPW4haw3CiUjc',
      }),
      dict({
        'description': 'Walk the battlefields of the First World War with Military Historian, Paul Reed. In these podcasts, Paul brings together over 40 years of studying the Great War, from the stories of veterans he interviewed, to when he spent more than a decade living on the Old Front Line in the heart of the Somme battlefields.\xa0',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/7AO6ihESPKA844MfakODi0',
        }),
        'href': 'https://api.spotify.com/v1/shows/7AO6ihESPKA844MfakODi0',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8adae65bc23a2ade4bcceabb54',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fdae65bc23a2ade4bcceabb54',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68ddae65bc23a2ade4bcceabb54',
            'width': 64,
          }),
        ]),
        'name': 'The Old Front Line',
        'publisher': 'Paul Reed',
        'show_id': '7AO6ihESPKA844MfakODi0',
        'total_episodes': 224,
        'uri': 'spotify:show:7AO6ihESPKA844MfakODi0',
      }),
      dict({
        'description': "The historical true-crime podcast that uncovers old blood with each new episode. Join us as a historian investigates history's most fascinating cases of true crime.",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/3SvMPht8MYAmRovdIpb9T2',
        }),
        'href': 'https://api.spotify.com/v1/shows/3SvMPht8MYAmRovdIpb9T2',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8ac62d11c7b85db976ad033307',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1fc62d11c7b85db976ad033307',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68dc62d11c7b85db976ad033307',
            'width': 64,
          }),
        ]),
        'name': 'Old Blood',
        'publisher': 'Old Blood',
        'show_id': '3SvMPht8MYAmRovdIpb9T2',
        'total_episodes': 31,
        'uri': 'spotify:show:3SvMPht8MYAmRovdIpb9T2',
      }),
      dict({
        'description': "Don't Get Anyone Pregnant, If You Do, Make Sure Their Hot I’m Out……Peaceee Buy my Merch....",
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/119B6Ijbq7A6aZaNQ5i0kW',
        }),
        'href': 'https://api.spotify.com/v1/shows/119B6Ijbq7A6aZaNQ5i0kW',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a9762c3369858d9b23690228e',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f9762c3369858d9b23690228e',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d9762c3369858d9b23690228e',
            'width': 64,
          }),
        ]),
        'name': 'Old Scrubby',
        'publisher': 'Old Scrubby',
        'show_id': '119B6Ijbq7A6aZaNQ5i0kW',
        'total_episodes': 337,
        'uri': 'spotify:show:119B6Ijbq7A6aZaNQ5i0kW',
      }),
      dict({
        'description': 'From the writers of the internationally successful Grumpy Old Women, award winning Comedian Jenny Eclair and Producer and Writer Judith Holder deliver Older & Wider, a podcast that offers insight, gossip and general news from the menopausal front and beyond.  A podcast worth getting your ears syringed for. Hosted on Acast. See acast.com/privacy for more information.',
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/show/3ScVA6cJZpMifpJJDmmodP',
        }),
        'href': 'https://api.spotify.com/v1/shows/3ScVA6cJZpMifpJJDmmodP',
        'images': list([
          dict({
            'height': 640,
            'url': 'https://i.scdn.co/image/ab6765630000ba8a06ed28bf2210aafba1c55788',
            'width': 640,
          }),
          dict({
            'height': 300,
            'url': 'https://i.scdn.co/image/ab67656300005f1f06ed28bf2210aafba1c55788',
            'width': 300,
          }),
          dict({
            'height': 64,
            'url': 'https://i.scdn.co/image/ab6765630000f68d06ed28bf2210aafba1c55788',
            'width': 64,
          }),
        ]),
        'name': 'Older and Wider Podcast',
        'publisher': 'Avalon ',
        'show_id': '3ScVA6cJZpMifpJJDmmodP',
        'total_episodes': 290,
        'uri': 'spotify:show:3ScVA6cJZpMifpJJDmmodP',
      }),
    ]),
    'tracks': list([
      dict({
        'artists': list([
          dict({
            'artist_id': '7jVv8c5Fj3E9VhNjxT4snq',
            'name': 'Lil Nas X',
            'uri': 'spotify:artist:7jVv8c5Fj3E9VhNjxT4snq',
          }),
          dict({
            'artist_id': '60rpJ9SgigSd16DOAG7GSa',
            'name': 'Billy Ray Cyrus',
            'uri': 'spotify:artist:60rpJ9SgigSd16DOAG7GSa',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 157066,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/2YpeDb67231RjR0MgVLzsG',
        }),
        'href': 'https://api.spotify.com/v1/tracks/2YpeDb67231RjR0MgVLzsG',
        'is_local': False,
        'name': 'Old Town Road (feat. Billy Ray Cyrus) - Remix',
        'track_id': '2YpeDb67231RjR0MgVLzsG',
        'track_number': 1,
        'uri': 'spotify:track:2YpeDb67231RjR0MgVLzsG',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '4iqEVZEav7vIiv1HStr6Gx',
            'name': 'Detailed',
            'uri': 'spotify:artist:4iqEVZEav7vIiv1HStr6Gx',
          }),
          dict({
            'artist_id': '7iH754eigCrs80sQ08MFAx',
            'name': 'Damaxy',
            'uri': 'spotify:artist:7iH754eigCrs80sQ08MFAx',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 142863,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/0aQx9BI4PXvBt570HA18LF',
        }),
        'href': 'https://api.spotify.com/v1/tracks/0aQx9BI4PXvBt570HA18LF',
        'is_local': False,
        'name': 'Oldschool',
        'track_id': '0aQx9BI4PXvBt570HA18LF',
        'track_number': 1,
        'uri': 'spotify:track:0aQx9BI4PXvBt570HA18LF',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '6v8FB84lnmJs434UJf2Mrm',
            'name': 'Neil Young',
            'uri': 'spotify:artist:6v8FB84lnmJs434UJf2Mrm',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 202146,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/16XeptMdlJTWWeIrwEAOvv',
        }),
        'href': 'https://api.spotify.com/v1/tracks/16XeptMdlJTWWeIrwEAOvv',
        'is_local': False,
        'name': 'Old Man - 2009 Remaster',
        'track_id': '16XeptMdlJTWWeIrwEAOvv',
        'track_number': 6,
        'uri': 'spotify:track:16XeptMdlJTWWeIrwEAOvv',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '485uL27bPomh29R4JmQehQ',
            'name': 'Bob Seger',
            'uri': 'spotify:artist:485uL27bPomh29R4JmQehQ',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 194146,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5EOoMWIB9iK4ZpcSex9Ec7',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5EOoMWIB9iK4ZpcSex9Ec7',
        'is_local': False,
        'name': 'Old Time Rock & Roll',
        'track_id': '5EOoMWIB9iK4ZpcSex9Ec7',
        'track_number': 3,
        'uri': 'spotify:track:5EOoMWIB9iK4ZpcSex9Ec7',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '2m62cc253Xvd9qYQ8d2X3d',
            'name': 'The Alan Parsons Project',
            'uri': 'spotify:artist:2m62cc253Xvd9qYQ8d2X3d',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 295253,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5qdlMWYpCtJFsHey3rXYms',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5qdlMWYpCtJFsHey3rXYms',
        'is_local': False,
        'name': 'Old and Wise',
        'track_id': '5qdlMWYpCtJFsHey3rXYms',
        'track_number': 10,
        'uri': 'spotify:track:5qdlMWYpCtJFsHey3rXYms',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '38GSybQjdc6sxptciOkxMq',
            'name': 'Zaho de Sagazan',
            'uri': 'spotify:artist:38GSybQjdc6sxptciOkxMq',
          }),
          dict({
            'artist_id': '2txHhyCwHjUEpJjWrEyqyX',
            'name': 'Tom Odell',
            'uri': 'spotify:artist:2txHhyCwHjUEpJjWrEyqyX',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 157491,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/4h5wTcOMYy6cw47yYoFqNq',
        }),
        'href': 'https://api.spotify.com/v1/tracks/4h5wTcOMYy6cw47yYoFqNq',
        'is_local': False,
        'name': 'Old Friend',
        'track_id': '4h5wTcOMYy6cw47yYoFqNq',
        'track_number': 1,
        'uri': 'spotify:track:4h5wTcOMYy6cw47yYoFqNq',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '1ZPGzmbFTn8GRjqTqnLiFE',
            'name': 'Niklas Dee',
            'uri': 'spotify:artist:1ZPGzmbFTn8GRjqTqnLiFE',
          }),
          dict({
            'artist_id': '6v2YWK8EvCyut0QtBcAypu',
            'name': 'Old Jim',
            'uri': 'spotify:artist:6v2YWK8EvCyut0QtBcAypu',
          }),
          dict({
            'artist_id': '61PUjJm9JH5ck3LxD6RypE',
            'name': 'Enny-Mae',
            'uri': 'spotify:artist:61PUjJm9JH5ck3LxD6RypE',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 163034,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5rL9LobdwAwFch2J8CiosG',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5rL9LobdwAwFch2J8CiosG',
        'is_local': False,
        'name': 'Not Fair',
        'track_id': '5rL9LobdwAwFch2J8CiosG',
        'track_number': 1,
        'uri': 'spotify:track:5rL9LobdwAwFch2J8CiosG',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '6v8FB84lnmJs434UJf2Mrm',
            'name': 'Neil Young',
            'uri': 'spotify:artist:6v8FB84lnmJs434UJf2Mrm',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 204779,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/6grFWYpLQul3nAHjzzPKT8',
        }),
        'href': 'https://api.spotify.com/v1/tracks/6grFWYpLQul3nAHjzzPKT8',
        'is_local': False,
        'name': 'Old Man',
        'track_id': '6grFWYpLQul3nAHjzzPKT8',
        'track_number': 6,
        'uri': 'spotify:track:6grFWYpLQul3nAHjzzPKT8',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '5schNIzWdI9gJ1QRK8SBnc',
            'name': 'Ben Howard',
            'uri': 'spotify:artist:5schNIzWdI9gJ1QRK8SBnc',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 328506,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/3CAX47TnPqTujLIQTw8nwI',
        }),
        'href': 'https://api.spotify.com/v1/tracks/3CAX47TnPqTujLIQTw8nwI',
        'is_local': False,
        'name': 'Old Pine',
        'track_id': '3CAX47TnPqTujLIQTw8nwI',
        'track_number': 1,
        'uri': 'spotify:track:3CAX47TnPqTujLIQTw8nwI',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '7vk5e3vY1uw9plTHJAMwjN',
            'name': 'Alan Walker',
            'uri': 'spotify:artist:7vk5e3vY1uw9plTHJAMwjN',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 168311,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/3BtgnlJ7MqpKOHArBbo0QF',
        }),
        'href': 'https://api.spotify.com/v1/tracks/3BtgnlJ7MqpKOHArBbo0QF',
        'is_local': False,
        'name': 'Old Habits - Instrumental',
        'track_id': '3BtgnlJ7MqpKOHArBbo0QF',
        'track_number': 1,
        'uri': 'spotify:track:3BtgnlJ7MqpKOHArBbo0QF',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '7LTI9KZLhnMbrDojlJK7Li',
            'name': 'Jacqueline Govaert',
            'uri': 'spotify:artist:7LTI9KZLhnMbrDojlJK7Li',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 197718,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/1bD85vOr7SEKdZiRduesfb',
        }),
        'href': 'https://api.spotify.com/v1/tracks/1bD85vOr7SEKdZiRduesfb',
        'is_local': False,
        'name': 'Old Records - Acoustic',
        'track_id': '1bD85vOr7SEKdZiRduesfb',
        'track_number': 2,
        'uri': 'spotify:track:1bD85vOr7SEKdZiRduesfb',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '2m62cc253Xvd9qYQ8d2X3d',
            'name': 'The Alan Parsons Project',
            'uri': 'spotify:artist:2m62cc253Xvd9qYQ8d2X3d',
          }),
        ]),
        'disc_number': 2,
        'duration_ms': 295360,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/3nQRF1plQystLrsEXiE8cR',
        }),
        'href': 'https://api.spotify.com/v1/tracks/3nQRF1plQystLrsEXiE8cR',
        'is_local': False,
        'name': 'Old and Wise',
        'track_id': '3nQRF1plQystLrsEXiE8cR',
        'track_number': 14,
        'uri': 'spotify:track:3nQRF1plQystLrsEXiE8cR',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '0tNutPAfpYEeY6YEzwIXQp',
            'name': 'Melle',
            'uri': 'spotify:artist:0tNutPAfpYEeY6YEzwIXQp',
          }),
          dict({
            'artist_id': '5VyGPIz23xzQUyXocTxAvL',
            'name': 'philine',
            'uri': 'spotify:artist:5VyGPIz23xzQUyXocTxAvL',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 219968,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/2jjknDW4cIC8d9C3kv5zrS',
        }),
        'href': 'https://api.spotify.com/v1/tracks/2jjknDW4cIC8d9C3kv5zrS',
        'is_local': False,
        'name': 'Old Summers (feat. philine)',
        'track_id': '2jjknDW4cIC8d9C3kv5zrS',
        'track_number': 1,
        'uri': 'spotify:track:2jjknDW4cIC8d9C3kv5zrS',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '2M3DTwrZjBfPAT3PBdc3fj',
            'name': 'Jerome Molnar',
            'uri': 'spotify:artist:2M3DTwrZjBfPAT3PBdc3fj',
          }),
          dict({
            'artist_id': '5Gent6oObqhnzwW8QbyV0g',
            'name': 'XEDOX',
            'uri': 'spotify:artist:5Gent6oObqhnzwW8QbyV0g',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 108631,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/25OVtoX4BmLhowGeX4oY20',
        }),
        'href': 'https://api.spotify.com/v1/tracks/25OVtoX4BmLhowGeX4oY20',
        'is_local': False,
        'name': 'Oldschool Gabber',
        'track_id': '25OVtoX4BmLhowGeX4oY20',
        'track_number': 1,
        'uri': 'spotify:track:25OVtoX4BmLhowGeX4oY20',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '7jVv8c5Fj3E9VhNjxT4snq',
            'name': 'Lil Nas X',
            'uri': 'spotify:artist:7jVv8c5Fj3E9VhNjxT4snq',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 113000,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/0F7FA14euOIX8KcbEturGH',
        }),
        'href': 'https://api.spotify.com/v1/tracks/0F7FA14euOIX8KcbEturGH',
        'is_local': False,
        'name': 'Old Town Road',
        'track_id': '0F7FA14euOIX8KcbEturGH',
        'track_number': 8,
        'uri': 'spotify:track:0F7FA14euOIX8KcbEturGH',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '1y2yWwjdEenenVdGvm3hqi',
            'name': 'Dennis van Aarssen',
            'uri': 'spotify:artist:1y2yWwjdEenenVdGvm3hqi',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 194274,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/1PWRiAJgSjYTHavha9QuyK',
        }),
        'href': 'https://api.spotify.com/v1/tracks/1PWRiAJgSjYTHavha9QuyK',
        'is_local': False,
        'name': 'The Old Songs',
        'track_id': '1PWRiAJgSjYTHavha9QuyK',
        'track_number': 5,
        'uri': 'spotify:track:1PWRiAJgSjYTHavha9QuyK',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '5arKwJZEvT5uKq4o0JfqR4',
            'name': 'Isabel LaRosa',
            'uri': 'spotify:artist:5arKwJZEvT5uKq4o0JfqR4',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 137778,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/75c2zaSdDBSX0A8Jyvm4fO',
        }),
        'href': 'https://api.spotify.com/v1/tracks/75c2zaSdDBSX0A8Jyvm4fO',
        'is_local': False,
        'name': 'older',
        'track_id': '75c2zaSdDBSX0A8Jyvm4fO',
        'track_number': 1,
        'uri': 'spotify:track:75c2zaSdDBSX0A8Jyvm4fO',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '4xnihxcoXWK3UqryOSnbw5',
            'name': 'Sasha Alex Sloan',
            'uri': 'spotify:artist:4xnihxcoXWK3UqryOSnbw5',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 191001,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/52iLDrSoRtf9lcgFuLVfqE',
        }),
        'href': 'https://api.spotify.com/v1/tracks/52iLDrSoRtf9lcgFuLVfqE',
        'is_local': False,
        'name': 'Older',
        'track_id': '52iLDrSoRtf9lcgFuLVfqE',
        'track_number': 1,
        'uri': 'spotify:track:52iLDrSoRtf9lcgFuLVfqE',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '3LBeTl00bT5IUdyAKfTZxx',
            'name': 'Little Teddy',
            'uri': 'spotify:artist:3LBeTl00bT5IUdyAKfTZxx',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 127714,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/5VM0aiAPstckpkMCp670B7',
        }),
        'href': 'https://api.spotify.com/v1/tracks/5VM0aiAPstckpkMCp670B7',
        'is_local': False,
        'name': 'Old MacDonald Had A Farm',
        'track_id': '5VM0aiAPstckpkMCp670B7',
        'track_number': 4,
        'uri': 'spotify:track:5VM0aiAPstckpkMCp670B7',
      }),
      dict({
        'artists': list([
          dict({
            'artist_id': '1WXsfnqh2lT56nFMI5Pc0E',
            'name': 'Dimitri K',
            'uri': 'spotify:artist:1WXsfnqh2lT56nFMI5Pc0E',
          }),
        ]),
        'disc_number': 1,
        'duration_ms': 190200,
        'explicit': False,
        'external_urls': dict({
          'spotify': 'https://open.spotify.com/track/25u5QAh24GoKsaM1pzQJfw',
        }),
        'href': 'https://api.spotify.com/v1/tracks/25u5QAh24GoKsaM1pzQJfw',
        'is_local': False,
        'name': 'New School Rules',
        'track_id': '25u5QAh24GoKsaM1pzQJfw',
        'track_number': 1,
        'uri': 'spotify:track:25u5QAh24GoKsaM1pzQJfw',
      }),
    ]),
  })
# ---
